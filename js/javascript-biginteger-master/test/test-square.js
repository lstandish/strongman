assertBigIntegerEquals(BigInteger('-1').square(), '1');
assertBigIntegerEquals(BigInteger('-10').square(), '100');
assertBigIntegerEquals(BigInteger('-10382920172764259631161291566832110498728571665273468869392943465294841471140482060286063576379366322132921666926978663170724525373317846').square(), '107805031313995003066643800773492005896890790379181269108528318412719942701436410044340440250902274791764123543411621287645784683161618122011197318585151002411429486884801028968129297404969609764068108099010810137829491924397663001109737648585241082184445004112514142079716');
assertBigIntegerEquals(BigInteger('-11').square(), '121');
assertBigIntegerEquals(BigInteger('-1172290517283489544939406852089205386178936311839198780769751961843').square(), '1374265056912791499482590306707946201706753605284666440076912237742972666230338991808718687990453079315836577501022385841147327956649');
assertBigIntegerEquals(BigInteger('-12').square(), '144');
assertBigIntegerEquals(BigInteger('-1837136452135876595090550153572873896770651284584639295180294340451197182366215393646776507208945963806918500036871565004942392689').square(), '3375070343766395995647450304819250666409914826609359289190848704387743637251383841758068622464023732973276531735985126792570122116881599030982971510720762838229666647182025681925891327267432731104875157521875529531786500095257509951385506600403815492280650721');
assertBigIntegerEquals(BigInteger('-2').square(), '4');
assertBigIntegerEquals(BigInteger('-22500337651075').square(), '506265194412383248448655625');
assertBigIntegerEquals(BigInteger('-3').square(), '9');
assertBigIntegerEquals(BigInteger('-3637207813391075449499802309344516805263882000874223693582254353805168176127378').square(), '13229280677793088329939275810208111291957272239618947001803072820405270653687902328443829189733612623287997212717055106157375627676676837801156399861281154884');
assertBigIntegerEquals(BigInteger('-386177060206595181').square(), '149132721829808239260177288812422761');
assertBigIntegerEquals(BigInteger('-4').square(), '16');
assertBigIntegerEquals(BigInteger('-4058609845030255322787927324697291767462212839343543404480173027642001084243712955124167160014073282561256047537514271126812692432828445').square(), '16472313874176513126862384758878881698982635089399885391043520139444990074063821244508512678157313224529024372729377896646374138837293090945970630581577870825574478261226202056036487688594906163513584348672981151302212455669168121753897008953285126540334756588342801118025');
assertBigIntegerEquals(BigInteger('-48414711404820602860').square(), '2343984280412066152505067419933840179600');
assertBigIntegerEquals(BigInteger('-5').square(), '25');
assertBigIntegerEquals(BigInteger('-517283489544939406').square(), '267582208555789435755494024211632836');
assertBigIntegerEquals(BigInteger('-5253733178').square(), '27601712305617979684');
assertBigIntegerEquals(BigInteger('-56476027754399235337367077671129335454475297890272086473917042777774357035192523962600412743390371480817482968845011802503481654919628674396676679172793008943130').square(), '3189541710915672736503200652535750671625657991154996728603479906365563423076317812851974051757296762572865523020105432095681235266709934152479388763887242370025529748725546831062476224668436078112997506739069143532965951271350703180921233820043875420085111371965642778631918631318259855276521533053640470160604159574196900');
assertBigIntegerEquals(BigInteger('-6').square(), '36');
assertBigIntegerEquals(BigInteger('-6200332365770319240482082941470115079599077007166534745743189064').square(), '38444121446018963861879945861480003547038267807439084069165233938282574794387961706202535252178997323732251524072387344849196096');
assertBigIntegerEquals(BigInteger('-62830174493130245841622500337651075078551735130057577990903380908177068729572036547874980598308615836957947097531639434378385662007612195835738520240851492479820084794237').square(), '3947630826837194544961275640878396883310286203045567274699924177515218990360249345443048420832728622170666475864766103621568034382982703610602909595816072434122106193644669119757119138307842069095756896136161234759527896832925951683308475560211269633393330949407376382095583283616310403205989948289910334607100677224302675156784742628412169');
assertBigIntegerEquals(BigInteger('-7').square(), '49');
assertBigIntegerEquals(BigInteger('-8').square(), '64');
assertBigIntegerEquals(BigInteger('-81476721982').square(), '6638456224932122008324');
assertBigIntegerEquals(BigInteger('-8551735130057577').square(), '73132173734660883407163335110929');
assertBigIntegerEquals(BigInteger('-9').square(), '81');
assertBigIntegerEquals(BigInteger('-92641540038838004562939772').square(), '8582454940767625107983925409088690550291362899411984');
assertBigIntegerEquals(BigInteger('-99608').square(), '9921753664');
assertBigIntegerEquals(BigInteger('-999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999').square(), '999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999998000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001');
assertBigIntegerEquals(BigInteger('0').square(), '0');
assertBigIntegerEquals(BigInteger('1').square(), '1');
assertBigIntegerEquals(BigInteger('10').square(), '100');
assertBigIntegerEquals(BigInteger('100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001').square(), '10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001');
assertBigIntegerEquals(BigInteger('10666593355947573327272706917131734751210128203987445873731').square(), '113776213821144914738022486960838463644360294872324041081766251028662132462237985235368851115950769224334377995860361');
assertBigIntegerEquals(BigInteger('1069098453').square(), '1142971502206993209');
assertBigIntegerEquals(BigInteger('1157088278178259580357648900890859241864806376958863839397325291381770958183861770602065951818156880455074305').square(), '1338853283497529425777845659710079058067913763933818533214650936678456098068350301210206995361024110558641832470606376713906579761922268785641095283511974564568922891271391457068316663775629466956857301029423071233025');
assertBigIntegerEquals(BigInteger('13024584').square(), '169639788373056');
assertBigIntegerEquals(BigInteger('1674508628301744').square(), '2803979146256988246985513441536');
assertBigIntegerEquals(BigInteger('186584847831855051371620112806257408623512415396284950662844187803996672517802144153048620046442071246772010940398135071352737249628365452884576153529405652404446967865012969').square(), '34813905440436504664684584272637295381520617040047545629928176667058789235685884803905471674290747576577496700853691054257657149358284334819026791013021249446082097444626282868104424281571878034561974816332359215411072126718111394234621038999722061112430070654716157955674161885822478801492805654853403153967692433834341499004409203677482538194961');
assertBigIntegerEquals(BigInteger('19618436088').square(), '384883034538940743744');
assertBigIntegerEquals(BigInteger('2').square(), '4');
assertBigIntegerEquals(BigInteger('2006543443808700').square(), '4026216591891677614362195690000');
assertBigIntegerEquals(BigInteger('2036547874980598').square(), '4147527247087989421258876437604');
assertBigIntegerEquals(BigInteger('20892053861').square(), '436477914530925007321');
assertBigIntegerEquals(BigInteger('22132921').square(), '489866191992241');
assertBigIntegerEquals(BigInteger('259580357648900890').square(), '67381962077131298788707825042792100');
assertBigIntegerEquals(BigInteger('277460220803170133683867392965292283112343804101723022926366400443977002252439890142191924145722').square(), '76984174128143924623792778247714317865575139186977096075960574714501171629601359811977532536437964477698583617409742046222251152980107093069877468464475598260056771575354593422759119490901284');
assertBigIntegerEquals(BigInteger('281730631083492345939880995488156886227560025405478318560679548823005924860027080130180488567341041504647761475086105739806209157598562028').square(), '79372148490702863617596893678117947719628953093606040514183415256017317515956397423813911816061025353008162133173716140488291756998547952907068350511818262805910006013402408122826957509737977391958765523013389342795902589733727711129498810529699103312340409370457293363472784');
assertBigIntegerEquals(BigInteger('291381770958').square(), '84903336446620372237764');
assertBigIntegerEquals(BigInteger('29345943771049638448341763000882111422888869776329135051738765553372901428808277728681262509298083850142596121922395107683607562149684613672741812462867438468129481833454428891').square(), '861184415813607074668836594405343108305719172908554784472343808387893328311783050978774722457495553176147562811059248340945723337061091945152678320717144642904099892592986063335978347990118090549949497836438728826595960359225852561772013694988753206512836881251062417156594279694716438688268418762190079936769825295381126719242678436756180022975489881');
assertBigIntegerEquals(BigInteger('3').square(), '9');
assertBigIntegerEquals(BigInteger('30514941987010').square(), '931161684470585807008740100');
assertBigIntegerEquals(BigInteger('331582054172310013635181905646204661989171235666401937872152206243737362946').square(), '109946658649128732521533986674562052495470898836340671514171013909928899670657524321952778406577838967052388213825733048791446419361019847870133798916');
assertBigIntegerEquals(BigInteger('37002422595522161032086725924934617976428107255803333508613776941553061663685318873827666814514069881821456625761423079496362499025456096895').square(), '1369179277937608980369101426872175839038290697326692094699954993693145774877666479842531552309201480424967224484769962056680727798790274880361389262383726940895215592501567289819229814186608607603228873821763744097115015251819930904832113734649650543022384149824694079127628641025');
assertBigIntegerEquals(BigInteger('3878182266978880305749543422914777569229636428599764504429913656112581921875376162093486587388727').square(), '15040297695909447241547280933674376411070864812830495174301700750325865458375326665810049787348663908992590047350103348715704824738460774500889175453785863865260622951516628673138090160606680529');
assertBigIntegerEquals(BigInteger('398515777680123136680192434809946769445426177827640125940511670935').square(), '158814825059993330002135658383319288463862614735512505267434561971532264948348447332050923885138382113744150667766736914945723774225');
assertBigIntegerEquals(BigInteger('4').square(), '16');
assertBigIntegerEquals(BigInteger('4227224306971170988716827185870519579782234150611831494926052243428192243517312221765490067054576722892784347440519').square(), '17869425341447896854514820351952099950176838272043160488332681804096796248209980430443653438350972340234322465034815158590584306931299809584299980546104122977887214586900482788284278215869565124702106719035125032229344706242989361');
assertBigIntegerEquals(BigInteger('45').square(), '2025');
assertBigIntegerEquals(BigInteger('455488708838288456390976738').square(), '207469963879171116568408210617715516212735865657120644');
assertBigIntegerEquals(BigInteger('457069814657032').square(), '208912815470613584495787049024');
assertBigIntegerEquals(BigInteger('49322023916480219931134361554779109184328608328288970393765456338166453156711394763089925921351717462304949844030257888954892465078891795224360276323254119437225715082044426').square(), '2432662043217846812912928318410671025527409950834612914944196598676907038749680098795563103866843022753760846532011015132652161227785052451231739115234754851787392278864563221551893553215194563399721574729635869779210367810245110765119204661069141747391058242624255631498732018530230816967930345901372027115227980392045219986478645960467837669476');
assertBigIntegerEquals(BigInteger('5').square(), '25');
assertBigIntegerEquals(BigInteger('5084968096321475').square(), '25856900540607245453426546175625');
assertBigIntegerEquals(BigInteger('55').square(), '3025');
assertBigIntegerEquals(BigInteger('568').square(), '322624');
assertBigIntegerEquals(BigInteger('57637936').square(), '3322131666340096');
assertBigIntegerEquals(BigInteger('5836').square(), '34058896');
assertBigIntegerEquals(BigInteger('59884393257606720065434438087005410690984535879799964926170716775084968096321475304418452574570698146570322630514941987010240775').square(), '3586140555831693194040145435143902359445381635574147750102683851871501380652813714401702692701869621463139085799357600950553381585670268129034019591394931757348062095504584623826915677726634263937249500401569570763093723535584261448531479053944723472600625');
assertBigIntegerEquals(BigInteger('6').square(), '36');
assertBigIntegerEquals(BigInteger('60806103829201727642').square(), '3697382262887661005130303376477546880164');
assertBigIntegerEquals(BigInteger('609675204133978287633625528598941105000580436935869275085195396511118657').square(), '371703854535808095707152824373572999994221185030587804455078716738484890728226372849443272992074899418219758277243453517814079033448625533483649');
assertBigIntegerEquals(BigInteger('6210519985880524850605465904155380215027236600816531155434179432768928168336607689660372950027916871196753780651842392').square(), '38570558495021434589724094708519944790640150499543410686829700782385246243912248978566034744230986139837317824602952979434038281479431583365912949345297323141210159751319863355426222599774875129540483545344410140384173605382024008281664');
assertBigIntegerEquals(BigInteger('6311612915668321104').square(), '39836457597231165448193569418051778816');
assertBigIntegerEquals(BigInteger('69269786631707').square(), '4798303340002213808457733849');
assertBigIntegerEquals(BigInteger('7').square(), '49');
assertBigIntegerEquals(BigInteger('72857166527346886').square(), '5308166714393555503864890173896996');
assertBigIntegerEquals(BigInteger('74').square(), '5476');
assertBigIntegerEquals(BigInteger('741726877267167619973325056129665793788090097446918345851946144674659150945563383288173470555019454324813728624538707250061357818563470553275478682986167042300023900431181658126').square(), '550158760460503937868052971540024470026102131221891947687249853760646198629000665658225743053309722090523015044417991560263489530467945052218043974755954100673731632729767945470518117139379412286347051737656596431978364092890060457060430290479811795677034815841406327541860817598757477733739195648639493468767766047306361411484972128776045104286741831876');
assertBigIntegerEquals(BigInteger('775231172').square(), '600983370040493584');
assertBigIntegerEquals(BigInteger('7788756649308352170040978424345039101369279128462').square(), '60664730142145069230375579670934914014051542134836591762173963507954652285917551060041654298485444');
assertBigIntegerEquals(BigInteger('78716745').square(), '6196325943395025');
assertBigIntegerEquals(BigInteger('79799964926170716').square(), '6368034402218076447100643175952656');
assertBigIntegerEquals(BigInteger('8').square(), '64');
assertBigIntegerEquals(BigInteger('8452').square(), '71436304');
assertBigIntegerEquals(BigInteger('88').square(), '7744');
assertBigIntegerEquals(BigInteger('9').square(), '81');
assertBigIntegerEquals(BigInteger('903380908177068729').square(), '816097065258825482396205198789675441');
assertBigIntegerEquals(BigInteger('92418648063').square(), '8541206509792653651969');
assertBigIntegerEquals(BigInteger('92943465').square(), '8638487686206225');
assertBigIntegerEquals(BigInteger('9296774590944767474820600872642800769619683318924936104009986193324803815411614362179498856768115670315738686032176477835121223726227113448428529006128447204').square(), '86430017794836248607633839584113727386756686653436238606626129363070529837248799222364209793914465293968214727352604115429272860841704322019618457181503296612124551461170184160850521621755662621891337737800660114358860918988545223723406697526935278226519439270299020025048479193809650867866233525323697132215417616');
assertBigIntegerEquals(BigInteger('936311839198780769').square(), '876679860223803495799962176124231361');
assertBigIntegerEquals(BigInteger('9511570882781').square(), '90469980658167331642293961');
assertBigIntegerEquals(BigInteger('9588638393973').square(), '91941986250373112762724729');
assertBigIntegerEquals(BigInteger('988439325760').square(), '977012300708883399577600');
assertBigIntegerEquals(BigInteger('999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999').square(), '999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999998000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001');
