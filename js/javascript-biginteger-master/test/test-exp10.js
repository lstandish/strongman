assertBigIntegerEquals(BigInteger('-1').exp10(-1), '0');
assertBigIntegerEquals(BigInteger('-1').exp10(-10), '0');
assertBigIntegerEquals(BigInteger('-1').exp10(-11), '0');
assertBigIntegerEquals(BigInteger('-1').exp10(-12), '0');
assertBigIntegerEquals(BigInteger('-1').exp10(-2), '0');
assertBigIntegerEquals(BigInteger('-1').exp10(-3), '0');
assertBigIntegerEquals(BigInteger('-1').exp10(-4), '0');
assertBigIntegerEquals(BigInteger('-1').exp10(-5), '0');
assertBigIntegerEquals(BigInteger('-1').exp10(-6), '0');
assertBigIntegerEquals(BigInteger('-1').exp10(-7), '0');
assertBigIntegerEquals(BigInteger('-1').exp10(-8), '0');
assertBigIntegerEquals(BigInteger('-1').exp10(-9), '0');
assertBigIntegerEquals(BigInteger('-1').exp10(0), '-1');
assertBigIntegerEquals(BigInteger('-1').exp10(1), '-10');
assertBigIntegerEquals(BigInteger('-1').exp10(10), '-10000000000');
assertBigIntegerEquals(BigInteger('-1').exp10(2), '-100');
assertBigIntegerEquals(BigInteger('-1').exp10(3), '-1000');
assertBigIntegerEquals(BigInteger('-1').exp10(4), '-10000');
assertBigIntegerEquals(BigInteger('-1').exp10(5), '-100000');
assertBigIntegerEquals(BigInteger('-1').exp10(568), '-10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('-1').exp10(6), '-1000000');
assertBigIntegerEquals(BigInteger('-1').exp10(7), '-10000000');
assertBigIntegerEquals(BigInteger('-1').exp10(74), '-100000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('-1').exp10(8), '-100000000');
assertBigIntegerEquals(BigInteger('-1').exp10(9), '-1000000000');
assertBigIntegerEquals(BigInteger('-10').exp10(-1), '-1');
assertBigIntegerEquals(BigInteger('-10').exp10(-10), '0');
assertBigIntegerEquals(BigInteger('-10').exp10(-11), '0');
assertBigIntegerEquals(BigInteger('-10').exp10(-12), '0');
assertBigIntegerEquals(BigInteger('-10').exp10(-2), '0');
assertBigIntegerEquals(BigInteger('-10').exp10(-3), '0');
assertBigIntegerEquals(BigInteger('-10').exp10(-4), '0');
assertBigIntegerEquals(BigInteger('-10').exp10(-5), '0');
assertBigIntegerEquals(BigInteger('-10').exp10(-6), '0');
assertBigIntegerEquals(BigInteger('-10').exp10(-7), '0');
assertBigIntegerEquals(BigInteger('-10').exp10(-8), '0');
assertBigIntegerEquals(BigInteger('-10').exp10(-9), '0');
assertBigIntegerEquals(BigInteger('-10').exp10(0), '-10');
assertBigIntegerEquals(BigInteger('-10').exp10(1), '-100');
assertBigIntegerEquals(BigInteger('-10').exp10(10), '-100000000000');
assertBigIntegerEquals(BigInteger('-10').exp10(2), '-1000');
assertBigIntegerEquals(BigInteger('-10').exp10(3), '-10000');
assertBigIntegerEquals(BigInteger('-10').exp10(4), '-100000');
assertBigIntegerEquals(BigInteger('-10').exp10(5), '-1000000');
assertBigIntegerEquals(BigInteger('-10').exp10(568), '-100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('-10').exp10(6), '-10000000');
assertBigIntegerEquals(BigInteger('-10').exp10(7), '-100000000');
assertBigIntegerEquals(BigInteger('-10').exp10(74), '-1000000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('-10').exp10(8), '-1000000000');
assertBigIntegerEquals(BigInteger('-10').exp10(9), '-10000000000');
assertBigIntegerEquals(BigInteger('-10382920172764259631161291566832110498728571665273468869392943465294841471140482060286063576379366322132921666926978663170724525373317846').exp10(-1), '-1038292017276425963116129156683211049872857166527346886939294346529484147114048206028606357637936632213292166692697866317072452537331784');
assertBigIntegerEquals(BigInteger('-10382920172764259631161291566832110498728571665273468869392943465294841471140482060286063576379366322132921666926978663170724525373317846').exp10(-10), '-1038292017276425963116129156683211049872857166527346886939294346529484147114048206028606357637936632213292166692697866317072452');
assertBigIntegerEquals(BigInteger('-10382920172764259631161291566832110498728571665273468869392943465294841471140482060286063576379366322132921666926978663170724525373317846').exp10(-11), '-103829201727642596311612915668321104987285716652734688693929434652948414711404820602860635763793663221329216669269786631707245');
assertBigIntegerEquals(BigInteger('-10382920172764259631161291566832110498728571665273468869392943465294841471140482060286063576379366322132921666926978663170724525373317846').exp10(-12), '-10382920172764259631161291566832110498728571665273468869392943465294841471140482060286063576379366322132921666926978663170724');
assertBigIntegerEquals(BigInteger('-10382920172764259631161291566832110498728571665273468869392943465294841471140482060286063576379366322132921666926978663170724525373317846').exp10(-2), '-103829201727642596311612915668321104987285716652734688693929434652948414711404820602860635763793663221329216669269786631707245253733178');
assertBigIntegerEquals(BigInteger('-10382920172764259631161291566832110498728571665273468869392943465294841471140482060286063576379366322132921666926978663170724525373317846').exp10(-3), '-10382920172764259631161291566832110498728571665273468869392943465294841471140482060286063576379366322132921666926978663170724525373317');
assertBigIntegerEquals(BigInteger('-10382920172764259631161291566832110498728571665273468869392943465294841471140482060286063576379366322132921666926978663170724525373317846').exp10(-4), '-1038292017276425963116129156683211049872857166527346886939294346529484147114048206028606357637936632213292166692697866317072452537331');
assertBigIntegerEquals(BigInteger('-10382920172764259631161291566832110498728571665273468869392943465294841471140482060286063576379366322132921666926978663170724525373317846').exp10(-5), '-103829201727642596311612915668321104987285716652734688693929434652948414711404820602860635763793663221329216669269786631707245253733');
assertBigIntegerEquals(BigInteger('-10382920172764259631161291566832110498728571665273468869392943465294841471140482060286063576379366322132921666926978663170724525373317846').exp10(-6), '-10382920172764259631161291566832110498728571665273468869392943465294841471140482060286063576379366322132921666926978663170724525373');
assertBigIntegerEquals(BigInteger('-10382920172764259631161291566832110498728571665273468869392943465294841471140482060286063576379366322132921666926978663170724525373317846').exp10(-7), '-1038292017276425963116129156683211049872857166527346886939294346529484147114048206028606357637936632213292166692697866317072452537');
assertBigIntegerEquals(BigInteger('-10382920172764259631161291566832110498728571665273468869392943465294841471140482060286063576379366322132921666926978663170724525373317846').exp10(-8), '-103829201727642596311612915668321104987285716652734688693929434652948414711404820602860635763793663221329216669269786631707245253');
assertBigIntegerEquals(BigInteger('-10382920172764259631161291566832110498728571665273468869392943465294841471140482060286063576379366322132921666926978663170724525373317846').exp10(-9), '-10382920172764259631161291566832110498728571665273468869392943465294841471140482060286063576379366322132921666926978663170724525');
assertBigIntegerEquals(BigInteger('-10382920172764259631161291566832110498728571665273468869392943465294841471140482060286063576379366322132921666926978663170724525373317846').exp10(0), '-10382920172764259631161291566832110498728571665273468869392943465294841471140482060286063576379366322132921666926978663170724525373317846');
assertBigIntegerEquals(BigInteger('-10382920172764259631161291566832110498728571665273468869392943465294841471140482060286063576379366322132921666926978663170724525373317846').exp10(1), '-103829201727642596311612915668321104987285716652734688693929434652948414711404820602860635763793663221329216669269786631707245253733178460');
assertBigIntegerEquals(BigInteger('-10382920172764259631161291566832110498728571665273468869392943465294841471140482060286063576379366322132921666926978663170724525373317846').exp10(10), '-103829201727642596311612915668321104987285716652734688693929434652948414711404820602860635763793663221329216669269786631707245253733178460000000000');
assertBigIntegerEquals(BigInteger('-10382920172764259631161291566832110498728571665273468869392943465294841471140482060286063576379366322132921666926978663170724525373317846').exp10(2), '-1038292017276425963116129156683211049872857166527346886939294346529484147114048206028606357637936632213292166692697866317072452537331784600');
assertBigIntegerEquals(BigInteger('-10382920172764259631161291566832110498728571665273468869392943465294841471140482060286063576379366322132921666926978663170724525373317846').exp10(3), '-10382920172764259631161291566832110498728571665273468869392943465294841471140482060286063576379366322132921666926978663170724525373317846000');
assertBigIntegerEquals(BigInteger('-10382920172764259631161291566832110498728571665273468869392943465294841471140482060286063576379366322132921666926978663170724525373317846').exp10(4), '-103829201727642596311612915668321104987285716652734688693929434652948414711404820602860635763793663221329216669269786631707245253733178460000');
assertBigIntegerEquals(BigInteger('-10382920172764259631161291566832110498728571665273468869392943465294841471140482060286063576379366322132921666926978663170724525373317846').exp10(5), '-1038292017276425963116129156683211049872857166527346886939294346529484147114048206028606357637936632213292166692697866317072452537331784600000');
assertBigIntegerEquals(BigInteger('-10382920172764259631161291566832110498728571665273468869392943465294841471140482060286063576379366322132921666926978663170724525373317846').exp10(568), '-103829201727642596311612915668321104987285716652734688693929434652948414711404820602860635763793663221329216669269786631707245253733178460000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('-10382920172764259631161291566832110498728571665273468869392943465294841471140482060286063576379366322132921666926978663170724525373317846').exp10(6), '-10382920172764259631161291566832110498728571665273468869392943465294841471140482060286063576379366322132921666926978663170724525373317846000000');
assertBigIntegerEquals(BigInteger('-10382920172764259631161291566832110498728571665273468869392943465294841471140482060286063576379366322132921666926978663170724525373317846').exp10(7), '-103829201727642596311612915668321104987285716652734688693929434652948414711404820602860635763793663221329216669269786631707245253733178460000000');
assertBigIntegerEquals(BigInteger('-10382920172764259631161291566832110498728571665273468869392943465294841471140482060286063576379366322132921666926978663170724525373317846').exp10(74), '-1038292017276425963116129156683211049872857166527346886939294346529484147114048206028606357637936632213292166692697866317072452537331784600000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('-10382920172764259631161291566832110498728571665273468869392943465294841471140482060286063576379366322132921666926978663170724525373317846').exp10(8), '-1038292017276425963116129156683211049872857166527346886939294346529484147114048206028606357637936632213292166692697866317072452537331784600000000');
assertBigIntegerEquals(BigInteger('-10382920172764259631161291566832110498728571665273468869392943465294841471140482060286063576379366322132921666926978663170724525373317846').exp10(9), '-10382920172764259631161291566832110498728571665273468869392943465294841471140482060286063576379366322132921666926978663170724525373317846000000000');
assertBigIntegerEquals(BigInteger('-11').exp10(-1), '-1');
assertBigIntegerEquals(BigInteger('-11').exp10(-10), '0');
assertBigIntegerEquals(BigInteger('-11').exp10(-11), '0');
assertBigIntegerEquals(BigInteger('-11').exp10(-12), '0');
assertBigIntegerEquals(BigInteger('-11').exp10(-2), '0');
assertBigIntegerEquals(BigInteger('-11').exp10(-3), '0');
assertBigIntegerEquals(BigInteger('-11').exp10(-4), '0');
assertBigIntegerEquals(BigInteger('-11').exp10(-5), '0');
assertBigIntegerEquals(BigInteger('-11').exp10(-6), '0');
assertBigIntegerEquals(BigInteger('-11').exp10(-7), '0');
assertBigIntegerEquals(BigInteger('-11').exp10(-8), '0');
assertBigIntegerEquals(BigInteger('-11').exp10(-9), '0');
assertBigIntegerEquals(BigInteger('-11').exp10(0), '-11');
assertBigIntegerEquals(BigInteger('-11').exp10(1), '-110');
assertBigIntegerEquals(BigInteger('-11').exp10(10), '-110000000000');
assertBigIntegerEquals(BigInteger('-11').exp10(2), '-1100');
assertBigIntegerEquals(BigInteger('-11').exp10(3), '-11000');
assertBigIntegerEquals(BigInteger('-11').exp10(4), '-110000');
assertBigIntegerEquals(BigInteger('-11').exp10(5), '-1100000');
assertBigIntegerEquals(BigInteger('-11').exp10(568), '-110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('-11').exp10(6), '-11000000');
assertBigIntegerEquals(BigInteger('-11').exp10(7), '-110000000');
assertBigIntegerEquals(BigInteger('-11').exp10(74), '-1100000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('-11').exp10(8), '-1100000000');
assertBigIntegerEquals(BigInteger('-11').exp10(9), '-11000000000');
assertBigIntegerEquals(BigInteger('-1172290517283489544939406852089205386178936311839198780769751961843').exp10(-1), '-117229051728348954493940685208920538617893631183919878076975196184');
assertBigIntegerEquals(BigInteger('-1172290517283489544939406852089205386178936311839198780769751961843').exp10(-10), '-117229051728348954493940685208920538617893631183919878076');
assertBigIntegerEquals(BigInteger('-1172290517283489544939406852089205386178936311839198780769751961843').exp10(-11), '-11722905172834895449394068520892053861789363118391987807');
assertBigIntegerEquals(BigInteger('-1172290517283489544939406852089205386178936311839198780769751961843').exp10(-12), '-1172290517283489544939406852089205386178936311839198780');
assertBigIntegerEquals(BigInteger('-1172290517283489544939406852089205386178936311839198780769751961843').exp10(-2), '-11722905172834895449394068520892053861789363118391987807697519618');
assertBigIntegerEquals(BigInteger('-1172290517283489544939406852089205386178936311839198780769751961843').exp10(-3), '-1172290517283489544939406852089205386178936311839198780769751961');
assertBigIntegerEquals(BigInteger('-1172290517283489544939406852089205386178936311839198780769751961843').exp10(-4), '-117229051728348954493940685208920538617893631183919878076975196');
assertBigIntegerEquals(BigInteger('-1172290517283489544939406852089205386178936311839198780769751961843').exp10(-5), '-11722905172834895449394068520892053861789363118391987807697519');
assertBigIntegerEquals(BigInteger('-1172290517283489544939406852089205386178936311839198780769751961843').exp10(-6), '-1172290517283489544939406852089205386178936311839198780769751');
assertBigIntegerEquals(BigInteger('-1172290517283489544939406852089205386178936311839198780769751961843').exp10(-7), '-117229051728348954493940685208920538617893631183919878076975');
assertBigIntegerEquals(BigInteger('-1172290517283489544939406852089205386178936311839198780769751961843').exp10(-8), '-11722905172834895449394068520892053861789363118391987807697');
assertBigIntegerEquals(BigInteger('-1172290517283489544939406852089205386178936311839198780769751961843').exp10(-9), '-1172290517283489544939406852089205386178936311839198780769');
assertBigIntegerEquals(BigInteger('-1172290517283489544939406852089205386178936311839198780769751961843').exp10(0), '-1172290517283489544939406852089205386178936311839198780769751961843');
assertBigIntegerEquals(BigInteger('-1172290517283489544939406852089205386178936311839198780769751961843').exp10(1), '-11722905172834895449394068520892053861789363118391987807697519618430');
assertBigIntegerEquals(BigInteger('-1172290517283489544939406852089205386178936311839198780769751961843').exp10(10), '-11722905172834895449394068520892053861789363118391987807697519618430000000000');
assertBigIntegerEquals(BigInteger('-1172290517283489544939406852089205386178936311839198780769751961843').exp10(2), '-117229051728348954493940685208920538617893631183919878076975196184300');
assertBigIntegerEquals(BigInteger('-1172290517283489544939406852089205386178936311839198780769751961843').exp10(3), '-1172290517283489544939406852089205386178936311839198780769751961843000');
assertBigIntegerEquals(BigInteger('-1172290517283489544939406852089205386178936311839198780769751961843').exp10(4), '-11722905172834895449394068520892053861789363118391987807697519618430000');
assertBigIntegerEquals(BigInteger('-1172290517283489544939406852089205386178936311839198780769751961843').exp10(5), '-117229051728348954493940685208920538617893631183919878076975196184300000');
assertBigIntegerEquals(BigInteger('-1172290517283489544939406852089205386178936311839198780769751961843').exp10(568), '-11722905172834895449394068520892053861789363118391987807697519618430000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('-1172290517283489544939406852089205386178936311839198780769751961843').exp10(6), '-1172290517283489544939406852089205386178936311839198780769751961843000000');
assertBigIntegerEquals(BigInteger('-1172290517283489544939406852089205386178936311839198780769751961843').exp10(7), '-11722905172834895449394068520892053861789363118391987807697519618430000000');
assertBigIntegerEquals(BigInteger('-1172290517283489544939406852089205386178936311839198780769751961843').exp10(74), '-117229051728348954493940685208920538617893631183919878076975196184300000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('-1172290517283489544939406852089205386178936311839198780769751961843').exp10(8), '-117229051728348954493940685208920538617893631183919878076975196184300000000');
assertBigIntegerEquals(BigInteger('-1172290517283489544939406852089205386178936311839198780769751961843').exp10(9), '-1172290517283489544939406852089205386178936311839198780769751961843000000000');
assertBigIntegerEquals(BigInteger('-12').exp10(-1), '-1');
assertBigIntegerEquals(BigInteger('-12').exp10(-10), '0');
assertBigIntegerEquals(BigInteger('-12').exp10(-11), '0');
assertBigIntegerEquals(BigInteger('-12').exp10(-12), '0');
assertBigIntegerEquals(BigInteger('-12').exp10(-2), '0');
assertBigIntegerEquals(BigInteger('-12').exp10(-3), '0');
assertBigIntegerEquals(BigInteger('-12').exp10(-4), '0');
assertBigIntegerEquals(BigInteger('-12').exp10(-5), '0');
assertBigIntegerEquals(BigInteger('-12').exp10(-6), '0');
assertBigIntegerEquals(BigInteger('-12').exp10(-7), '0');
assertBigIntegerEquals(BigInteger('-12').exp10(-8), '0');
assertBigIntegerEquals(BigInteger('-12').exp10(-9), '0');
assertBigIntegerEquals(BigInteger('-12').exp10(0), '-12');
assertBigIntegerEquals(BigInteger('-12').exp10(1), '-120');
assertBigIntegerEquals(BigInteger('-12').exp10(10), '-120000000000');
assertBigIntegerEquals(BigInteger('-12').exp10(2), '-1200');
assertBigIntegerEquals(BigInteger('-12').exp10(3), '-12000');
assertBigIntegerEquals(BigInteger('-12').exp10(4), '-120000');
assertBigIntegerEquals(BigInteger('-12').exp10(5), '-1200000');
assertBigIntegerEquals(BigInteger('-12').exp10(568), '-120000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('-12').exp10(6), '-12000000');
assertBigIntegerEquals(BigInteger('-12').exp10(7), '-120000000');
assertBigIntegerEquals(BigInteger('-12').exp10(74), '-1200000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('-12').exp10(8), '-1200000000');
assertBigIntegerEquals(BigInteger('-12').exp10(9), '-12000000000');
assertBigIntegerEquals(BigInteger('-1837136452135876595090550153572873896770651284584639295180294340451197182366215393646776507208945963806918500036871565004942392689').exp10(-1), '-183713645213587659509055015357287389677065128458463929518029434045119718236621539364677650720894596380691850003687156500494239268');
assertBigIntegerEquals(BigInteger('-1837136452135876595090550153572873896770651284584639295180294340451197182366215393646776507208945963806918500036871565004942392689').exp10(-10), '-183713645213587659509055015357287389677065128458463929518029434045119718236621539364677650720894596380691850003687156500');
assertBigIntegerEquals(BigInteger('-1837136452135876595090550153572873896770651284584639295180294340451197182366215393646776507208945963806918500036871565004942392689').exp10(-11), '-18371364521358765950905501535728738967706512845846392951802943404511971823662153936467765072089459638069185000368715650');
assertBigIntegerEquals(BigInteger('-1837136452135876595090550153572873896770651284584639295180294340451197182366215393646776507208945963806918500036871565004942392689').exp10(-12), '-1837136452135876595090550153572873896770651284584639295180294340451197182366215393646776507208945963806918500036871565');
assertBigIntegerEquals(BigInteger('-1837136452135876595090550153572873896770651284584639295180294340451197182366215393646776507208945963806918500036871565004942392689').exp10(-2), '-18371364521358765950905501535728738967706512845846392951802943404511971823662153936467765072089459638069185000368715650049423926');
assertBigIntegerEquals(BigInteger('-1837136452135876595090550153572873896770651284584639295180294340451197182366215393646776507208945963806918500036871565004942392689').exp10(-3), '-1837136452135876595090550153572873896770651284584639295180294340451197182366215393646776507208945963806918500036871565004942392');
assertBigIntegerEquals(BigInteger('-1837136452135876595090550153572873896770651284584639295180294340451197182366215393646776507208945963806918500036871565004942392689').exp10(-4), '-183713645213587659509055015357287389677065128458463929518029434045119718236621539364677650720894596380691850003687156500494239');
assertBigIntegerEquals(BigInteger('-1837136452135876595090550153572873896770651284584639295180294340451197182366215393646776507208945963806918500036871565004942392689').exp10(-5), '-18371364521358765950905501535728738967706512845846392951802943404511971823662153936467765072089459638069185000368715650049423');
assertBigIntegerEquals(BigInteger('-1837136452135876595090550153572873896770651284584639295180294340451197182366215393646776507208945963806918500036871565004942392689').exp10(-6), '-1837136452135876595090550153572873896770651284584639295180294340451197182366215393646776507208945963806918500036871565004942');
assertBigIntegerEquals(BigInteger('-1837136452135876595090550153572873896770651284584639295180294340451197182366215393646776507208945963806918500036871565004942392689').exp10(-7), '-183713645213587659509055015357287389677065128458463929518029434045119718236621539364677650720894596380691850003687156500494');
assertBigIntegerEquals(BigInteger('-1837136452135876595090550153572873896770651284584639295180294340451197182366215393646776507208945963806918500036871565004942392689').exp10(-8), '-18371364521358765950905501535728738967706512845846392951802943404511971823662153936467765072089459638069185000368715650049');
assertBigIntegerEquals(BigInteger('-1837136452135876595090550153572873896770651284584639295180294340451197182366215393646776507208945963806918500036871565004942392689').exp10(-9), '-1837136452135876595090550153572873896770651284584639295180294340451197182366215393646776507208945963806918500036871565004');
assertBigIntegerEquals(BigInteger('-1837136452135876595090550153572873896770651284584639295180294340451197182366215393646776507208945963806918500036871565004942392689').exp10(0), '-1837136452135876595090550153572873896770651284584639295180294340451197182366215393646776507208945963806918500036871565004942392689');
assertBigIntegerEquals(BigInteger('-1837136452135876595090550153572873896770651284584639295180294340451197182366215393646776507208945963806918500036871565004942392689').exp10(1), '-18371364521358765950905501535728738967706512845846392951802943404511971823662153936467765072089459638069185000368715650049423926890');
assertBigIntegerEquals(BigInteger('-1837136452135876595090550153572873896770651284584639295180294340451197182366215393646776507208945963806918500036871565004942392689').exp10(10), '-18371364521358765950905501535728738967706512845846392951802943404511971823662153936467765072089459638069185000368715650049423926890000000000');
assertBigIntegerEquals(BigInteger('-1837136452135876595090550153572873896770651284584639295180294340451197182366215393646776507208945963806918500036871565004942392689').exp10(2), '-183713645213587659509055015357287389677065128458463929518029434045119718236621539364677650720894596380691850003687156500494239268900');
assertBigIntegerEquals(BigInteger('-1837136452135876595090550153572873896770651284584639295180294340451197182366215393646776507208945963806918500036871565004942392689').exp10(3), '-1837136452135876595090550153572873896770651284584639295180294340451197182366215393646776507208945963806918500036871565004942392689000');
assertBigIntegerEquals(BigInteger('-1837136452135876595090550153572873896770651284584639295180294340451197182366215393646776507208945963806918500036871565004942392689').exp10(4), '-18371364521358765950905501535728738967706512845846392951802943404511971823662153936467765072089459638069185000368715650049423926890000');
assertBigIntegerEquals(BigInteger('-1837136452135876595090550153572873896770651284584639295180294340451197182366215393646776507208945963806918500036871565004942392689').exp10(5), '-183713645213587659509055015357287389677065128458463929518029434045119718236621539364677650720894596380691850003687156500494239268900000');
assertBigIntegerEquals(BigInteger('-1837136452135876595090550153572873896770651284584639295180294340451197182366215393646776507208945963806918500036871565004942392689').exp10(568), '-18371364521358765950905501535728738967706512845846392951802943404511971823662153936467765072089459638069185000368715650049423926890000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('-1837136452135876595090550153572873896770651284584639295180294340451197182366215393646776507208945963806918500036871565004942392689').exp10(6), '-1837136452135876595090550153572873896770651284584639295180294340451197182366215393646776507208945963806918500036871565004942392689000000');
assertBigIntegerEquals(BigInteger('-1837136452135876595090550153572873896770651284584639295180294340451197182366215393646776507208945963806918500036871565004942392689').exp10(7), '-18371364521358765950905501535728738967706512845846392951802943404511971823662153936467765072089459638069185000368715650049423926890000000');
assertBigIntegerEquals(BigInteger('-1837136452135876595090550153572873896770651284584639295180294340451197182366215393646776507208945963806918500036871565004942392689').exp10(74), '-183713645213587659509055015357287389677065128458463929518029434045119718236621539364677650720894596380691850003687156500494239268900000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('-1837136452135876595090550153572873896770651284584639295180294340451197182366215393646776507208945963806918500036871565004942392689').exp10(8), '-183713645213587659509055015357287389677065128458463929518029434045119718236621539364677650720894596380691850003687156500494239268900000000');
assertBigIntegerEquals(BigInteger('-1837136452135876595090550153572873896770651284584639295180294340451197182366215393646776507208945963806918500036871565004942392689').exp10(9), '-1837136452135876595090550153572873896770651284584639295180294340451197182366215393646776507208945963806918500036871565004942392689000000000');
assertBigIntegerEquals(BigInteger('-2').exp10(-1), '0');
assertBigIntegerEquals(BigInteger('-2').exp10(-10), '0');
assertBigIntegerEquals(BigInteger('-2').exp10(-11), '0');
assertBigIntegerEquals(BigInteger('-2').exp10(-12), '0');
assertBigIntegerEquals(BigInteger('-2').exp10(-2), '0');
assertBigIntegerEquals(BigInteger('-2').exp10(-3), '0');
assertBigIntegerEquals(BigInteger('-2').exp10(-4), '0');
assertBigIntegerEquals(BigInteger('-2').exp10(-5), '0');
assertBigIntegerEquals(BigInteger('-2').exp10(-6), '0');
assertBigIntegerEquals(BigInteger('-2').exp10(-7), '0');
assertBigIntegerEquals(BigInteger('-2').exp10(-8), '0');
assertBigIntegerEquals(BigInteger('-2').exp10(-9), '0');
assertBigIntegerEquals(BigInteger('-2').exp10(0), '-2');
assertBigIntegerEquals(BigInteger('-2').exp10(1), '-20');
assertBigIntegerEquals(BigInteger('-2').exp10(10), '-20000000000');
assertBigIntegerEquals(BigInteger('-2').exp10(2), '-200');
assertBigIntegerEquals(BigInteger('-2').exp10(3), '-2000');
assertBigIntegerEquals(BigInteger('-2').exp10(4), '-20000');
assertBigIntegerEquals(BigInteger('-2').exp10(5), '-200000');
assertBigIntegerEquals(BigInteger('-2').exp10(568), '-20000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('-2').exp10(6), '-2000000');
assertBigIntegerEquals(BigInteger('-2').exp10(7), '-20000000');
assertBigIntegerEquals(BigInteger('-2').exp10(74), '-200000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('-2').exp10(8), '-200000000');
assertBigIntegerEquals(BigInteger('-2').exp10(9), '-2000000000');
assertBigIntegerEquals(BigInteger('-22500337651075').exp10(-1), '-2250033765107');
assertBigIntegerEquals(BigInteger('-22500337651075').exp10(-10), '-2250');
assertBigIntegerEquals(BigInteger('-22500337651075').exp10(-11), '-225');
assertBigIntegerEquals(BigInteger('-22500337651075').exp10(-12), '-22');
assertBigIntegerEquals(BigInteger('-22500337651075').exp10(-2), '-225003376510');
assertBigIntegerEquals(BigInteger('-22500337651075').exp10(-3), '-22500337651');
assertBigIntegerEquals(BigInteger('-22500337651075').exp10(-4), '-2250033765');
assertBigIntegerEquals(BigInteger('-22500337651075').exp10(-5), '-225003376');
assertBigIntegerEquals(BigInteger('-22500337651075').exp10(-6), '-22500337');
assertBigIntegerEquals(BigInteger('-22500337651075').exp10(-7), '-2250033');
assertBigIntegerEquals(BigInteger('-22500337651075').exp10(-8), '-225003');
assertBigIntegerEquals(BigInteger('-22500337651075').exp10(-9), '-22500');
assertBigIntegerEquals(BigInteger('-22500337651075').exp10(0), '-22500337651075');
assertBigIntegerEquals(BigInteger('-22500337651075').exp10(1), '-225003376510750');
assertBigIntegerEquals(BigInteger('-22500337651075').exp10(10), '-225003376510750000000000');
assertBigIntegerEquals(BigInteger('-22500337651075').exp10(2), '-2250033765107500');
assertBigIntegerEquals(BigInteger('-22500337651075').exp10(3), '-22500337651075000');
assertBigIntegerEquals(BigInteger('-22500337651075').exp10(4), '-225003376510750000');
assertBigIntegerEquals(BigInteger('-22500337651075').exp10(5), '-2250033765107500000');
assertBigIntegerEquals(BigInteger('-22500337651075').exp10(568), '-225003376510750000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('-22500337651075').exp10(6), '-22500337651075000000');
assertBigIntegerEquals(BigInteger('-22500337651075').exp10(7), '-225003376510750000000');
assertBigIntegerEquals(BigInteger('-22500337651075').exp10(74), '-2250033765107500000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('-22500337651075').exp10(8), '-2250033765107500000000');
assertBigIntegerEquals(BigInteger('-22500337651075').exp10(9), '-22500337651075000000000');
assertBigIntegerEquals(BigInteger('-3').exp10(-1), '0');
assertBigIntegerEquals(BigInteger('-3').exp10(-10), '0');
assertBigIntegerEquals(BigInteger('-3').exp10(-11), '0');
assertBigIntegerEquals(BigInteger('-3').exp10(-12), '0');
assertBigIntegerEquals(BigInteger('-3').exp10(-2), '0');
assertBigIntegerEquals(BigInteger('-3').exp10(-3), '0');
assertBigIntegerEquals(BigInteger('-3').exp10(-4), '0');
assertBigIntegerEquals(BigInteger('-3').exp10(-5), '0');
assertBigIntegerEquals(BigInteger('-3').exp10(-6), '0');
assertBigIntegerEquals(BigInteger('-3').exp10(-7), '0');
assertBigIntegerEquals(BigInteger('-3').exp10(-8), '0');
assertBigIntegerEquals(BigInteger('-3').exp10(-9), '0');
assertBigIntegerEquals(BigInteger('-3').exp10(0), '-3');
assertBigIntegerEquals(BigInteger('-3').exp10(1), '-30');
assertBigIntegerEquals(BigInteger('-3').exp10(10), '-30000000000');
assertBigIntegerEquals(BigInteger('-3').exp10(2), '-300');
assertBigIntegerEquals(BigInteger('-3').exp10(3), '-3000');
assertBigIntegerEquals(BigInteger('-3').exp10(4), '-30000');
assertBigIntegerEquals(BigInteger('-3').exp10(5), '-300000');
assertBigIntegerEquals(BigInteger('-3').exp10(568), '-30000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('-3').exp10(6), '-3000000');
assertBigIntegerEquals(BigInteger('-3').exp10(7), '-30000000');
assertBigIntegerEquals(BigInteger('-3').exp10(74), '-300000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('-3').exp10(8), '-300000000');
assertBigIntegerEquals(BigInteger('-3').exp10(9), '-3000000000');
assertBigIntegerEquals(BigInteger('-3637207813391075449499802309344516805263882000874223693582254353805168176127378').exp10(-1), '-363720781339107544949980230934451680526388200087422369358225435380516817612737');
assertBigIntegerEquals(BigInteger('-3637207813391075449499802309344516805263882000874223693582254353805168176127378').exp10(-10), '-363720781339107544949980230934451680526388200087422369358225435380516');
assertBigIntegerEquals(BigInteger('-3637207813391075449499802309344516805263882000874223693582254353805168176127378').exp10(-11), '-36372078133910754494998023093445168052638820008742236935822543538051');
assertBigIntegerEquals(BigInteger('-3637207813391075449499802309344516805263882000874223693582254353805168176127378').exp10(-12), '-3637207813391075449499802309344516805263882000874223693582254353805');
assertBigIntegerEquals(BigInteger('-3637207813391075449499802309344516805263882000874223693582254353805168176127378').exp10(-2), '-36372078133910754494998023093445168052638820008742236935822543538051681761273');
assertBigIntegerEquals(BigInteger('-3637207813391075449499802309344516805263882000874223693582254353805168176127378').exp10(-3), '-3637207813391075449499802309344516805263882000874223693582254353805168176127');
assertBigIntegerEquals(BigInteger('-3637207813391075449499802309344516805263882000874223693582254353805168176127378').exp10(-4), '-363720781339107544949980230934451680526388200087422369358225435380516817612');
assertBigIntegerEquals(BigInteger('-3637207813391075449499802309344516805263882000874223693582254353805168176127378').exp10(-5), '-36372078133910754494998023093445168052638820008742236935822543538051681761');
assertBigIntegerEquals(BigInteger('-3637207813391075449499802309344516805263882000874223693582254353805168176127378').exp10(-6), '-3637207813391075449499802309344516805263882000874223693582254353805168176');
assertBigIntegerEquals(BigInteger('-3637207813391075449499802309344516805263882000874223693582254353805168176127378').exp10(-7), '-363720781339107544949980230934451680526388200087422369358225435380516817');
assertBigIntegerEquals(BigInteger('-3637207813391075449499802309344516805263882000874223693582254353805168176127378').exp10(-8), '-36372078133910754494998023093445168052638820008742236935822543538051681');
assertBigIntegerEquals(BigInteger('-3637207813391075449499802309344516805263882000874223693582254353805168176127378').exp10(-9), '-3637207813391075449499802309344516805263882000874223693582254353805168');
assertBigIntegerEquals(BigInteger('-3637207813391075449499802309344516805263882000874223693582254353805168176127378').exp10(0), '-3637207813391075449499802309344516805263882000874223693582254353805168176127378');
assertBigIntegerEquals(BigInteger('-3637207813391075449499802309344516805263882000874223693582254353805168176127378').exp10(1), '-36372078133910754494998023093445168052638820008742236935822543538051681761273780');
assertBigIntegerEquals(BigInteger('-3637207813391075449499802309344516805263882000874223693582254353805168176127378').exp10(10), '-36372078133910754494998023093445168052638820008742236935822543538051681761273780000000000');
assertBigIntegerEquals(BigInteger('-3637207813391075449499802309344516805263882000874223693582254353805168176127378').exp10(2), '-363720781339107544949980230934451680526388200087422369358225435380516817612737800');
assertBigIntegerEquals(BigInteger('-3637207813391075449499802309344516805263882000874223693582254353805168176127378').exp10(3), '-3637207813391075449499802309344516805263882000874223693582254353805168176127378000');
assertBigIntegerEquals(BigInteger('-3637207813391075449499802309344516805263882000874223693582254353805168176127378').exp10(4), '-36372078133910754494998023093445168052638820008742236935822543538051681761273780000');
assertBigIntegerEquals(BigInteger('-3637207813391075449499802309344516805263882000874223693582254353805168176127378').exp10(5), '-363720781339107544949980230934451680526388200087422369358225435380516817612737800000');
assertBigIntegerEquals(BigInteger('-3637207813391075449499802309344516805263882000874223693582254353805168176127378').exp10(568), '-36372078133910754494998023093445168052638820008742236935822543538051681761273780000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('-3637207813391075449499802309344516805263882000874223693582254353805168176127378').exp10(6), '-3637207813391075449499802309344516805263882000874223693582254353805168176127378000000');
assertBigIntegerEquals(BigInteger('-3637207813391075449499802309344516805263882000874223693582254353805168176127378').exp10(7), '-36372078133910754494998023093445168052638820008742236935822543538051681761273780000000');
assertBigIntegerEquals(BigInteger('-3637207813391075449499802309344516805263882000874223693582254353805168176127378').exp10(74), '-363720781339107544949980230934451680526388200087422369358225435380516817612737800000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('-3637207813391075449499802309344516805263882000874223693582254353805168176127378').exp10(8), '-363720781339107544949980230934451680526388200087422369358225435380516817612737800000000');
assertBigIntegerEquals(BigInteger('-3637207813391075449499802309344516805263882000874223693582254353805168176127378').exp10(9), '-3637207813391075449499802309344516805263882000874223693582254353805168176127378000000000');
assertBigIntegerEquals(BigInteger('-386177060206595181').exp10(-1), '-38617706020659518');
assertBigIntegerEquals(BigInteger('-386177060206595181').exp10(-10), '-38617706');
assertBigIntegerEquals(BigInteger('-386177060206595181').exp10(-11), '-3861770');
assertBigIntegerEquals(BigInteger('-386177060206595181').exp10(-12), '-386177');
assertBigIntegerEquals(BigInteger('-386177060206595181').exp10(-2), '-3861770602065951');
assertBigIntegerEquals(BigInteger('-386177060206595181').exp10(-3), '-386177060206595');
assertBigIntegerEquals(BigInteger('-386177060206595181').exp10(-4), '-38617706020659');
assertBigIntegerEquals(BigInteger('-386177060206595181').exp10(-5), '-3861770602065');
assertBigIntegerEquals(BigInteger('-386177060206595181').exp10(-6), '-386177060206');
assertBigIntegerEquals(BigInteger('-386177060206595181').exp10(-7), '-38617706020');
assertBigIntegerEquals(BigInteger('-386177060206595181').exp10(-8), '-3861770602');
assertBigIntegerEquals(BigInteger('-386177060206595181').exp10(-9), '-386177060');
assertBigIntegerEquals(BigInteger('-386177060206595181').exp10(0), '-386177060206595181');
assertBigIntegerEquals(BigInteger('-386177060206595181').exp10(1), '-3861770602065951810');
assertBigIntegerEquals(BigInteger('-386177060206595181').exp10(10), '-3861770602065951810000000000');
assertBigIntegerEquals(BigInteger('-386177060206595181').exp10(2), '-38617706020659518100');
assertBigIntegerEquals(BigInteger('-386177060206595181').exp10(3), '-386177060206595181000');
assertBigIntegerEquals(BigInteger('-386177060206595181').exp10(4), '-3861770602065951810000');
assertBigIntegerEquals(BigInteger('-386177060206595181').exp10(5), '-38617706020659518100000');
assertBigIntegerEquals(BigInteger('-386177060206595181').exp10(568), '-3861770602065951810000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('-386177060206595181').exp10(6), '-386177060206595181000000');
assertBigIntegerEquals(BigInteger('-386177060206595181').exp10(7), '-3861770602065951810000000');
assertBigIntegerEquals(BigInteger('-386177060206595181').exp10(74), '-38617706020659518100000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('-386177060206595181').exp10(8), '-38617706020659518100000000');
assertBigIntegerEquals(BigInteger('-386177060206595181').exp10(9), '-386177060206595181000000000');
assertBigIntegerEquals(BigInteger('-4').exp10(-1), '0');
assertBigIntegerEquals(BigInteger('-4').exp10(-10), '0');
assertBigIntegerEquals(BigInteger('-4').exp10(-11), '0');
assertBigIntegerEquals(BigInteger('-4').exp10(-12), '0');
assertBigIntegerEquals(BigInteger('-4').exp10(-2), '0');
assertBigIntegerEquals(BigInteger('-4').exp10(-3), '0');
assertBigIntegerEquals(BigInteger('-4').exp10(-4), '0');
assertBigIntegerEquals(BigInteger('-4').exp10(-5), '0');
assertBigIntegerEquals(BigInteger('-4').exp10(-6), '0');
assertBigIntegerEquals(BigInteger('-4').exp10(-7), '0');
assertBigIntegerEquals(BigInteger('-4').exp10(-8), '0');
assertBigIntegerEquals(BigInteger('-4').exp10(-9), '0');
assertBigIntegerEquals(BigInteger('-4').exp10(0), '-4');
assertBigIntegerEquals(BigInteger('-4').exp10(1), '-40');
assertBigIntegerEquals(BigInteger('-4').exp10(10), '-40000000000');
assertBigIntegerEquals(BigInteger('-4').exp10(2), '-400');
assertBigIntegerEquals(BigInteger('-4').exp10(3), '-4000');
assertBigIntegerEquals(BigInteger('-4').exp10(4), '-40000');
assertBigIntegerEquals(BigInteger('-4').exp10(5), '-400000');
assertBigIntegerEquals(BigInteger('-4').exp10(568), '-40000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('-4').exp10(6), '-4000000');
assertBigIntegerEquals(BigInteger('-4').exp10(7), '-40000000');
assertBigIntegerEquals(BigInteger('-4').exp10(74), '-400000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('-4').exp10(8), '-400000000');
assertBigIntegerEquals(BigInteger('-4').exp10(9), '-4000000000');
assertBigIntegerEquals(BigInteger('-4058609845030255322787927324697291767462212839343543404480173027642001084243712955124167160014073282561256047537514271126812692432828445').exp10(-1), '-405860984503025532278792732469729176746221283934354340448017302764200108424371295512416716001407328256125604753751427112681269243282844');
assertBigIntegerEquals(BigInteger('-4058609845030255322787927324697291767462212839343543404480173027642001084243712955124167160014073282561256047537514271126812692432828445').exp10(-10), '-405860984503025532278792732469729176746221283934354340448017302764200108424371295512416716001407328256125604753751427112681269');
assertBigIntegerEquals(BigInteger('-4058609845030255322787927324697291767462212839343543404480173027642001084243712955124167160014073282561256047537514271126812692432828445').exp10(-11), '-40586098450302553227879273246972917674622128393435434044801730276420010842437129551241671600140732825612560475375142711268126');
assertBigIntegerEquals(BigInteger('-4058609845030255322787927324697291767462212839343543404480173027642001084243712955124167160014073282561256047537514271126812692432828445').exp10(-12), '-4058609845030255322787927324697291767462212839343543404480173027642001084243712955124167160014073282561256047537514271126812');
assertBigIntegerEquals(BigInteger('-4058609845030255322787927324697291767462212839343543404480173027642001084243712955124167160014073282561256047537514271126812692432828445').exp10(-2), '-40586098450302553227879273246972917674622128393435434044801730276420010842437129551241671600140732825612560475375142711268126924328284');
assertBigIntegerEquals(BigInteger('-4058609845030255322787927324697291767462212839343543404480173027642001084243712955124167160014073282561256047537514271126812692432828445').exp10(-3), '-4058609845030255322787927324697291767462212839343543404480173027642001084243712955124167160014073282561256047537514271126812692432828');
assertBigIntegerEquals(BigInteger('-4058609845030255322787927324697291767462212839343543404480173027642001084243712955124167160014073282561256047537514271126812692432828445').exp10(-4), '-405860984503025532278792732469729176746221283934354340448017302764200108424371295512416716001407328256125604753751427112681269243282');
assertBigIntegerEquals(BigInteger('-4058609845030255322787927324697291767462212839343543404480173027642001084243712955124167160014073282561256047537514271126812692432828445').exp10(-5), '-40586098450302553227879273246972917674622128393435434044801730276420010842437129551241671600140732825612560475375142711268126924328');
assertBigIntegerEquals(BigInteger('-4058609845030255322787927324697291767462212839343543404480173027642001084243712955124167160014073282561256047537514271126812692432828445').exp10(-6), '-4058609845030255322787927324697291767462212839343543404480173027642001084243712955124167160014073282561256047537514271126812692432');
assertBigIntegerEquals(BigInteger('-4058609845030255322787927324697291767462212839343543404480173027642001084243712955124167160014073282561256047537514271126812692432828445').exp10(-7), '-405860984503025532278792732469729176746221283934354340448017302764200108424371295512416716001407328256125604753751427112681269243');
assertBigIntegerEquals(BigInteger('-4058609845030255322787927324697291767462212839343543404480173027642001084243712955124167160014073282561256047537514271126812692432828445').exp10(-8), '-40586098450302553227879273246972917674622128393435434044801730276420010842437129551241671600140732825612560475375142711268126924');
assertBigIntegerEquals(BigInteger('-4058609845030255322787927324697291767462212839343543404480173027642001084243712955124167160014073282561256047537514271126812692432828445').exp10(-9), '-4058609845030255322787927324697291767462212839343543404480173027642001084243712955124167160014073282561256047537514271126812692');
assertBigIntegerEquals(BigInteger('-4058609845030255322787927324697291767462212839343543404480173027642001084243712955124167160014073282561256047537514271126812692432828445').exp10(0), '-4058609845030255322787927324697291767462212839343543404480173027642001084243712955124167160014073282561256047537514271126812692432828445');
assertBigIntegerEquals(BigInteger('-4058609845030255322787927324697291767462212839343543404480173027642001084243712955124167160014073282561256047537514271126812692432828445').exp10(1), '-40586098450302553227879273246972917674622128393435434044801730276420010842437129551241671600140732825612560475375142711268126924328284450');
assertBigIntegerEquals(BigInteger('-4058609845030255322787927324697291767462212839343543404480173027642001084243712955124167160014073282561256047537514271126812692432828445').exp10(10), '-40586098450302553227879273246972917674622128393435434044801730276420010842437129551241671600140732825612560475375142711268126924328284450000000000');
assertBigIntegerEquals(BigInteger('-4058609845030255322787927324697291767462212839343543404480173027642001084243712955124167160014073282561256047537514271126812692432828445').exp10(2), '-405860984503025532278792732469729176746221283934354340448017302764200108424371295512416716001407328256125604753751427112681269243282844500');
assertBigIntegerEquals(BigInteger('-4058609845030255322787927324697291767462212839343543404480173027642001084243712955124167160014073282561256047537514271126812692432828445').exp10(3), '-4058609845030255322787927324697291767462212839343543404480173027642001084243712955124167160014073282561256047537514271126812692432828445000');
assertBigIntegerEquals(BigInteger('-4058609845030255322787927324697291767462212839343543404480173027642001084243712955124167160014073282561256047537514271126812692432828445').exp10(4), '-40586098450302553227879273246972917674622128393435434044801730276420010842437129551241671600140732825612560475375142711268126924328284450000');
assertBigIntegerEquals(BigInteger('-4058609845030255322787927324697291767462212839343543404480173027642001084243712955124167160014073282561256047537514271126812692432828445').exp10(5), '-405860984503025532278792732469729176746221283934354340448017302764200108424371295512416716001407328256125604753751427112681269243282844500000');
assertBigIntegerEquals(BigInteger('-4058609845030255322787927324697291767462212839343543404480173027642001084243712955124167160014073282561256047537514271126812692432828445').exp10(568), '-40586098450302553227879273246972917674622128393435434044801730276420010842437129551241671600140732825612560475375142711268126924328284450000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('-4058609845030255322787927324697291767462212839343543404480173027642001084243712955124167160014073282561256047537514271126812692432828445').exp10(6), '-4058609845030255322787927324697291767462212839343543404480173027642001084243712955124167160014073282561256047537514271126812692432828445000000');
assertBigIntegerEquals(BigInteger('-4058609845030255322787927324697291767462212839343543404480173027642001084243712955124167160014073282561256047537514271126812692432828445').exp10(7), '-40586098450302553227879273246972917674622128393435434044801730276420010842437129551241671600140732825612560475375142711268126924328284450000000');
assertBigIntegerEquals(BigInteger('-4058609845030255322787927324697291767462212839343543404480173027642001084243712955124167160014073282561256047537514271126812692432828445').exp10(74), '-405860984503025532278792732469729176746221283934354340448017302764200108424371295512416716001407328256125604753751427112681269243282844500000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('-4058609845030255322787927324697291767462212839343543404480173027642001084243712955124167160014073282561256047537514271126812692432828445').exp10(8), '-405860984503025532278792732469729176746221283934354340448017302764200108424371295512416716001407328256125604753751427112681269243282844500000000');
assertBigIntegerEquals(BigInteger('-4058609845030255322787927324697291767462212839343543404480173027642001084243712955124167160014073282561256047537514271126812692432828445').exp10(9), '-4058609845030255322787927324697291767462212839343543404480173027642001084243712955124167160014073282561256047537514271126812692432828445000000000');
assertBigIntegerEquals(BigInteger('-48414711404820602860').exp10(-1), '-4841471140482060286');
assertBigIntegerEquals(BigInteger('-48414711404820602860').exp10(-10), '-4841471140');
assertBigIntegerEquals(BigInteger('-48414711404820602860').exp10(-11), '-484147114');
assertBigIntegerEquals(BigInteger('-48414711404820602860').exp10(-12), '-48414711');
assertBigIntegerEquals(BigInteger('-48414711404820602860').exp10(-2), '-484147114048206028');
assertBigIntegerEquals(BigInteger('-48414711404820602860').exp10(-3), '-48414711404820602');
assertBigIntegerEquals(BigInteger('-48414711404820602860').exp10(-4), '-4841471140482060');
assertBigIntegerEquals(BigInteger('-48414711404820602860').exp10(-5), '-484147114048206');
assertBigIntegerEquals(BigInteger('-48414711404820602860').exp10(-6), '-48414711404820');
assertBigIntegerEquals(BigInteger('-48414711404820602860').exp10(-7), '-4841471140482');
assertBigIntegerEquals(BigInteger('-48414711404820602860').exp10(-8), '-484147114048');
assertBigIntegerEquals(BigInteger('-48414711404820602860').exp10(-9), '-48414711404');
assertBigIntegerEquals(BigInteger('-48414711404820602860').exp10(0), '-48414711404820602860');
assertBigIntegerEquals(BigInteger('-48414711404820602860').exp10(1), '-484147114048206028600');
assertBigIntegerEquals(BigInteger('-48414711404820602860').exp10(10), '-484147114048206028600000000000');
assertBigIntegerEquals(BigInteger('-48414711404820602860').exp10(2), '-4841471140482060286000');
assertBigIntegerEquals(BigInteger('-48414711404820602860').exp10(3), '-48414711404820602860000');
assertBigIntegerEquals(BigInteger('-48414711404820602860').exp10(4), '-484147114048206028600000');
assertBigIntegerEquals(BigInteger('-48414711404820602860').exp10(5), '-4841471140482060286000000');
assertBigIntegerEquals(BigInteger('-48414711404820602860').exp10(568), '-484147114048206028600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('-48414711404820602860').exp10(6), '-48414711404820602860000000');
assertBigIntegerEquals(BigInteger('-48414711404820602860').exp10(7), '-484147114048206028600000000');
assertBigIntegerEquals(BigInteger('-48414711404820602860').exp10(74), '-4841471140482060286000000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('-48414711404820602860').exp10(8), '-4841471140482060286000000000');
assertBigIntegerEquals(BigInteger('-48414711404820602860').exp10(9), '-48414711404820602860000000000');
assertBigIntegerEquals(BigInteger('-5').exp10(-1), '0');
assertBigIntegerEquals(BigInteger('-5').exp10(-10), '0');
assertBigIntegerEquals(BigInteger('-5').exp10(-11), '0');
assertBigIntegerEquals(BigInteger('-5').exp10(-12), '0');
assertBigIntegerEquals(BigInteger('-5').exp10(-2), '0');
assertBigIntegerEquals(BigInteger('-5').exp10(-3), '0');
assertBigIntegerEquals(BigInteger('-5').exp10(-4), '0');
assertBigIntegerEquals(BigInteger('-5').exp10(-5), '0');
assertBigIntegerEquals(BigInteger('-5').exp10(-6), '0');
assertBigIntegerEquals(BigInteger('-5').exp10(-7), '0');
assertBigIntegerEquals(BigInteger('-5').exp10(-8), '0');
assertBigIntegerEquals(BigInteger('-5').exp10(-9), '0');
assertBigIntegerEquals(BigInteger('-5').exp10(0), '-5');
assertBigIntegerEquals(BigInteger('-5').exp10(1), '-50');
assertBigIntegerEquals(BigInteger('-5').exp10(10), '-50000000000');
assertBigIntegerEquals(BigInteger('-5').exp10(2), '-500');
assertBigIntegerEquals(BigInteger('-5').exp10(3), '-5000');
assertBigIntegerEquals(BigInteger('-5').exp10(4), '-50000');
assertBigIntegerEquals(BigInteger('-5').exp10(5), '-500000');
assertBigIntegerEquals(BigInteger('-5').exp10(568), '-50000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('-5').exp10(6), '-5000000');
assertBigIntegerEquals(BigInteger('-5').exp10(7), '-50000000');
assertBigIntegerEquals(BigInteger('-5').exp10(74), '-500000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('-5').exp10(8), '-500000000');
assertBigIntegerEquals(BigInteger('-5').exp10(9), '-5000000000');
assertBigIntegerEquals(BigInteger('-517283489544939406').exp10(-1), '-51728348954493940');
assertBigIntegerEquals(BigInteger('-517283489544939406').exp10(-10), '-51728348');
assertBigIntegerEquals(BigInteger('-517283489544939406').exp10(-11), '-5172834');
assertBigIntegerEquals(BigInteger('-517283489544939406').exp10(-12), '-517283');
assertBigIntegerEquals(BigInteger('-517283489544939406').exp10(-2), '-5172834895449394');
assertBigIntegerEquals(BigInteger('-517283489544939406').exp10(-3), '-517283489544939');
assertBigIntegerEquals(BigInteger('-517283489544939406').exp10(-4), '-51728348954493');
assertBigIntegerEquals(BigInteger('-517283489544939406').exp10(-5), '-5172834895449');
assertBigIntegerEquals(BigInteger('-517283489544939406').exp10(-6), '-517283489544');
assertBigIntegerEquals(BigInteger('-517283489544939406').exp10(-7), '-51728348954');
assertBigIntegerEquals(BigInteger('-517283489544939406').exp10(-8), '-5172834895');
assertBigIntegerEquals(BigInteger('-517283489544939406').exp10(-9), '-517283489');
assertBigIntegerEquals(BigInteger('-517283489544939406').exp10(0), '-517283489544939406');
assertBigIntegerEquals(BigInteger('-517283489544939406').exp10(1), '-5172834895449394060');
assertBigIntegerEquals(BigInteger('-517283489544939406').exp10(10), '-5172834895449394060000000000');
assertBigIntegerEquals(BigInteger('-517283489544939406').exp10(2), '-51728348954493940600');
assertBigIntegerEquals(BigInteger('-517283489544939406').exp10(3), '-517283489544939406000');
assertBigIntegerEquals(BigInteger('-517283489544939406').exp10(4), '-5172834895449394060000');
assertBigIntegerEquals(BigInteger('-517283489544939406').exp10(5), '-51728348954493940600000');
assertBigIntegerEquals(BigInteger('-517283489544939406').exp10(568), '-5172834895449394060000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('-517283489544939406').exp10(6), '-517283489544939406000000');
assertBigIntegerEquals(BigInteger('-517283489544939406').exp10(7), '-5172834895449394060000000');
assertBigIntegerEquals(BigInteger('-517283489544939406').exp10(74), '-51728348954493940600000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('-517283489544939406').exp10(8), '-51728348954493940600000000');
assertBigIntegerEquals(BigInteger('-517283489544939406').exp10(9), '-517283489544939406000000000');
assertBigIntegerEquals(BigInteger('-5253733178').exp10(-1), '-525373317');
assertBigIntegerEquals(BigInteger('-5253733178').exp10(-10), '0');
assertBigIntegerEquals(BigInteger('-5253733178').exp10(-11), '0');
assertBigIntegerEquals(BigInteger('-5253733178').exp10(-12), '0');
assertBigIntegerEquals(BigInteger('-5253733178').exp10(-2), '-52537331');
assertBigIntegerEquals(BigInteger('-5253733178').exp10(-3), '-5253733');
assertBigIntegerEquals(BigInteger('-5253733178').exp10(-4), '-525373');
assertBigIntegerEquals(BigInteger('-5253733178').exp10(-5), '-52537');
assertBigIntegerEquals(BigInteger('-5253733178').exp10(-6), '-5253');
assertBigIntegerEquals(BigInteger('-5253733178').exp10(-7), '-525');
assertBigIntegerEquals(BigInteger('-5253733178').exp10(-8), '-52');
assertBigIntegerEquals(BigInteger('-5253733178').exp10(-9), '-5');
assertBigIntegerEquals(BigInteger('-5253733178').exp10(0), '-5253733178');
assertBigIntegerEquals(BigInteger('-5253733178').exp10(1), '-52537331780');
assertBigIntegerEquals(BigInteger('-5253733178').exp10(10), '-52537331780000000000');
assertBigIntegerEquals(BigInteger('-5253733178').exp10(2), '-525373317800');
assertBigIntegerEquals(BigInteger('-5253733178').exp10(3), '-5253733178000');
assertBigIntegerEquals(BigInteger('-5253733178').exp10(4), '-52537331780000');
assertBigIntegerEquals(BigInteger('-5253733178').exp10(5), '-525373317800000');
assertBigIntegerEquals(BigInteger('-5253733178').exp10(568), '-52537331780000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('-5253733178').exp10(6), '-5253733178000000');
assertBigIntegerEquals(BigInteger('-5253733178').exp10(7), '-52537331780000000');
assertBigIntegerEquals(BigInteger('-5253733178').exp10(74), '-525373317800000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('-5253733178').exp10(8), '-525373317800000000');
assertBigIntegerEquals(BigInteger('-5253733178').exp10(9), '-5253733178000000000');
assertBigIntegerEquals(BigInteger('-56476027754399235337367077671129335454475297890272086473917042777774357035192523962600412743390371480817482968845011802503481654919628674396676679172793008943130').exp10(-1), '-5647602775439923533736707767112933545447529789027208647391704277777435703519252396260041274339037148081748296884501180250348165491962867439667667917279300894313');
assertBigIntegerEquals(BigInteger('-56476027754399235337367077671129335454475297890272086473917042777774357035192523962600412743390371480817482968845011802503481654919628674396676679172793008943130').exp10(-10), '-5647602775439923533736707767112933545447529789027208647391704277777435703519252396260041274339037148081748296884501180250348165491962867439667667917279');
assertBigIntegerEquals(BigInteger('-56476027754399235337367077671129335454475297890272086473917042777774357035192523962600412743390371480817482968845011802503481654919628674396676679172793008943130').exp10(-11), '-564760277543992353373670776711293354544752978902720864739170427777743570351925239626004127433903714808174829688450118025034816549196286743966766791727');
assertBigIntegerEquals(BigInteger('-56476027754399235337367077671129335454475297890272086473917042777774357035192523962600412743390371480817482968845011802503481654919628674396676679172793008943130').exp10(-12), '-56476027754399235337367077671129335454475297890272086473917042777774357035192523962600412743390371480817482968845011802503481654919628674396676679172');
assertBigIntegerEquals(BigInteger('-56476027754399235337367077671129335454475297890272086473917042777774357035192523962600412743390371480817482968845011802503481654919628674396676679172793008943130').exp10(-2), '-564760277543992353373670776711293354544752978902720864739170427777743570351925239626004127433903714808174829688450118025034816549196286743966766791727930089431');
assertBigIntegerEquals(BigInteger('-56476027754399235337367077671129335454475297890272086473917042777774357035192523962600412743390371480817482968845011802503481654919628674396676679172793008943130').exp10(-3), '-56476027754399235337367077671129335454475297890272086473917042777774357035192523962600412743390371480817482968845011802503481654919628674396676679172793008943');
assertBigIntegerEquals(BigInteger('-56476027754399235337367077671129335454475297890272086473917042777774357035192523962600412743390371480817482968845011802503481654919628674396676679172793008943130').exp10(-4), '-5647602775439923533736707767112933545447529789027208647391704277777435703519252396260041274339037148081748296884501180250348165491962867439667667917279300894');
assertBigIntegerEquals(BigInteger('-56476027754399235337367077671129335454475297890272086473917042777774357035192523962600412743390371480817482968845011802503481654919628674396676679172793008943130').exp10(-5), '-564760277543992353373670776711293354544752978902720864739170427777743570351925239626004127433903714808174829688450118025034816549196286743966766791727930089');
assertBigIntegerEquals(BigInteger('-56476027754399235337367077671129335454475297890272086473917042777774357035192523962600412743390371480817482968845011802503481654919628674396676679172793008943130').exp10(-6), '-56476027754399235337367077671129335454475297890272086473917042777774357035192523962600412743390371480817482968845011802503481654919628674396676679172793008');
assertBigIntegerEquals(BigInteger('-56476027754399235337367077671129335454475297890272086473917042777774357035192523962600412743390371480817482968845011802503481654919628674396676679172793008943130').exp10(-7), '-5647602775439923533736707767112933545447529789027208647391704277777435703519252396260041274339037148081748296884501180250348165491962867439667667917279300');
assertBigIntegerEquals(BigInteger('-56476027754399235337367077671129335454475297890272086473917042777774357035192523962600412743390371480817482968845011802503481654919628674396676679172793008943130').exp10(-8), '-564760277543992353373670776711293354544752978902720864739170427777743570351925239626004127433903714808174829688450118025034816549196286743966766791727930');
assertBigIntegerEquals(BigInteger('-56476027754399235337367077671129335454475297890272086473917042777774357035192523962600412743390371480817482968845011802503481654919628674396676679172793008943130').exp10(-9), '-56476027754399235337367077671129335454475297890272086473917042777774357035192523962600412743390371480817482968845011802503481654919628674396676679172793');
assertBigIntegerEquals(BigInteger('-56476027754399235337367077671129335454475297890272086473917042777774357035192523962600412743390371480817482968845011802503481654919628674396676679172793008943130').exp10(0), '-56476027754399235337367077671129335454475297890272086473917042777774357035192523962600412743390371480817482968845011802503481654919628674396676679172793008943130');
assertBigIntegerEquals(BigInteger('-56476027754399235337367077671129335454475297890272086473917042777774357035192523962600412743390371480817482968845011802503481654919628674396676679172793008943130').exp10(1), '-564760277543992353373670776711293354544752978902720864739170427777743570351925239626004127433903714808174829688450118025034816549196286743966766791727930089431300');
assertBigIntegerEquals(BigInteger('-56476027754399235337367077671129335454475297890272086473917042777774357035192523962600412743390371480817482968845011802503481654919628674396676679172793008943130').exp10(10), '-564760277543992353373670776711293354544752978902720864739170427777743570351925239626004127433903714808174829688450118025034816549196286743966766791727930089431300000000000');
assertBigIntegerEquals(BigInteger('-56476027754399235337367077671129335454475297890272086473917042777774357035192523962600412743390371480817482968845011802503481654919628674396676679172793008943130').exp10(2), '-5647602775439923533736707767112933545447529789027208647391704277777435703519252396260041274339037148081748296884501180250348165491962867439667667917279300894313000');
assertBigIntegerEquals(BigInteger('-56476027754399235337367077671129335454475297890272086473917042777774357035192523962600412743390371480817482968845011802503481654919628674396676679172793008943130').exp10(3), '-56476027754399235337367077671129335454475297890272086473917042777774357035192523962600412743390371480817482968845011802503481654919628674396676679172793008943130000');
assertBigIntegerEquals(BigInteger('-56476027754399235337367077671129335454475297890272086473917042777774357035192523962600412743390371480817482968845011802503481654919628674396676679172793008943130').exp10(4), '-564760277543992353373670776711293354544752978902720864739170427777743570351925239626004127433903714808174829688450118025034816549196286743966766791727930089431300000');
assertBigIntegerEquals(BigInteger('-56476027754399235337367077671129335454475297890272086473917042777774357035192523962600412743390371480817482968845011802503481654919628674396676679172793008943130').exp10(5), '-5647602775439923533736707767112933545447529789027208647391704277777435703519252396260041274339037148081748296884501180250348165491962867439667667917279300894313000000');
assertBigIntegerEquals(BigInteger('-56476027754399235337367077671129335454475297890272086473917042777774357035192523962600412743390371480817482968845011802503481654919628674396676679172793008943130').exp10(568), '-564760277543992353373670776711293354544752978902720864739170427777743570351925239626004127433903714808174829688450118025034816549196286743966766791727930089431300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('-56476027754399235337367077671129335454475297890272086473917042777774357035192523962600412743390371480817482968845011802503481654919628674396676679172793008943130').exp10(6), '-56476027754399235337367077671129335454475297890272086473917042777774357035192523962600412743390371480817482968845011802503481654919628674396676679172793008943130000000');
assertBigIntegerEquals(BigInteger('-56476027754399235337367077671129335454475297890272086473917042777774357035192523962600412743390371480817482968845011802503481654919628674396676679172793008943130').exp10(7), '-564760277543992353373670776711293354544752978902720864739170427777743570351925239626004127433903714808174829688450118025034816549196286743966766791727930089431300000000');
assertBigIntegerEquals(BigInteger('-56476027754399235337367077671129335454475297890272086473917042777774357035192523962600412743390371480817482968845011802503481654919628674396676679172793008943130').exp10(74), '-5647602775439923533736707767112933545447529789027208647391704277777435703519252396260041274339037148081748296884501180250348165491962867439667667917279300894313000000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('-56476027754399235337367077671129335454475297890272086473917042777774357035192523962600412743390371480817482968845011802503481654919628674396676679172793008943130').exp10(8), '-5647602775439923533736707767112933545447529789027208647391704277777435703519252396260041274339037148081748296884501180250348165491962867439667667917279300894313000000000');
assertBigIntegerEquals(BigInteger('-56476027754399235337367077671129335454475297890272086473917042777774357035192523962600412743390371480817482968845011802503481654919628674396676679172793008943130').exp10(9), '-56476027754399235337367077671129335454475297890272086473917042777774357035192523962600412743390371480817482968845011802503481654919628674396676679172793008943130000000000');
assertBigIntegerEquals(BigInteger('-6').exp10(-1), '0');
assertBigIntegerEquals(BigInteger('-6').exp10(-10), '0');
assertBigIntegerEquals(BigInteger('-6').exp10(-11), '0');
assertBigIntegerEquals(BigInteger('-6').exp10(-12), '0');
assertBigIntegerEquals(BigInteger('-6').exp10(-2), '0');
assertBigIntegerEquals(BigInteger('-6').exp10(-3), '0');
assertBigIntegerEquals(BigInteger('-6').exp10(-4), '0');
assertBigIntegerEquals(BigInteger('-6').exp10(-5), '0');
assertBigIntegerEquals(BigInteger('-6').exp10(-6), '0');
assertBigIntegerEquals(BigInteger('-6').exp10(-7), '0');
assertBigIntegerEquals(BigInteger('-6').exp10(-8), '0');
assertBigIntegerEquals(BigInteger('-6').exp10(-9), '0');
assertBigIntegerEquals(BigInteger('-6').exp10(0), '-6');
assertBigIntegerEquals(BigInteger('-6').exp10(1), '-60');
assertBigIntegerEquals(BigInteger('-6').exp10(10), '-60000000000');
assertBigIntegerEquals(BigInteger('-6').exp10(2), '-600');
assertBigIntegerEquals(BigInteger('-6').exp10(3), '-6000');
assertBigIntegerEquals(BigInteger('-6').exp10(4), '-60000');
assertBigIntegerEquals(BigInteger('-6').exp10(5), '-600000');
assertBigIntegerEquals(BigInteger('-6').exp10(568), '-60000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('-6').exp10(6), '-6000000');
assertBigIntegerEquals(BigInteger('-6').exp10(7), '-60000000');
assertBigIntegerEquals(BigInteger('-6').exp10(74), '-600000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('-6').exp10(8), '-600000000');
assertBigIntegerEquals(BigInteger('-6').exp10(9), '-6000000000');
assertBigIntegerEquals(BigInteger('-6200332365770319240482082941470115079599077007166534745743189064').exp10(-1), '-620033236577031924048208294147011507959907700716653474574318906');
assertBigIntegerEquals(BigInteger('-6200332365770319240482082941470115079599077007166534745743189064').exp10(-10), '-620033236577031924048208294147011507959907700716653474');
assertBigIntegerEquals(BigInteger('-6200332365770319240482082941470115079599077007166534745743189064').exp10(-11), '-62003323657703192404820829414701150795990770071665347');
assertBigIntegerEquals(BigInteger('-6200332365770319240482082941470115079599077007166534745743189064').exp10(-12), '-6200332365770319240482082941470115079599077007166534');
assertBigIntegerEquals(BigInteger('-6200332365770319240482082941470115079599077007166534745743189064').exp10(-2), '-62003323657703192404820829414701150795990770071665347457431890');
assertBigIntegerEquals(BigInteger('-6200332365770319240482082941470115079599077007166534745743189064').exp10(-3), '-6200332365770319240482082941470115079599077007166534745743189');
assertBigIntegerEquals(BigInteger('-6200332365770319240482082941470115079599077007166534745743189064').exp10(-4), '-620033236577031924048208294147011507959907700716653474574318');
assertBigIntegerEquals(BigInteger('-6200332365770319240482082941470115079599077007166534745743189064').exp10(-5), '-62003323657703192404820829414701150795990770071665347457431');
assertBigIntegerEquals(BigInteger('-6200332365770319240482082941470115079599077007166534745743189064').exp10(-6), '-6200332365770319240482082941470115079599077007166534745743');
assertBigIntegerEquals(BigInteger('-6200332365770319240482082941470115079599077007166534745743189064').exp10(-7), '-620033236577031924048208294147011507959907700716653474574');
assertBigIntegerEquals(BigInteger('-6200332365770319240482082941470115079599077007166534745743189064').exp10(-8), '-62003323657703192404820829414701150795990770071665347457');
assertBigIntegerEquals(BigInteger('-6200332365770319240482082941470115079599077007166534745743189064').exp10(-9), '-6200332365770319240482082941470115079599077007166534745');
assertBigIntegerEquals(BigInteger('-6200332365770319240482082941470115079599077007166534745743189064').exp10(0), '-6200332365770319240482082941470115079599077007166534745743189064');
assertBigIntegerEquals(BigInteger('-6200332365770319240482082941470115079599077007166534745743189064').exp10(1), '-62003323657703192404820829414701150795990770071665347457431890640');
assertBigIntegerEquals(BigInteger('-6200332365770319240482082941470115079599077007166534745743189064').exp10(10), '-62003323657703192404820829414701150795990770071665347457431890640000000000');
assertBigIntegerEquals(BigInteger('-6200332365770319240482082941470115079599077007166534745743189064').exp10(2), '-620033236577031924048208294147011507959907700716653474574318906400');
assertBigIntegerEquals(BigInteger('-6200332365770319240482082941470115079599077007166534745743189064').exp10(3), '-6200332365770319240482082941470115079599077007166534745743189064000');
assertBigIntegerEquals(BigInteger('-6200332365770319240482082941470115079599077007166534745743189064').exp10(4), '-62003323657703192404820829414701150795990770071665347457431890640000');
assertBigIntegerEquals(BigInteger('-6200332365770319240482082941470115079599077007166534745743189064').exp10(5), '-620033236577031924048208294147011507959907700716653474574318906400000');
assertBigIntegerEquals(BigInteger('-6200332365770319240482082941470115079599077007166534745743189064').exp10(568), '-62003323657703192404820829414701150795990770071665347457431890640000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('-6200332365770319240482082941470115079599077007166534745743189064').exp10(6), '-6200332365770319240482082941470115079599077007166534745743189064000000');
assertBigIntegerEquals(BigInteger('-6200332365770319240482082941470115079599077007166534745743189064').exp10(7), '-62003323657703192404820829414701150795990770071665347457431890640000000');
assertBigIntegerEquals(BigInteger('-6200332365770319240482082941470115079599077007166534745743189064').exp10(74), '-620033236577031924048208294147011507959907700716653474574318906400000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('-6200332365770319240482082941470115079599077007166534745743189064').exp10(8), '-620033236577031924048208294147011507959907700716653474574318906400000000');
assertBigIntegerEquals(BigInteger('-6200332365770319240482082941470115079599077007166534745743189064').exp10(9), '-6200332365770319240482082941470115079599077007166534745743189064000000000');
assertBigIntegerEquals(BigInteger('-62830174493130245841622500337651075078551735130057577990903380908177068729572036547874980598308615836957947097531639434378385662007612195835738520240851492479820084794237').exp10(-1), '-6283017449313024584162250033765107507855173513005757799090338090817706872957203654787498059830861583695794709753163943437838566200761219583573852024085149247982008479423');
assertBigIntegerEquals(BigInteger('-62830174493130245841622500337651075078551735130057577990903380908177068729572036547874980598308615836957947097531639434378385662007612195835738520240851492479820084794237').exp10(-10), '-6283017449313024584162250033765107507855173513005757799090338090817706872957203654787498059830861583695794709753163943437838566200761219583573852024085149247982');
assertBigIntegerEquals(BigInteger('-62830174493130245841622500337651075078551735130057577990903380908177068729572036547874980598308615836957947097531639434378385662007612195835738520240851492479820084794237').exp10(-11), '-628301744931302458416225003376510750785517351300575779909033809081770687295720365478749805983086158369579470975316394343783856620076121958357385202408514924798');
assertBigIntegerEquals(BigInteger('-62830174493130245841622500337651075078551735130057577990903380908177068729572036547874980598308615836957947097531639434378385662007612195835738520240851492479820084794237').exp10(-12), '-62830174493130245841622500337651075078551735130057577990903380908177068729572036547874980598308615836957947097531639434378385662007612195835738520240851492479');
assertBigIntegerEquals(BigInteger('-62830174493130245841622500337651075078551735130057577990903380908177068729572036547874980598308615836957947097531639434378385662007612195835738520240851492479820084794237').exp10(-2), '-628301744931302458416225003376510750785517351300575779909033809081770687295720365478749805983086158369579470975316394343783856620076121958357385202408514924798200847942');
assertBigIntegerEquals(BigInteger('-62830174493130245841622500337651075078551735130057577990903380908177068729572036547874980598308615836957947097531639434378385662007612195835738520240851492479820084794237').exp10(-3), '-62830174493130245841622500337651075078551735130057577990903380908177068729572036547874980598308615836957947097531639434378385662007612195835738520240851492479820084794');
assertBigIntegerEquals(BigInteger('-62830174493130245841622500337651075078551735130057577990903380908177068729572036547874980598308615836957947097531639434378385662007612195835738520240851492479820084794237').exp10(-4), '-6283017449313024584162250033765107507855173513005757799090338090817706872957203654787498059830861583695794709753163943437838566200761219583573852024085149247982008479');
assertBigIntegerEquals(BigInteger('-62830174493130245841622500337651075078551735130057577990903380908177068729572036547874980598308615836957947097531639434378385662007612195835738520240851492479820084794237').exp10(-5), '-628301744931302458416225003376510750785517351300575779909033809081770687295720365478749805983086158369579470975316394343783856620076121958357385202408514924798200847');
assertBigIntegerEquals(BigInteger('-62830174493130245841622500337651075078551735130057577990903380908177068729572036547874980598308615836957947097531639434378385662007612195835738520240851492479820084794237').exp10(-6), '-62830174493130245841622500337651075078551735130057577990903380908177068729572036547874980598308615836957947097531639434378385662007612195835738520240851492479820084');
assertBigIntegerEquals(BigInteger('-62830174493130245841622500337651075078551735130057577990903380908177068729572036547874980598308615836957947097531639434378385662007612195835738520240851492479820084794237').exp10(-7), '-6283017449313024584162250033765107507855173513005757799090338090817706872957203654787498059830861583695794709753163943437838566200761219583573852024085149247982008');
assertBigIntegerEquals(BigInteger('-62830174493130245841622500337651075078551735130057577990903380908177068729572036547874980598308615836957947097531639434378385662007612195835738520240851492479820084794237').exp10(-8), '-628301744931302458416225003376510750785517351300575779909033809081770687295720365478749805983086158369579470975316394343783856620076121958357385202408514924798200');
assertBigIntegerEquals(BigInteger('-62830174493130245841622500337651075078551735130057577990903380908177068729572036547874980598308615836957947097531639434378385662007612195835738520240851492479820084794237').exp10(-9), '-62830174493130245841622500337651075078551735130057577990903380908177068729572036547874980598308615836957947097531639434378385662007612195835738520240851492479820');
assertBigIntegerEquals(BigInteger('-62830174493130245841622500337651075078551735130057577990903380908177068729572036547874980598308615836957947097531639434378385662007612195835738520240851492479820084794237').exp10(0), '-62830174493130245841622500337651075078551735130057577990903380908177068729572036547874980598308615836957947097531639434378385662007612195835738520240851492479820084794237');
assertBigIntegerEquals(BigInteger('-62830174493130245841622500337651075078551735130057577990903380908177068729572036547874980598308615836957947097531639434378385662007612195835738520240851492479820084794237').exp10(1), '-628301744931302458416225003376510750785517351300575779909033809081770687295720365478749805983086158369579470975316394343783856620076121958357385202408514924798200847942370');
assertBigIntegerEquals(BigInteger('-62830174493130245841622500337651075078551735130057577990903380908177068729572036547874980598308615836957947097531639434378385662007612195835738520240851492479820084794237').exp10(10), '-628301744931302458416225003376510750785517351300575779909033809081770687295720365478749805983086158369579470975316394343783856620076121958357385202408514924798200847942370000000000');
assertBigIntegerEquals(BigInteger('-62830174493130245841622500337651075078551735130057577990903380908177068729572036547874980598308615836957947097531639434378385662007612195835738520240851492479820084794237').exp10(2), '-6283017449313024584162250033765107507855173513005757799090338090817706872957203654787498059830861583695794709753163943437838566200761219583573852024085149247982008479423700');
assertBigIntegerEquals(BigInteger('-62830174493130245841622500337651075078551735130057577990903380908177068729572036547874980598308615836957947097531639434378385662007612195835738520240851492479820084794237').exp10(3), '-62830174493130245841622500337651075078551735130057577990903380908177068729572036547874980598308615836957947097531639434378385662007612195835738520240851492479820084794237000');
assertBigIntegerEquals(BigInteger('-62830174493130245841622500337651075078551735130057577990903380908177068729572036547874980598308615836957947097531639434378385662007612195835738520240851492479820084794237').exp10(4), '-628301744931302458416225003376510750785517351300575779909033809081770687295720365478749805983086158369579470975316394343783856620076121958357385202408514924798200847942370000');
assertBigIntegerEquals(BigInteger('-62830174493130245841622500337651075078551735130057577990903380908177068729572036547874980598308615836957947097531639434378385662007612195835738520240851492479820084794237').exp10(5), '-6283017449313024584162250033765107507855173513005757799090338090817706872957203654787498059830861583695794709753163943437838566200761219583573852024085149247982008479423700000');
assertBigIntegerEquals(BigInteger('-62830174493130245841622500337651075078551735130057577990903380908177068729572036547874980598308615836957947097531639434378385662007612195835738520240851492479820084794237').exp10(568), '-628301744931302458416225003376510750785517351300575779909033809081770687295720365478749805983086158369579470975316394343783856620076121958357385202408514924798200847942370000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('-62830174493130245841622500337651075078551735130057577990903380908177068729572036547874980598308615836957947097531639434378385662007612195835738520240851492479820084794237').exp10(6), '-62830174493130245841622500337651075078551735130057577990903380908177068729572036547874980598308615836957947097531639434378385662007612195835738520240851492479820084794237000000');
assertBigIntegerEquals(BigInteger('-62830174493130245841622500337651075078551735130057577990903380908177068729572036547874980598308615836957947097531639434378385662007612195835738520240851492479820084794237').exp10(7), '-628301744931302458416225003376510750785517351300575779909033809081770687295720365478749805983086158369579470975316394343783856620076121958357385202408514924798200847942370000000');
assertBigIntegerEquals(BigInteger('-62830174493130245841622500337651075078551735130057577990903380908177068729572036547874980598308615836957947097531639434378385662007612195835738520240851492479820084794237').exp10(74), '-6283017449313024584162250033765107507855173513005757799090338090817706872957203654787498059830861583695794709753163943437838566200761219583573852024085149247982008479423700000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('-62830174493130245841622500337651075078551735130057577990903380908177068729572036547874980598308615836957947097531639434378385662007612195835738520240851492479820084794237').exp10(8), '-6283017449313024584162250033765107507855173513005757799090338090817706872957203654787498059830861583695794709753163943437838566200761219583573852024085149247982008479423700000000');
assertBigIntegerEquals(BigInteger('-62830174493130245841622500337651075078551735130057577990903380908177068729572036547874980598308615836957947097531639434378385662007612195835738520240851492479820084794237').exp10(9), '-62830174493130245841622500337651075078551735130057577990903380908177068729572036547874980598308615836957947097531639434378385662007612195835738520240851492479820084794237000000000');
assertBigIntegerEquals(BigInteger('-7').exp10(-1), '0');
assertBigIntegerEquals(BigInteger('-7').exp10(-10), '0');
assertBigIntegerEquals(BigInteger('-7').exp10(-11), '0');
assertBigIntegerEquals(BigInteger('-7').exp10(-12), '0');
assertBigIntegerEquals(BigInteger('-7').exp10(-2), '0');
assertBigIntegerEquals(BigInteger('-7').exp10(-3), '0');
assertBigIntegerEquals(BigInteger('-7').exp10(-4), '0');
assertBigIntegerEquals(BigInteger('-7').exp10(-5), '0');
assertBigIntegerEquals(BigInteger('-7').exp10(-6), '0');
assertBigIntegerEquals(BigInteger('-7').exp10(-7), '0');
assertBigIntegerEquals(BigInteger('-7').exp10(-8), '0');
assertBigIntegerEquals(BigInteger('-7').exp10(-9), '0');
assertBigIntegerEquals(BigInteger('-7').exp10(0), '-7');
assertBigIntegerEquals(BigInteger('-7').exp10(1), '-70');
assertBigIntegerEquals(BigInteger('-7').exp10(10), '-70000000000');
assertBigIntegerEquals(BigInteger('-7').exp10(2), '-700');
assertBigIntegerEquals(BigInteger('-7').exp10(3), '-7000');
assertBigIntegerEquals(BigInteger('-7').exp10(4), '-70000');
assertBigIntegerEquals(BigInteger('-7').exp10(5), '-700000');
assertBigIntegerEquals(BigInteger('-7').exp10(568), '-70000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('-7').exp10(6), '-7000000');
assertBigIntegerEquals(BigInteger('-7').exp10(7), '-70000000');
assertBigIntegerEquals(BigInteger('-7').exp10(74), '-700000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('-7').exp10(8), '-700000000');
assertBigIntegerEquals(BigInteger('-7').exp10(9), '-7000000000');
assertBigIntegerEquals(BigInteger('-8').exp10(-1), '0');
assertBigIntegerEquals(BigInteger('-8').exp10(-10), '0');
assertBigIntegerEquals(BigInteger('-8').exp10(-11), '0');
assertBigIntegerEquals(BigInteger('-8').exp10(-12), '0');
assertBigIntegerEquals(BigInteger('-8').exp10(-2), '0');
assertBigIntegerEquals(BigInteger('-8').exp10(-3), '0');
assertBigIntegerEquals(BigInteger('-8').exp10(-4), '0');
assertBigIntegerEquals(BigInteger('-8').exp10(-5), '0');
assertBigIntegerEquals(BigInteger('-8').exp10(-6), '0');
assertBigIntegerEquals(BigInteger('-8').exp10(-7), '0');
assertBigIntegerEquals(BigInteger('-8').exp10(-8), '0');
assertBigIntegerEquals(BigInteger('-8').exp10(-9), '0');
assertBigIntegerEquals(BigInteger('-8').exp10(0), '-8');
assertBigIntegerEquals(BigInteger('-8').exp10(1), '-80');
assertBigIntegerEquals(BigInteger('-8').exp10(10), '-80000000000');
assertBigIntegerEquals(BigInteger('-8').exp10(2), '-800');
assertBigIntegerEquals(BigInteger('-8').exp10(3), '-8000');
assertBigIntegerEquals(BigInteger('-8').exp10(4), '-80000');
assertBigIntegerEquals(BigInteger('-8').exp10(5), '-800000');
assertBigIntegerEquals(BigInteger('-8').exp10(568), '-80000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('-8').exp10(6), '-8000000');
assertBigIntegerEquals(BigInteger('-8').exp10(7), '-80000000');
assertBigIntegerEquals(BigInteger('-8').exp10(74), '-800000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('-8').exp10(8), '-800000000');
assertBigIntegerEquals(BigInteger('-8').exp10(9), '-8000000000');
assertBigIntegerEquals(BigInteger('-81476721982').exp10(-1), '-8147672198');
assertBigIntegerEquals(BigInteger('-81476721982').exp10(-10), '-8');
assertBigIntegerEquals(BigInteger('-81476721982').exp10(-11), '0');
assertBigIntegerEquals(BigInteger('-81476721982').exp10(-12), '0');
assertBigIntegerEquals(BigInteger('-81476721982').exp10(-2), '-814767219');
assertBigIntegerEquals(BigInteger('-81476721982').exp10(-3), '-81476721');
assertBigIntegerEquals(BigInteger('-81476721982').exp10(-4), '-8147672');
assertBigIntegerEquals(BigInteger('-81476721982').exp10(-5), '-814767');
assertBigIntegerEquals(BigInteger('-81476721982').exp10(-6), '-81476');
assertBigIntegerEquals(BigInteger('-81476721982').exp10(-7), '-8147');
assertBigIntegerEquals(BigInteger('-81476721982').exp10(-8), '-814');
assertBigIntegerEquals(BigInteger('-81476721982').exp10(-9), '-81');
assertBigIntegerEquals(BigInteger('-81476721982').exp10(0), '-81476721982');
assertBigIntegerEquals(BigInteger('-81476721982').exp10(1), '-814767219820');
assertBigIntegerEquals(BigInteger('-81476721982').exp10(10), '-814767219820000000000');
assertBigIntegerEquals(BigInteger('-81476721982').exp10(2), '-8147672198200');
assertBigIntegerEquals(BigInteger('-81476721982').exp10(3), '-81476721982000');
assertBigIntegerEquals(BigInteger('-81476721982').exp10(4), '-814767219820000');
assertBigIntegerEquals(BigInteger('-81476721982').exp10(5), '-8147672198200000');
assertBigIntegerEquals(BigInteger('-81476721982').exp10(568), '-814767219820000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('-81476721982').exp10(6), '-81476721982000000');
assertBigIntegerEquals(BigInteger('-81476721982').exp10(7), '-814767219820000000');
assertBigIntegerEquals(BigInteger('-81476721982').exp10(74), '-8147672198200000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('-81476721982').exp10(8), '-8147672198200000000');
assertBigIntegerEquals(BigInteger('-81476721982').exp10(9), '-81476721982000000000');
assertBigIntegerEquals(BigInteger('-8551735130057577').exp10(-1), '-855173513005757');
assertBigIntegerEquals(BigInteger('-8551735130057577').exp10(-10), '-855173');
assertBigIntegerEquals(BigInteger('-8551735130057577').exp10(-11), '-85517');
assertBigIntegerEquals(BigInteger('-8551735130057577').exp10(-12), '-8551');
assertBigIntegerEquals(BigInteger('-8551735130057577').exp10(-2), '-85517351300575');
assertBigIntegerEquals(BigInteger('-8551735130057577').exp10(-3), '-8551735130057');
assertBigIntegerEquals(BigInteger('-8551735130057577').exp10(-4), '-855173513005');
assertBigIntegerEquals(BigInteger('-8551735130057577').exp10(-5), '-85517351300');
assertBigIntegerEquals(BigInteger('-8551735130057577').exp10(-6), '-8551735130');
assertBigIntegerEquals(BigInteger('-8551735130057577').exp10(-7), '-855173513');
assertBigIntegerEquals(BigInteger('-8551735130057577').exp10(-8), '-85517351');
assertBigIntegerEquals(BigInteger('-8551735130057577').exp10(-9), '-8551735');
assertBigIntegerEquals(BigInteger('-8551735130057577').exp10(0), '-8551735130057577');
assertBigIntegerEquals(BigInteger('-8551735130057577').exp10(1), '-85517351300575770');
assertBigIntegerEquals(BigInteger('-8551735130057577').exp10(10), '-85517351300575770000000000');
assertBigIntegerEquals(BigInteger('-8551735130057577').exp10(2), '-855173513005757700');
assertBigIntegerEquals(BigInteger('-8551735130057577').exp10(3), '-8551735130057577000');
assertBigIntegerEquals(BigInteger('-8551735130057577').exp10(4), '-85517351300575770000');
assertBigIntegerEquals(BigInteger('-8551735130057577').exp10(5), '-855173513005757700000');
assertBigIntegerEquals(BigInteger('-8551735130057577').exp10(568), '-85517351300575770000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('-8551735130057577').exp10(6), '-8551735130057577000000');
assertBigIntegerEquals(BigInteger('-8551735130057577').exp10(7), '-85517351300575770000000');
assertBigIntegerEquals(BigInteger('-8551735130057577').exp10(74), '-855173513005757700000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('-8551735130057577').exp10(8), '-855173513005757700000000');
assertBigIntegerEquals(BigInteger('-8551735130057577').exp10(9), '-8551735130057577000000000');
assertBigIntegerEquals(BigInteger('-9').exp10(-1), '0');
assertBigIntegerEquals(BigInteger('-9').exp10(-10), '0');
assertBigIntegerEquals(BigInteger('-9').exp10(-11), '0');
assertBigIntegerEquals(BigInteger('-9').exp10(-12), '0');
assertBigIntegerEquals(BigInteger('-9').exp10(-2), '0');
assertBigIntegerEquals(BigInteger('-9').exp10(-3), '0');
assertBigIntegerEquals(BigInteger('-9').exp10(-4), '0');
assertBigIntegerEquals(BigInteger('-9').exp10(-5), '0');
assertBigIntegerEquals(BigInteger('-9').exp10(-6), '0');
assertBigIntegerEquals(BigInteger('-9').exp10(-7), '0');
assertBigIntegerEquals(BigInteger('-9').exp10(-8), '0');
assertBigIntegerEquals(BigInteger('-9').exp10(-9), '0');
assertBigIntegerEquals(BigInteger('-9').exp10(0), '-9');
assertBigIntegerEquals(BigInteger('-9').exp10(1), '-90');
assertBigIntegerEquals(BigInteger('-9').exp10(10), '-90000000000');
assertBigIntegerEquals(BigInteger('-9').exp10(2), '-900');
assertBigIntegerEquals(BigInteger('-9').exp10(3), '-9000');
assertBigIntegerEquals(BigInteger('-9').exp10(4), '-90000');
assertBigIntegerEquals(BigInteger('-9').exp10(5), '-900000');
assertBigIntegerEquals(BigInteger('-9').exp10(568), '-90000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('-9').exp10(6), '-9000000');
assertBigIntegerEquals(BigInteger('-9').exp10(7), '-90000000');
assertBigIntegerEquals(BigInteger('-9').exp10(74), '-900000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('-9').exp10(8), '-900000000');
assertBigIntegerEquals(BigInteger('-9').exp10(9), '-9000000000');
assertBigIntegerEquals(BigInteger('-92641540038838004562939772').exp10(-1), '-9264154003883800456293977');
assertBigIntegerEquals(BigInteger('-92641540038838004562939772').exp10(-10), '-9264154003883800');
assertBigIntegerEquals(BigInteger('-92641540038838004562939772').exp10(-11), '-926415400388380');
assertBigIntegerEquals(BigInteger('-92641540038838004562939772').exp10(-12), '-92641540038838');
assertBigIntegerEquals(BigInteger('-92641540038838004562939772').exp10(-2), '-926415400388380045629397');
assertBigIntegerEquals(BigInteger('-92641540038838004562939772').exp10(-3), '-92641540038838004562939');
assertBigIntegerEquals(BigInteger('-92641540038838004562939772').exp10(-4), '-9264154003883800456293');
assertBigIntegerEquals(BigInteger('-92641540038838004562939772').exp10(-5), '-926415400388380045629');
assertBigIntegerEquals(BigInteger('-92641540038838004562939772').exp10(-6), '-92641540038838004562');
assertBigIntegerEquals(BigInteger('-92641540038838004562939772').exp10(-7), '-9264154003883800456');
assertBigIntegerEquals(BigInteger('-92641540038838004562939772').exp10(-8), '-926415400388380045');
assertBigIntegerEquals(BigInteger('-92641540038838004562939772').exp10(-9), '-92641540038838004');
assertBigIntegerEquals(BigInteger('-92641540038838004562939772').exp10(0), '-92641540038838004562939772');
assertBigIntegerEquals(BigInteger('-92641540038838004562939772').exp10(1), '-926415400388380045629397720');
assertBigIntegerEquals(BigInteger('-92641540038838004562939772').exp10(10), '-926415400388380045629397720000000000');
assertBigIntegerEquals(BigInteger('-92641540038838004562939772').exp10(2), '-9264154003883800456293977200');
assertBigIntegerEquals(BigInteger('-92641540038838004562939772').exp10(3), '-92641540038838004562939772000');
assertBigIntegerEquals(BigInteger('-92641540038838004562939772').exp10(4), '-926415400388380045629397720000');
assertBigIntegerEquals(BigInteger('-92641540038838004562939772').exp10(5), '-9264154003883800456293977200000');
assertBigIntegerEquals(BigInteger('-92641540038838004562939772').exp10(568), '-926415400388380045629397720000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('-92641540038838004562939772').exp10(6), '-92641540038838004562939772000000');
assertBigIntegerEquals(BigInteger('-92641540038838004562939772').exp10(7), '-926415400388380045629397720000000');
assertBigIntegerEquals(BigInteger('-92641540038838004562939772').exp10(74), '-9264154003883800456293977200000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('-92641540038838004562939772').exp10(8), '-9264154003883800456293977200000000');
assertBigIntegerEquals(BigInteger('-92641540038838004562939772').exp10(9), '-92641540038838004562939772000000000');
assertBigIntegerEquals(BigInteger('-99608').exp10(-1), '-9960');
assertBigIntegerEquals(BigInteger('-99608').exp10(-10), '0');
assertBigIntegerEquals(BigInteger('-99608').exp10(-11), '0');
assertBigIntegerEquals(BigInteger('-99608').exp10(-12), '0');
assertBigIntegerEquals(BigInteger('-99608').exp10(-2), '-996');
assertBigIntegerEquals(BigInteger('-99608').exp10(-3), '-99');
assertBigIntegerEquals(BigInteger('-99608').exp10(-4), '-9');
assertBigIntegerEquals(BigInteger('-99608').exp10(-5), '0');
assertBigIntegerEquals(BigInteger('-99608').exp10(-6), '0');
assertBigIntegerEquals(BigInteger('-99608').exp10(-7), '0');
assertBigIntegerEquals(BigInteger('-99608').exp10(-8), '0');
assertBigIntegerEquals(BigInteger('-99608').exp10(-9), '0');
assertBigIntegerEquals(BigInteger('-99608').exp10(0), '-99608');
assertBigIntegerEquals(BigInteger('-99608').exp10(1), '-996080');
assertBigIntegerEquals(BigInteger('-99608').exp10(10), '-996080000000000');
assertBigIntegerEquals(BigInteger('-99608').exp10(2), '-9960800');
assertBigIntegerEquals(BigInteger('-99608').exp10(3), '-99608000');
assertBigIntegerEquals(BigInteger('-99608').exp10(4), '-996080000');
assertBigIntegerEquals(BigInteger('-99608').exp10(5), '-9960800000');
assertBigIntegerEquals(BigInteger('-99608').exp10(568), '-996080000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('-99608').exp10(6), '-99608000000');
assertBigIntegerEquals(BigInteger('-99608').exp10(7), '-996080000000');
assertBigIntegerEquals(BigInteger('-99608').exp10(74), '-9960800000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('-99608').exp10(8), '-9960800000000');
assertBigIntegerEquals(BigInteger('-99608').exp10(9), '-99608000000000');
assertBigIntegerEquals(BigInteger('-999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999').exp10(-1), '-99999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999');
assertBigIntegerEquals(BigInteger('-999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999').exp10(-10), '-99999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999');
assertBigIntegerEquals(BigInteger('-999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999').exp10(-11), '-9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999');
assertBigIntegerEquals(BigInteger('-999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999').exp10(-12), '-999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999');
assertBigIntegerEquals(BigInteger('-999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999').exp10(-2), '-9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999');
assertBigIntegerEquals(BigInteger('-999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999').exp10(-3), '-999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999');
assertBigIntegerEquals(BigInteger('-999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999').exp10(-4), '-99999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999');
assertBigIntegerEquals(BigInteger('-999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999').exp10(-5), '-9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999');
assertBigIntegerEquals(BigInteger('-999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999').exp10(-6), '-999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999');
assertBigIntegerEquals(BigInteger('-999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999').exp10(-7), '-99999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999');
assertBigIntegerEquals(BigInteger('-999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999').exp10(-8), '-9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999');
assertBigIntegerEquals(BigInteger('-999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999').exp10(-9), '-999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999');
assertBigIntegerEquals(BigInteger('-999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999').exp10(0), '-999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999');
assertBigIntegerEquals(BigInteger('-999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999').exp10(1), '-9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999990');
assertBigIntegerEquals(BigInteger('-999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999').exp10(10), '-9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999990000000000');
assertBigIntegerEquals(BigInteger('-999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999').exp10(2), '-99999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999900');
assertBigIntegerEquals(BigInteger('-999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999').exp10(3), '-999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999000');
assertBigIntegerEquals(BigInteger('-999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999').exp10(4), '-9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999990000');
assertBigIntegerEquals(BigInteger('-999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999').exp10(5), '-99999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999900000');
assertBigIntegerEquals(BigInteger('-999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999').exp10(568), '-9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999990000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('-999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999').exp10(6), '-999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999000000');
assertBigIntegerEquals(BigInteger('-999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999').exp10(7), '-9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999990000000');
assertBigIntegerEquals(BigInteger('-999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999').exp10(74), '-99999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999900000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('-999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999').exp10(8), '-99999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999900000000');
assertBigIntegerEquals(BigInteger('-999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999').exp10(9), '-999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999000000000');
assertBigIntegerEquals(BigInteger('0').exp10(-1), '0');
assertBigIntegerEquals(BigInteger('0').exp10(-10), '0');
assertBigIntegerEquals(BigInteger('0').exp10(-11), '0');
assertBigIntegerEquals(BigInteger('0').exp10(-12), '0');
assertBigIntegerEquals(BigInteger('0').exp10(-2), '0');
assertBigIntegerEquals(BigInteger('0').exp10(-3), '0');
assertBigIntegerEquals(BigInteger('0').exp10(-4), '0');
assertBigIntegerEquals(BigInteger('0').exp10(-5), '0');
assertBigIntegerEquals(BigInteger('0').exp10(-6), '0');
assertBigIntegerEquals(BigInteger('0').exp10(-7), '0');
assertBigIntegerEquals(BigInteger('0').exp10(-8), '0');
assertBigIntegerEquals(BigInteger('0').exp10(-9), '0');
assertBigIntegerEquals(BigInteger('0').exp10(0), '0');
assertBigIntegerEquals(BigInteger('0').exp10(1), '0');
assertBigIntegerEquals(BigInteger('0').exp10(10), '0');
assertBigIntegerEquals(BigInteger('0').exp10(2), '0');
assertBigIntegerEquals(BigInteger('0').exp10(3), '0');
assertBigIntegerEquals(BigInteger('0').exp10(4), '0');
assertBigIntegerEquals(BigInteger('0').exp10(5), '0');
assertBigIntegerEquals(BigInteger('0').exp10(568), '0');
assertBigIntegerEquals(BigInteger('0').exp10(6), '0');
assertBigIntegerEquals(BigInteger('0').exp10(7), '0');
assertBigIntegerEquals(BigInteger('0').exp10(74), '0');
assertBigIntegerEquals(BigInteger('0').exp10(8), '0');
assertBigIntegerEquals(BigInteger('0').exp10(9), '0');
assertBigIntegerEquals(BigInteger('1').exp10(-1), '0');
assertBigIntegerEquals(BigInteger('1').exp10(-10), '0');
assertBigIntegerEquals(BigInteger('1').exp10(-11), '0');
assertBigIntegerEquals(BigInteger('1').exp10(-12), '0');
assertBigIntegerEquals(BigInteger('1').exp10(-2), '0');
assertBigIntegerEquals(BigInteger('1').exp10(-3), '0');
assertBigIntegerEquals(BigInteger('1').exp10(-4), '0');
assertBigIntegerEquals(BigInteger('1').exp10(-5), '0');
assertBigIntegerEquals(BigInteger('1').exp10(-6), '0');
assertBigIntegerEquals(BigInteger('1').exp10(-7), '0');
assertBigIntegerEquals(BigInteger('1').exp10(-8), '0');
assertBigIntegerEquals(BigInteger('1').exp10(-9), '0');
assertBigIntegerEquals(BigInteger('1').exp10(0), '1');
assertBigIntegerEquals(BigInteger('1').exp10(1), '10');
assertBigIntegerEquals(BigInteger('1').exp10(10), '10000000000');
assertBigIntegerEquals(BigInteger('1').exp10(2), '100');
assertBigIntegerEquals(BigInteger('1').exp10(3), '1000');
assertBigIntegerEquals(BigInteger('1').exp10(4), '10000');
assertBigIntegerEquals(BigInteger('1').exp10(5), '100000');
assertBigIntegerEquals(BigInteger('1').exp10(568), '10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('1').exp10(6), '1000000');
assertBigIntegerEquals(BigInteger('1').exp10(7), '10000000');
assertBigIntegerEquals(BigInteger('1').exp10(74), '100000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('1').exp10(8), '100000000');
assertBigIntegerEquals(BigInteger('1').exp10(9), '1000000000');
assertBigIntegerEquals(BigInteger('10').exp10(-1), '1');
assertBigIntegerEquals(BigInteger('10').exp10(-10), '0');
assertBigIntegerEquals(BigInteger('10').exp10(-11), '0');
assertBigIntegerEquals(BigInteger('10').exp10(-12), '0');
assertBigIntegerEquals(BigInteger('10').exp10(-2), '0');
assertBigIntegerEquals(BigInteger('10').exp10(-3), '0');
assertBigIntegerEquals(BigInteger('10').exp10(-4), '0');
assertBigIntegerEquals(BigInteger('10').exp10(-5), '0');
assertBigIntegerEquals(BigInteger('10').exp10(-6), '0');
assertBigIntegerEquals(BigInteger('10').exp10(-7), '0');
assertBigIntegerEquals(BigInteger('10').exp10(-8), '0');
assertBigIntegerEquals(BigInteger('10').exp10(-9), '0');
assertBigIntegerEquals(BigInteger('10').exp10(0), '10');
assertBigIntegerEquals(BigInteger('10').exp10(1), '100');
assertBigIntegerEquals(BigInteger('10').exp10(10), '100000000000');
assertBigIntegerEquals(BigInteger('10').exp10(2), '1000');
assertBigIntegerEquals(BigInteger('10').exp10(3), '10000');
assertBigIntegerEquals(BigInteger('10').exp10(4), '100000');
assertBigIntegerEquals(BigInteger('10').exp10(5), '1000000');
assertBigIntegerEquals(BigInteger('10').exp10(568), '100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('10').exp10(6), '10000000');
assertBigIntegerEquals(BigInteger('10').exp10(7), '100000000');
assertBigIntegerEquals(BigInteger('10').exp10(74), '1000000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('10').exp10(8), '1000000000');
assertBigIntegerEquals(BigInteger('10').exp10(9), '10000000000');
assertBigIntegerEquals(BigInteger('100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001').exp10(-1), '10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001').exp10(-10), '10000000000000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001').exp10(-11), '1000000000000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001').exp10(-12), '100000000000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001').exp10(-2), '1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001').exp10(-3), '100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001').exp10(-4), '10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001').exp10(-5), '1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001').exp10(-6), '100000000000000000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001').exp10(-7), '10000000000000000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001').exp10(-8), '1000000000000000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001').exp10(-9), '100000000000000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001').exp10(0), '100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001');
assertBigIntegerEquals(BigInteger('100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001').exp10(1), '1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010');
assertBigIntegerEquals(BigInteger('100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001').exp10(10), '1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000');
assertBigIntegerEquals(BigInteger('100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001').exp10(2), '10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100');
assertBigIntegerEquals(BigInteger('100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001').exp10(3), '100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000');
assertBigIntegerEquals(BigInteger('100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001').exp10(4), '1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000');
assertBigIntegerEquals(BigInteger('100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001').exp10(5), '10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000');
assertBigIntegerEquals(BigInteger('100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001').exp10(568), '1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001').exp10(6), '100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000');
assertBigIntegerEquals(BigInteger('100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001').exp10(7), '1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000');
assertBigIntegerEquals(BigInteger('100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001').exp10(74), '10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001').exp10(8), '10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000');
assertBigIntegerEquals(BigInteger('100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001').exp10(9), '100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000');
assertBigIntegerEquals(BigInteger('10666593355947573327272706917131734751210128203987445873731').exp10(-1), '1066659335594757332727270691713173475121012820398744587373');
assertBigIntegerEquals(BigInteger('10666593355947573327272706917131734751210128203987445873731').exp10(-10), '1066659335594757332727270691713173475121012820398');
assertBigIntegerEquals(BigInteger('10666593355947573327272706917131734751210128203987445873731').exp10(-11), '106665933559475733272727069171317347512101282039');
assertBigIntegerEquals(BigInteger('10666593355947573327272706917131734751210128203987445873731').exp10(-12), '10666593355947573327272706917131734751210128203');
assertBigIntegerEquals(BigInteger('10666593355947573327272706917131734751210128203987445873731').exp10(-2), '106665933559475733272727069171317347512101282039874458737');
assertBigIntegerEquals(BigInteger('10666593355947573327272706917131734751210128203987445873731').exp10(-3), '10666593355947573327272706917131734751210128203987445873');
assertBigIntegerEquals(BigInteger('10666593355947573327272706917131734751210128203987445873731').exp10(-4), '1066659335594757332727270691713173475121012820398744587');
assertBigIntegerEquals(BigInteger('10666593355947573327272706917131734751210128203987445873731').exp10(-5), '106665933559475733272727069171317347512101282039874458');
assertBigIntegerEquals(BigInteger('10666593355947573327272706917131734751210128203987445873731').exp10(-6), '10666593355947573327272706917131734751210128203987445');
assertBigIntegerEquals(BigInteger('10666593355947573327272706917131734751210128203987445873731').exp10(-7), '1066659335594757332727270691713173475121012820398744');
assertBigIntegerEquals(BigInteger('10666593355947573327272706917131734751210128203987445873731').exp10(-8), '106665933559475733272727069171317347512101282039874');
assertBigIntegerEquals(BigInteger('10666593355947573327272706917131734751210128203987445873731').exp10(-9), '10666593355947573327272706917131734751210128203987');
assertBigIntegerEquals(BigInteger('10666593355947573327272706917131734751210128203987445873731').exp10(0), '10666593355947573327272706917131734751210128203987445873731');
assertBigIntegerEquals(BigInteger('10666593355947573327272706917131734751210128203987445873731').exp10(1), '106665933559475733272727069171317347512101282039874458737310');
assertBigIntegerEquals(BigInteger('10666593355947573327272706917131734751210128203987445873731').exp10(10), '106665933559475733272727069171317347512101282039874458737310000000000');
assertBigIntegerEquals(BigInteger('10666593355947573327272706917131734751210128203987445873731').exp10(2), '1066659335594757332727270691713173475121012820398744587373100');
assertBigIntegerEquals(BigInteger('10666593355947573327272706917131734751210128203987445873731').exp10(3), '10666593355947573327272706917131734751210128203987445873731000');
assertBigIntegerEquals(BigInteger('10666593355947573327272706917131734751210128203987445873731').exp10(4), '106665933559475733272727069171317347512101282039874458737310000');
assertBigIntegerEquals(BigInteger('10666593355947573327272706917131734751210128203987445873731').exp10(5), '1066659335594757332727270691713173475121012820398744587373100000');
assertBigIntegerEquals(BigInteger('10666593355947573327272706917131734751210128203987445873731').exp10(568), '106665933559475733272727069171317347512101282039874458737310000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('10666593355947573327272706917131734751210128203987445873731').exp10(6), '10666593355947573327272706917131734751210128203987445873731000000');
assertBigIntegerEquals(BigInteger('10666593355947573327272706917131734751210128203987445873731').exp10(7), '106665933559475733272727069171317347512101282039874458737310000000');
assertBigIntegerEquals(BigInteger('10666593355947573327272706917131734751210128203987445873731').exp10(74), '1066659335594757332727270691713173475121012820398744587373100000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('10666593355947573327272706917131734751210128203987445873731').exp10(8), '1066659335594757332727270691713173475121012820398744587373100000000');
assertBigIntegerEquals(BigInteger('10666593355947573327272706917131734751210128203987445873731').exp10(9), '10666593355947573327272706917131734751210128203987445873731000000000');
assertBigIntegerEquals(BigInteger('1069098453').exp10(-1), '106909845');
assertBigIntegerEquals(BigInteger('1069098453').exp10(-10), '0');
assertBigIntegerEquals(BigInteger('1069098453').exp10(-11), '0');
assertBigIntegerEquals(BigInteger('1069098453').exp10(-12), '0');
assertBigIntegerEquals(BigInteger('1069098453').exp10(-2), '10690984');
assertBigIntegerEquals(BigInteger('1069098453').exp10(-3), '1069098');
assertBigIntegerEquals(BigInteger('1069098453').exp10(-4), '106909');
assertBigIntegerEquals(BigInteger('1069098453').exp10(-5), '10690');
assertBigIntegerEquals(BigInteger('1069098453').exp10(-6), '1069');
assertBigIntegerEquals(BigInteger('1069098453').exp10(-7), '106');
assertBigIntegerEquals(BigInteger('1069098453').exp10(-8), '10');
assertBigIntegerEquals(BigInteger('1069098453').exp10(-9), '1');
assertBigIntegerEquals(BigInteger('1069098453').exp10(0), '1069098453');
assertBigIntegerEquals(BigInteger('1069098453').exp10(1), '10690984530');
assertBigIntegerEquals(BigInteger('1069098453').exp10(10), '10690984530000000000');
assertBigIntegerEquals(BigInteger('1069098453').exp10(2), '106909845300');
assertBigIntegerEquals(BigInteger('1069098453').exp10(3), '1069098453000');
assertBigIntegerEquals(BigInteger('1069098453').exp10(4), '10690984530000');
assertBigIntegerEquals(BigInteger('1069098453').exp10(5), '106909845300000');
assertBigIntegerEquals(BigInteger('1069098453').exp10(568), '10690984530000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('1069098453').exp10(6), '1069098453000000');
assertBigIntegerEquals(BigInteger('1069098453').exp10(7), '10690984530000000');
assertBigIntegerEquals(BigInteger('1069098453').exp10(74), '106909845300000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('1069098453').exp10(8), '106909845300000000');
assertBigIntegerEquals(BigInteger('1069098453').exp10(9), '1069098453000000000');
assertBigIntegerEquals(BigInteger('1157088278178259580357648900890859241864806376958863839397325291381770958183861770602065951818156880455074305').exp10(-1), '115708827817825958035764890089085924186480637695886383939732529138177095818386177060206595181815688045507430');
assertBigIntegerEquals(BigInteger('1157088278178259580357648900890859241864806376958863839397325291381770958183861770602065951818156880455074305').exp10(-10), '115708827817825958035764890089085924186480637695886383939732529138177095818386177060206595181815688');
assertBigIntegerEquals(BigInteger('1157088278178259580357648900890859241864806376958863839397325291381770958183861770602065951818156880455074305').exp10(-11), '11570882781782595803576489008908592418648063769588638393973252913817709581838617706020659518181568');
assertBigIntegerEquals(BigInteger('1157088278178259580357648900890859241864806376958863839397325291381770958183861770602065951818156880455074305').exp10(-12), '1157088278178259580357648900890859241864806376958863839397325291381770958183861770602065951818156');
assertBigIntegerEquals(BigInteger('1157088278178259580357648900890859241864806376958863839397325291381770958183861770602065951818156880455074305').exp10(-2), '11570882781782595803576489008908592418648063769588638393973252913817709581838617706020659518181568804550743');
assertBigIntegerEquals(BigInteger('1157088278178259580357648900890859241864806376958863839397325291381770958183861770602065951818156880455074305').exp10(-3), '1157088278178259580357648900890859241864806376958863839397325291381770958183861770602065951818156880455074');
assertBigIntegerEquals(BigInteger('1157088278178259580357648900890859241864806376958863839397325291381770958183861770602065951818156880455074305').exp10(-4), '115708827817825958035764890089085924186480637695886383939732529138177095818386177060206595181815688045507');
assertBigIntegerEquals(BigInteger('1157088278178259580357648900890859241864806376958863839397325291381770958183861770602065951818156880455074305').exp10(-5), '11570882781782595803576489008908592418648063769588638393973252913817709581838617706020659518181568804550');
assertBigIntegerEquals(BigInteger('1157088278178259580357648900890859241864806376958863839397325291381770958183861770602065951818156880455074305').exp10(-6), '1157088278178259580357648900890859241864806376958863839397325291381770958183861770602065951818156880455');
assertBigIntegerEquals(BigInteger('1157088278178259580357648900890859241864806376958863839397325291381770958183861770602065951818156880455074305').exp10(-7), '115708827817825958035764890089085924186480637695886383939732529138177095818386177060206595181815688045');
assertBigIntegerEquals(BigInteger('1157088278178259580357648900890859241864806376958863839397325291381770958183861770602065951818156880455074305').exp10(-8), '11570882781782595803576489008908592418648063769588638393973252913817709581838617706020659518181568804');
assertBigIntegerEquals(BigInteger('1157088278178259580357648900890859241864806376958863839397325291381770958183861770602065951818156880455074305').exp10(-9), '1157088278178259580357648900890859241864806376958863839397325291381770958183861770602065951818156880');
assertBigIntegerEquals(BigInteger('1157088278178259580357648900890859241864806376958863839397325291381770958183861770602065951818156880455074305').exp10(0), '1157088278178259580357648900890859241864806376958863839397325291381770958183861770602065951818156880455074305');
assertBigIntegerEquals(BigInteger('1157088278178259580357648900890859241864806376958863839397325291381770958183861770602065951818156880455074305').exp10(1), '11570882781782595803576489008908592418648063769588638393973252913817709581838617706020659518181568804550743050');
assertBigIntegerEquals(BigInteger('1157088278178259580357648900890859241864806376958863839397325291381770958183861770602065951818156880455074305').exp10(10), '11570882781782595803576489008908592418648063769588638393973252913817709581838617706020659518181568804550743050000000000');
assertBigIntegerEquals(BigInteger('1157088278178259580357648900890859241864806376958863839397325291381770958183861770602065951818156880455074305').exp10(2), '115708827817825958035764890089085924186480637695886383939732529138177095818386177060206595181815688045507430500');
assertBigIntegerEquals(BigInteger('1157088278178259580357648900890859241864806376958863839397325291381770958183861770602065951818156880455074305').exp10(3), '1157088278178259580357648900890859241864806376958863839397325291381770958183861770602065951818156880455074305000');
assertBigIntegerEquals(BigInteger('1157088278178259580357648900890859241864806376958863839397325291381770958183861770602065951818156880455074305').exp10(4), '11570882781782595803576489008908592418648063769588638393973252913817709581838617706020659518181568804550743050000');
assertBigIntegerEquals(BigInteger('1157088278178259580357648900890859241864806376958863839397325291381770958183861770602065951818156880455074305').exp10(5), '115708827817825958035764890089085924186480637695886383939732529138177095818386177060206595181815688045507430500000');
assertBigIntegerEquals(BigInteger('1157088278178259580357648900890859241864806376958863839397325291381770958183861770602065951818156880455074305').exp10(568), '11570882781782595803576489008908592418648063769588638393973252913817709581838617706020659518181568804550743050000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('1157088278178259580357648900890859241864806376958863839397325291381770958183861770602065951818156880455074305').exp10(6), '1157088278178259580357648900890859241864806376958863839397325291381770958183861770602065951818156880455074305000000');
assertBigIntegerEquals(BigInteger('1157088278178259580357648900890859241864806376958863839397325291381770958183861770602065951818156880455074305').exp10(7), '11570882781782595803576489008908592418648063769588638393973252913817709581838617706020659518181568804550743050000000');
assertBigIntegerEquals(BigInteger('1157088278178259580357648900890859241864806376958863839397325291381770958183861770602065951818156880455074305').exp10(74), '115708827817825958035764890089085924186480637695886383939732529138177095818386177060206595181815688045507430500000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('1157088278178259580357648900890859241864806376958863839397325291381770958183861770602065951818156880455074305').exp10(8), '115708827817825958035764890089085924186480637695886383939732529138177095818386177060206595181815688045507430500000000');
assertBigIntegerEquals(BigInteger('1157088278178259580357648900890859241864806376958863839397325291381770958183861770602065951818156880455074305').exp10(9), '1157088278178259580357648900890859241864806376958863839397325291381770958183861770602065951818156880455074305000000000');
assertBigIntegerEquals(BigInteger('13024584').exp10(-1), '1302458');
assertBigIntegerEquals(BigInteger('13024584').exp10(-10), '0');
assertBigIntegerEquals(BigInteger('13024584').exp10(-11), '0');
assertBigIntegerEquals(BigInteger('13024584').exp10(-12), '0');
assertBigIntegerEquals(BigInteger('13024584').exp10(-2), '130245');
assertBigIntegerEquals(BigInteger('13024584').exp10(-3), '13024');
assertBigIntegerEquals(BigInteger('13024584').exp10(-4), '1302');
assertBigIntegerEquals(BigInteger('13024584').exp10(-5), '130');
assertBigIntegerEquals(BigInteger('13024584').exp10(-6), '13');
assertBigIntegerEquals(BigInteger('13024584').exp10(-7), '1');
assertBigIntegerEquals(BigInteger('13024584').exp10(-8), '0');
assertBigIntegerEquals(BigInteger('13024584').exp10(-9), '0');
assertBigIntegerEquals(BigInteger('13024584').exp10(0), '13024584');
assertBigIntegerEquals(BigInteger('13024584').exp10(1), '130245840');
assertBigIntegerEquals(BigInteger('13024584').exp10(10), '130245840000000000');
assertBigIntegerEquals(BigInteger('13024584').exp10(2), '1302458400');
assertBigIntegerEquals(BigInteger('13024584').exp10(3), '13024584000');
assertBigIntegerEquals(BigInteger('13024584').exp10(4), '130245840000');
assertBigIntegerEquals(BigInteger('13024584').exp10(5), '1302458400000');
assertBigIntegerEquals(BigInteger('13024584').exp10(568), '130245840000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('13024584').exp10(6), '13024584000000');
assertBigIntegerEquals(BigInteger('13024584').exp10(7), '130245840000000');
assertBigIntegerEquals(BigInteger('13024584').exp10(74), '1302458400000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('13024584').exp10(8), '1302458400000000');
assertBigIntegerEquals(BigInteger('13024584').exp10(9), '13024584000000000');
assertBigIntegerEquals(BigInteger('1674508628301744').exp10(-1), '167450862830174');
assertBigIntegerEquals(BigInteger('1674508628301744').exp10(-10), '167450');
assertBigIntegerEquals(BigInteger('1674508628301744').exp10(-11), '16745');
assertBigIntegerEquals(BigInteger('1674508628301744').exp10(-12), '1674');
assertBigIntegerEquals(BigInteger('1674508628301744').exp10(-2), '16745086283017');
assertBigIntegerEquals(BigInteger('1674508628301744').exp10(-3), '1674508628301');
assertBigIntegerEquals(BigInteger('1674508628301744').exp10(-4), '167450862830');
assertBigIntegerEquals(BigInteger('1674508628301744').exp10(-5), '16745086283');
assertBigIntegerEquals(BigInteger('1674508628301744').exp10(-6), '1674508628');
assertBigIntegerEquals(BigInteger('1674508628301744').exp10(-7), '167450862');
assertBigIntegerEquals(BigInteger('1674508628301744').exp10(-8), '16745086');
assertBigIntegerEquals(BigInteger('1674508628301744').exp10(-9), '1674508');
assertBigIntegerEquals(BigInteger('1674508628301744').exp10(0), '1674508628301744');
assertBigIntegerEquals(BigInteger('1674508628301744').exp10(1), '16745086283017440');
assertBigIntegerEquals(BigInteger('1674508628301744').exp10(10), '16745086283017440000000000');
assertBigIntegerEquals(BigInteger('1674508628301744').exp10(2), '167450862830174400');
assertBigIntegerEquals(BigInteger('1674508628301744').exp10(3), '1674508628301744000');
assertBigIntegerEquals(BigInteger('1674508628301744').exp10(4), '16745086283017440000');
assertBigIntegerEquals(BigInteger('1674508628301744').exp10(5), '167450862830174400000');
assertBigIntegerEquals(BigInteger('1674508628301744').exp10(568), '16745086283017440000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('1674508628301744').exp10(6), '1674508628301744000000');
assertBigIntegerEquals(BigInteger('1674508628301744').exp10(7), '16745086283017440000000');
assertBigIntegerEquals(BigInteger('1674508628301744').exp10(74), '167450862830174400000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('1674508628301744').exp10(8), '167450862830174400000000');
assertBigIntegerEquals(BigInteger('1674508628301744').exp10(9), '1674508628301744000000000');
assertBigIntegerEquals(BigInteger('186584847831855051371620112806257408623512415396284950662844187803996672517802144153048620046442071246772010940398135071352737249628365452884576153529405652404446967865012969').exp10(-1), '18658484783185505137162011280625740862351241539628495066284418780399667251780214415304862004644207124677201094039813507135273724962836545288457615352940565240444696786501296');
assertBigIntegerEquals(BigInteger('186584847831855051371620112806257408623512415396284950662844187803996672517802144153048620046442071246772010940398135071352737249628365452884576153529405652404446967865012969').exp10(-10), '18658484783185505137162011280625740862351241539628495066284418780399667251780214415304862004644207124677201094039813507135273724962836545288457615352940565240444696');
assertBigIntegerEquals(BigInteger('186584847831855051371620112806257408623512415396284950662844187803996672517802144153048620046442071246772010940398135071352737249628365452884576153529405652404446967865012969').exp10(-11), '1865848478318550513716201128062574086235124153962849506628441878039966725178021441530486200464420712467720109403981350713527372496283654528845761535294056524044469');
assertBigIntegerEquals(BigInteger('186584847831855051371620112806257408623512415396284950662844187803996672517802144153048620046442071246772010940398135071352737249628365452884576153529405652404446967865012969').exp10(-12), '186584847831855051371620112806257408623512415396284950662844187803996672517802144153048620046442071246772010940398135071352737249628365452884576153529405652404446');
assertBigIntegerEquals(BigInteger('186584847831855051371620112806257408623512415396284950662844187803996672517802144153048620046442071246772010940398135071352737249628365452884576153529405652404446967865012969').exp10(-2), '1865848478318550513716201128062574086235124153962849506628441878039966725178021441530486200464420712467720109403981350713527372496283654528845761535294056524044469678650129');
assertBigIntegerEquals(BigInteger('186584847831855051371620112806257408623512415396284950662844187803996672517802144153048620046442071246772010940398135071352737249628365452884576153529405652404446967865012969').exp10(-3), '186584847831855051371620112806257408623512415396284950662844187803996672517802144153048620046442071246772010940398135071352737249628365452884576153529405652404446967865012');
assertBigIntegerEquals(BigInteger('186584847831855051371620112806257408623512415396284950662844187803996672517802144153048620046442071246772010940398135071352737249628365452884576153529405652404446967865012969').exp10(-4), '18658484783185505137162011280625740862351241539628495066284418780399667251780214415304862004644207124677201094039813507135273724962836545288457615352940565240444696786501');
assertBigIntegerEquals(BigInteger('186584847831855051371620112806257408623512415396284950662844187803996672517802144153048620046442071246772010940398135071352737249628365452884576153529405652404446967865012969').exp10(-5), '1865848478318550513716201128062574086235124153962849506628441878039966725178021441530486200464420712467720109403981350713527372496283654528845761535294056524044469678650');
assertBigIntegerEquals(BigInteger('186584847831855051371620112806257408623512415396284950662844187803996672517802144153048620046442071246772010940398135071352737249628365452884576153529405652404446967865012969').exp10(-6), '186584847831855051371620112806257408623512415396284950662844187803996672517802144153048620046442071246772010940398135071352737249628365452884576153529405652404446967865');
assertBigIntegerEquals(BigInteger('186584847831855051371620112806257408623512415396284950662844187803996672517802144153048620046442071246772010940398135071352737249628365452884576153529405652404446967865012969').exp10(-7), '18658484783185505137162011280625740862351241539628495066284418780399667251780214415304862004644207124677201094039813507135273724962836545288457615352940565240444696786');
assertBigIntegerEquals(BigInteger('186584847831855051371620112806257408623512415396284950662844187803996672517802144153048620046442071246772010940398135071352737249628365452884576153529405652404446967865012969').exp10(-8), '1865848478318550513716201128062574086235124153962849506628441878039966725178021441530486200464420712467720109403981350713527372496283654528845761535294056524044469678');
assertBigIntegerEquals(BigInteger('186584847831855051371620112806257408623512415396284950662844187803996672517802144153048620046442071246772010940398135071352737249628365452884576153529405652404446967865012969').exp10(-9), '186584847831855051371620112806257408623512415396284950662844187803996672517802144153048620046442071246772010940398135071352737249628365452884576153529405652404446967');
assertBigIntegerEquals(BigInteger('186584847831855051371620112806257408623512415396284950662844187803996672517802144153048620046442071246772010940398135071352737249628365452884576153529405652404446967865012969').exp10(0), '186584847831855051371620112806257408623512415396284950662844187803996672517802144153048620046442071246772010940398135071352737249628365452884576153529405652404446967865012969');
assertBigIntegerEquals(BigInteger('186584847831855051371620112806257408623512415396284950662844187803996672517802144153048620046442071246772010940398135071352737249628365452884576153529405652404446967865012969').exp10(1), '1865848478318550513716201128062574086235124153962849506628441878039966725178021441530486200464420712467720109403981350713527372496283654528845761535294056524044469678650129690');
assertBigIntegerEquals(BigInteger('186584847831855051371620112806257408623512415396284950662844187803996672517802144153048620046442071246772010940398135071352737249628365452884576153529405652404446967865012969').exp10(10), '1865848478318550513716201128062574086235124153962849506628441878039966725178021441530486200464420712467720109403981350713527372496283654528845761535294056524044469678650129690000000000');
assertBigIntegerEquals(BigInteger('186584847831855051371620112806257408623512415396284950662844187803996672517802144153048620046442071246772010940398135071352737249628365452884576153529405652404446967865012969').exp10(2), '18658484783185505137162011280625740862351241539628495066284418780399667251780214415304862004644207124677201094039813507135273724962836545288457615352940565240444696786501296900');
assertBigIntegerEquals(BigInteger('186584847831855051371620112806257408623512415396284950662844187803996672517802144153048620046442071246772010940398135071352737249628365452884576153529405652404446967865012969').exp10(3), '186584847831855051371620112806257408623512415396284950662844187803996672517802144153048620046442071246772010940398135071352737249628365452884576153529405652404446967865012969000');
assertBigIntegerEquals(BigInteger('186584847831855051371620112806257408623512415396284950662844187803996672517802144153048620046442071246772010940398135071352737249628365452884576153529405652404446967865012969').exp10(4), '1865848478318550513716201128062574086235124153962849506628441878039966725178021441530486200464420712467720109403981350713527372496283654528845761535294056524044469678650129690000');
assertBigIntegerEquals(BigInteger('186584847831855051371620112806257408623512415396284950662844187803996672517802144153048620046442071246772010940398135071352737249628365452884576153529405652404446967865012969').exp10(5), '18658484783185505137162011280625740862351241539628495066284418780399667251780214415304862004644207124677201094039813507135273724962836545288457615352940565240444696786501296900000');
assertBigIntegerEquals(BigInteger('186584847831855051371620112806257408623512415396284950662844187803996672517802144153048620046442071246772010940398135071352737249628365452884576153529405652404446967865012969').exp10(568), '1865848478318550513716201128062574086235124153962849506628441878039966725178021441530486200464420712467720109403981350713527372496283654528845761535294056524044469678650129690000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('186584847831855051371620112806257408623512415396284950662844187803996672517802144153048620046442071246772010940398135071352737249628365452884576153529405652404446967865012969').exp10(6), '186584847831855051371620112806257408623512415396284950662844187803996672517802144153048620046442071246772010940398135071352737249628365452884576153529405652404446967865012969000000');
assertBigIntegerEquals(BigInteger('186584847831855051371620112806257408623512415396284950662844187803996672517802144153048620046442071246772010940398135071352737249628365452884576153529405652404446967865012969').exp10(7), '1865848478318550513716201128062574086235124153962849506628441878039966725178021441530486200464420712467720109403981350713527372496283654528845761535294056524044469678650129690000000');
assertBigIntegerEquals(BigInteger('186584847831855051371620112806257408623512415396284950662844187803996672517802144153048620046442071246772010940398135071352737249628365452884576153529405652404446967865012969').exp10(74), '18658484783185505137162011280625740862351241539628495066284418780399667251780214415304862004644207124677201094039813507135273724962836545288457615352940565240444696786501296900000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('186584847831855051371620112806257408623512415396284950662844187803996672517802144153048620046442071246772010940398135071352737249628365452884576153529405652404446967865012969').exp10(8), '18658484783185505137162011280625740862351241539628495066284418780399667251780214415304862004644207124677201094039813507135273724962836545288457615352940565240444696786501296900000000');
assertBigIntegerEquals(BigInteger('186584847831855051371620112806257408623512415396284950662844187803996672517802144153048620046442071246772010940398135071352737249628365452884576153529405652404446967865012969').exp10(9), '186584847831855051371620112806257408623512415396284950662844187803996672517802144153048620046442071246772010940398135071352737249628365452884576153529405652404446967865012969000000000');
assertBigIntegerEquals(BigInteger('19618436088').exp10(-1), '1961843608');
assertBigIntegerEquals(BigInteger('19618436088').exp10(-10), '1');
assertBigIntegerEquals(BigInteger('19618436088').exp10(-11), '0');
assertBigIntegerEquals(BigInteger('19618436088').exp10(-12), '0');
assertBigIntegerEquals(BigInteger('19618436088').exp10(-2), '196184360');
assertBigIntegerEquals(BigInteger('19618436088').exp10(-3), '19618436');
assertBigIntegerEquals(BigInteger('19618436088').exp10(-4), '1961843');
assertBigIntegerEquals(BigInteger('19618436088').exp10(-5), '196184');
assertBigIntegerEquals(BigInteger('19618436088').exp10(-6), '19618');
assertBigIntegerEquals(BigInteger('19618436088').exp10(-7), '1961');
assertBigIntegerEquals(BigInteger('19618436088').exp10(-8), '196');
assertBigIntegerEquals(BigInteger('19618436088').exp10(-9), '19');
assertBigIntegerEquals(BigInteger('19618436088').exp10(0), '19618436088');
assertBigIntegerEquals(BigInteger('19618436088').exp10(1), '196184360880');
assertBigIntegerEquals(BigInteger('19618436088').exp10(10), '196184360880000000000');
assertBigIntegerEquals(BigInteger('19618436088').exp10(2), '1961843608800');
assertBigIntegerEquals(BigInteger('19618436088').exp10(3), '19618436088000');
assertBigIntegerEquals(BigInteger('19618436088').exp10(4), '196184360880000');
assertBigIntegerEquals(BigInteger('19618436088').exp10(5), '1961843608800000');
assertBigIntegerEquals(BigInteger('19618436088').exp10(568), '196184360880000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('19618436088').exp10(6), '19618436088000000');
assertBigIntegerEquals(BigInteger('19618436088').exp10(7), '196184360880000000');
assertBigIntegerEquals(BigInteger('19618436088').exp10(74), '1961843608800000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('19618436088').exp10(8), '1961843608800000000');
assertBigIntegerEquals(BigInteger('19618436088').exp10(9), '19618436088000000000');
assertBigIntegerEquals(BigInteger('2').exp10(-1), '0');
assertBigIntegerEquals(BigInteger('2').exp10(-10), '0');
assertBigIntegerEquals(BigInteger('2').exp10(-11), '0');
assertBigIntegerEquals(BigInteger('2').exp10(-12), '0');
assertBigIntegerEquals(BigInteger('2').exp10(-2), '0');
assertBigIntegerEquals(BigInteger('2').exp10(-3), '0');
assertBigIntegerEquals(BigInteger('2').exp10(-4), '0');
assertBigIntegerEquals(BigInteger('2').exp10(-5), '0');
assertBigIntegerEquals(BigInteger('2').exp10(-6), '0');
assertBigIntegerEquals(BigInteger('2').exp10(-7), '0');
assertBigIntegerEquals(BigInteger('2').exp10(-8), '0');
assertBigIntegerEquals(BigInteger('2').exp10(-9), '0');
assertBigIntegerEquals(BigInteger('2').exp10(0), '2');
assertBigIntegerEquals(BigInteger('2').exp10(1), '20');
assertBigIntegerEquals(BigInteger('2').exp10(10), '20000000000');
assertBigIntegerEquals(BigInteger('2').exp10(2), '200');
assertBigIntegerEquals(BigInteger('2').exp10(3), '2000');
assertBigIntegerEquals(BigInteger('2').exp10(4), '20000');
assertBigIntegerEquals(BigInteger('2').exp10(5), '200000');
assertBigIntegerEquals(BigInteger('2').exp10(568), '20000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('2').exp10(6), '2000000');
assertBigIntegerEquals(BigInteger('2').exp10(7), '20000000');
assertBigIntegerEquals(BigInteger('2').exp10(74), '200000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('2').exp10(8), '200000000');
assertBigIntegerEquals(BigInteger('2').exp10(9), '2000000000');
assertBigIntegerEquals(BigInteger('2006543443808700').exp10(-1), '200654344380870');
assertBigIntegerEquals(BigInteger('2006543443808700').exp10(-10), '200654');
assertBigIntegerEquals(BigInteger('2006543443808700').exp10(-11), '20065');
assertBigIntegerEquals(BigInteger('2006543443808700').exp10(-12), '2006');
assertBigIntegerEquals(BigInteger('2006543443808700').exp10(-2), '20065434438087');
assertBigIntegerEquals(BigInteger('2006543443808700').exp10(-3), '2006543443808');
assertBigIntegerEquals(BigInteger('2006543443808700').exp10(-4), '200654344380');
assertBigIntegerEquals(BigInteger('2006543443808700').exp10(-5), '20065434438');
assertBigIntegerEquals(BigInteger('2006543443808700').exp10(-6), '2006543443');
assertBigIntegerEquals(BigInteger('2006543443808700').exp10(-7), '200654344');
assertBigIntegerEquals(BigInteger('2006543443808700').exp10(-8), '20065434');
assertBigIntegerEquals(BigInteger('2006543443808700').exp10(-9), '2006543');
assertBigIntegerEquals(BigInteger('2006543443808700').exp10(0), '2006543443808700');
assertBigIntegerEquals(BigInteger('2006543443808700').exp10(1), '20065434438087000');
assertBigIntegerEquals(BigInteger('2006543443808700').exp10(10), '20065434438087000000000000');
assertBigIntegerEquals(BigInteger('2006543443808700').exp10(2), '200654344380870000');
assertBigIntegerEquals(BigInteger('2006543443808700').exp10(3), '2006543443808700000');
assertBigIntegerEquals(BigInteger('2006543443808700').exp10(4), '20065434438087000000');
assertBigIntegerEquals(BigInteger('2006543443808700').exp10(5), '200654344380870000000');
assertBigIntegerEquals(BigInteger('2006543443808700').exp10(568), '20065434438087000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('2006543443808700').exp10(6), '2006543443808700000000');
assertBigIntegerEquals(BigInteger('2006543443808700').exp10(7), '20065434438087000000000');
assertBigIntegerEquals(BigInteger('2006543443808700').exp10(74), '200654344380870000000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('2006543443808700').exp10(8), '200654344380870000000000');
assertBigIntegerEquals(BigInteger('2006543443808700').exp10(9), '2006543443808700000000000');
assertBigIntegerEquals(BigInteger('2036547874980598').exp10(-1), '203654787498059');
assertBigIntegerEquals(BigInteger('2036547874980598').exp10(-10), '203654');
assertBigIntegerEquals(BigInteger('2036547874980598').exp10(-11), '20365');
assertBigIntegerEquals(BigInteger('2036547874980598').exp10(-12), '2036');
assertBigIntegerEquals(BigInteger('2036547874980598').exp10(-2), '20365478749805');
assertBigIntegerEquals(BigInteger('2036547874980598').exp10(-3), '2036547874980');
assertBigIntegerEquals(BigInteger('2036547874980598').exp10(-4), '203654787498');
assertBigIntegerEquals(BigInteger('2036547874980598').exp10(-5), '20365478749');
assertBigIntegerEquals(BigInteger('2036547874980598').exp10(-6), '2036547874');
assertBigIntegerEquals(BigInteger('2036547874980598').exp10(-7), '203654787');
assertBigIntegerEquals(BigInteger('2036547874980598').exp10(-8), '20365478');
assertBigIntegerEquals(BigInteger('2036547874980598').exp10(-9), '2036547');
assertBigIntegerEquals(BigInteger('2036547874980598').exp10(0), '2036547874980598');
assertBigIntegerEquals(BigInteger('2036547874980598').exp10(1), '20365478749805980');
assertBigIntegerEquals(BigInteger('2036547874980598').exp10(10), '20365478749805980000000000');
assertBigIntegerEquals(BigInteger('2036547874980598').exp10(2), '203654787498059800');
assertBigIntegerEquals(BigInteger('2036547874980598').exp10(3), '2036547874980598000');
assertBigIntegerEquals(BigInteger('2036547874980598').exp10(4), '20365478749805980000');
assertBigIntegerEquals(BigInteger('2036547874980598').exp10(5), '203654787498059800000');
assertBigIntegerEquals(BigInteger('2036547874980598').exp10(568), '20365478749805980000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('2036547874980598').exp10(6), '2036547874980598000000');
assertBigIntegerEquals(BigInteger('2036547874980598').exp10(7), '20365478749805980000000');
assertBigIntegerEquals(BigInteger('2036547874980598').exp10(74), '203654787498059800000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('2036547874980598').exp10(8), '203654787498059800000000');
assertBigIntegerEquals(BigInteger('2036547874980598').exp10(9), '2036547874980598000000000');
assertBigIntegerEquals(BigInteger('20892053861').exp10(-1), '2089205386');
assertBigIntegerEquals(BigInteger('20892053861').exp10(-10), '2');
assertBigIntegerEquals(BigInteger('20892053861').exp10(-11), '0');
assertBigIntegerEquals(BigInteger('20892053861').exp10(-12), '0');
assertBigIntegerEquals(BigInteger('20892053861').exp10(-2), '208920538');
assertBigIntegerEquals(BigInteger('20892053861').exp10(-3), '20892053');
assertBigIntegerEquals(BigInteger('20892053861').exp10(-4), '2089205');
assertBigIntegerEquals(BigInteger('20892053861').exp10(-5), '208920');
assertBigIntegerEquals(BigInteger('20892053861').exp10(-6), '20892');
assertBigIntegerEquals(BigInteger('20892053861').exp10(-7), '2089');
assertBigIntegerEquals(BigInteger('20892053861').exp10(-8), '208');
assertBigIntegerEquals(BigInteger('20892053861').exp10(-9), '20');
assertBigIntegerEquals(BigInteger('20892053861').exp10(0), '20892053861');
assertBigIntegerEquals(BigInteger('20892053861').exp10(1), '208920538610');
assertBigIntegerEquals(BigInteger('20892053861').exp10(10), '208920538610000000000');
assertBigIntegerEquals(BigInteger('20892053861').exp10(2), '2089205386100');
assertBigIntegerEquals(BigInteger('20892053861').exp10(3), '20892053861000');
assertBigIntegerEquals(BigInteger('20892053861').exp10(4), '208920538610000');
assertBigIntegerEquals(BigInteger('20892053861').exp10(5), '2089205386100000');
assertBigIntegerEquals(BigInteger('20892053861').exp10(568), '208920538610000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('20892053861').exp10(6), '20892053861000000');
assertBigIntegerEquals(BigInteger('20892053861').exp10(7), '208920538610000000');
assertBigIntegerEquals(BigInteger('20892053861').exp10(74), '2089205386100000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('20892053861').exp10(8), '2089205386100000000');
assertBigIntegerEquals(BigInteger('20892053861').exp10(9), '20892053861000000000');
assertBigIntegerEquals(BigInteger('22132921').exp10(-1), '2213292');
assertBigIntegerEquals(BigInteger('22132921').exp10(-10), '0');
assertBigIntegerEquals(BigInteger('22132921').exp10(-11), '0');
assertBigIntegerEquals(BigInteger('22132921').exp10(-12), '0');
assertBigIntegerEquals(BigInteger('22132921').exp10(-2), '221329');
assertBigIntegerEquals(BigInteger('22132921').exp10(-3), '22132');
assertBigIntegerEquals(BigInteger('22132921').exp10(-4), '2213');
assertBigIntegerEquals(BigInteger('22132921').exp10(-5), '221');
assertBigIntegerEquals(BigInteger('22132921').exp10(-6), '22');
assertBigIntegerEquals(BigInteger('22132921').exp10(-7), '2');
assertBigIntegerEquals(BigInteger('22132921').exp10(-8), '0');
assertBigIntegerEquals(BigInteger('22132921').exp10(-9), '0');
assertBigIntegerEquals(BigInteger('22132921').exp10(0), '22132921');
assertBigIntegerEquals(BigInteger('22132921').exp10(1), '221329210');
assertBigIntegerEquals(BigInteger('22132921').exp10(10), '221329210000000000');
assertBigIntegerEquals(BigInteger('22132921').exp10(2), '2213292100');
assertBigIntegerEquals(BigInteger('22132921').exp10(3), '22132921000');
assertBigIntegerEquals(BigInteger('22132921').exp10(4), '221329210000');
assertBigIntegerEquals(BigInteger('22132921').exp10(5), '2213292100000');
assertBigIntegerEquals(BigInteger('22132921').exp10(568), '221329210000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('22132921').exp10(6), '22132921000000');
assertBigIntegerEquals(BigInteger('22132921').exp10(7), '221329210000000');
assertBigIntegerEquals(BigInteger('22132921').exp10(74), '2213292100000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('22132921').exp10(8), '2213292100000000');
assertBigIntegerEquals(BigInteger('22132921').exp10(9), '22132921000000000');
assertBigIntegerEquals(BigInteger('259580357648900890').exp10(-1), '25958035764890089');
assertBigIntegerEquals(BigInteger('259580357648900890').exp10(-10), '25958035');
assertBigIntegerEquals(BigInteger('259580357648900890').exp10(-11), '2595803');
assertBigIntegerEquals(BigInteger('259580357648900890').exp10(-12), '259580');
assertBigIntegerEquals(BigInteger('259580357648900890').exp10(-2), '2595803576489008');
assertBigIntegerEquals(BigInteger('259580357648900890').exp10(-3), '259580357648900');
assertBigIntegerEquals(BigInteger('259580357648900890').exp10(-4), '25958035764890');
assertBigIntegerEquals(BigInteger('259580357648900890').exp10(-5), '2595803576489');
assertBigIntegerEquals(BigInteger('259580357648900890').exp10(-6), '259580357648');
assertBigIntegerEquals(BigInteger('259580357648900890').exp10(-7), '25958035764');
assertBigIntegerEquals(BigInteger('259580357648900890').exp10(-8), '2595803576');
assertBigIntegerEquals(BigInteger('259580357648900890').exp10(-9), '259580357');
assertBigIntegerEquals(BigInteger('259580357648900890').exp10(0), '259580357648900890');
assertBigIntegerEquals(BigInteger('259580357648900890').exp10(1), '2595803576489008900');
assertBigIntegerEquals(BigInteger('259580357648900890').exp10(10), '2595803576489008900000000000');
assertBigIntegerEquals(BigInteger('259580357648900890').exp10(2), '25958035764890089000');
assertBigIntegerEquals(BigInteger('259580357648900890').exp10(3), '259580357648900890000');
assertBigIntegerEquals(BigInteger('259580357648900890').exp10(4), '2595803576489008900000');
assertBigIntegerEquals(BigInteger('259580357648900890').exp10(5), '25958035764890089000000');
assertBigIntegerEquals(BigInteger('259580357648900890').exp10(568), '2595803576489008900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('259580357648900890').exp10(6), '259580357648900890000000');
assertBigIntegerEquals(BigInteger('259580357648900890').exp10(7), '2595803576489008900000000');
assertBigIntegerEquals(BigInteger('259580357648900890').exp10(74), '25958035764890089000000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('259580357648900890').exp10(8), '25958035764890089000000000');
assertBigIntegerEquals(BigInteger('259580357648900890').exp10(9), '259580357648900890000000000');
assertBigIntegerEquals(BigInteger('277460220803170133683867392965292283112343804101723022926366400443977002252439890142191924145722').exp10(-1), '27746022080317013368386739296529228311234380410172302292636640044397700225243989014219192414572');
assertBigIntegerEquals(BigInteger('277460220803170133683867392965292283112343804101723022926366400443977002252439890142191924145722').exp10(-10), '27746022080317013368386739296529228311234380410172302292636640044397700225243989014219');
assertBigIntegerEquals(BigInteger('277460220803170133683867392965292283112343804101723022926366400443977002252439890142191924145722').exp10(-11), '2774602208031701336838673929652922831123438041017230229263664004439770022524398901421');
assertBigIntegerEquals(BigInteger('277460220803170133683867392965292283112343804101723022926366400443977002252439890142191924145722').exp10(-12), '277460220803170133683867392965292283112343804101723022926366400443977002252439890142');
assertBigIntegerEquals(BigInteger('277460220803170133683867392965292283112343804101723022926366400443977002252439890142191924145722').exp10(-2), '2774602208031701336838673929652922831123438041017230229263664004439770022524398901421919241457');
assertBigIntegerEquals(BigInteger('277460220803170133683867392965292283112343804101723022926366400443977002252439890142191924145722').exp10(-3), '277460220803170133683867392965292283112343804101723022926366400443977002252439890142191924145');
assertBigIntegerEquals(BigInteger('277460220803170133683867392965292283112343804101723022926366400443977002252439890142191924145722').exp10(-4), '27746022080317013368386739296529228311234380410172302292636640044397700225243989014219192414');
assertBigIntegerEquals(BigInteger('277460220803170133683867392965292283112343804101723022926366400443977002252439890142191924145722').exp10(-5), '2774602208031701336838673929652922831123438041017230229263664004439770022524398901421919241');
assertBigIntegerEquals(BigInteger('277460220803170133683867392965292283112343804101723022926366400443977002252439890142191924145722').exp10(-6), '277460220803170133683867392965292283112343804101723022926366400443977002252439890142191924');
assertBigIntegerEquals(BigInteger('277460220803170133683867392965292283112343804101723022926366400443977002252439890142191924145722').exp10(-7), '27746022080317013368386739296529228311234380410172302292636640044397700225243989014219192');
assertBigIntegerEquals(BigInteger('277460220803170133683867392965292283112343804101723022926366400443977002252439890142191924145722').exp10(-8), '2774602208031701336838673929652922831123438041017230229263664004439770022524398901421919');
assertBigIntegerEquals(BigInteger('277460220803170133683867392965292283112343804101723022926366400443977002252439890142191924145722').exp10(-9), '277460220803170133683867392965292283112343804101723022926366400443977002252439890142191');
assertBigIntegerEquals(BigInteger('277460220803170133683867392965292283112343804101723022926366400443977002252439890142191924145722').exp10(0), '277460220803170133683867392965292283112343804101723022926366400443977002252439890142191924145722');
assertBigIntegerEquals(BigInteger('277460220803170133683867392965292283112343804101723022926366400443977002252439890142191924145722').exp10(1), '2774602208031701336838673929652922831123438041017230229263664004439770022524398901421919241457220');
assertBigIntegerEquals(BigInteger('277460220803170133683867392965292283112343804101723022926366400443977002252439890142191924145722').exp10(10), '2774602208031701336838673929652922831123438041017230229263664004439770022524398901421919241457220000000000');
assertBigIntegerEquals(BigInteger('277460220803170133683867392965292283112343804101723022926366400443977002252439890142191924145722').exp10(2), '27746022080317013368386739296529228311234380410172302292636640044397700225243989014219192414572200');
assertBigIntegerEquals(BigInteger('277460220803170133683867392965292283112343804101723022926366400443977002252439890142191924145722').exp10(3), '277460220803170133683867392965292283112343804101723022926366400443977002252439890142191924145722000');
assertBigIntegerEquals(BigInteger('277460220803170133683867392965292283112343804101723022926366400443977002252439890142191924145722').exp10(4), '2774602208031701336838673929652922831123438041017230229263664004439770022524398901421919241457220000');
assertBigIntegerEquals(BigInteger('277460220803170133683867392965292283112343804101723022926366400443977002252439890142191924145722').exp10(5), '27746022080317013368386739296529228311234380410172302292636640044397700225243989014219192414572200000');
assertBigIntegerEquals(BigInteger('277460220803170133683867392965292283112343804101723022926366400443977002252439890142191924145722').exp10(568), '2774602208031701336838673929652922831123438041017230229263664004439770022524398901421919241457220000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('277460220803170133683867392965292283112343804101723022926366400443977002252439890142191924145722').exp10(6), '277460220803170133683867392965292283112343804101723022926366400443977002252439890142191924145722000000');
assertBigIntegerEquals(BigInteger('277460220803170133683867392965292283112343804101723022926366400443977002252439890142191924145722').exp10(7), '2774602208031701336838673929652922831123438041017230229263664004439770022524398901421919241457220000000');
assertBigIntegerEquals(BigInteger('277460220803170133683867392965292283112343804101723022926366400443977002252439890142191924145722').exp10(74), '27746022080317013368386739296529228311234380410172302292636640044397700225243989014219192414572200000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('277460220803170133683867392965292283112343804101723022926366400443977002252439890142191924145722').exp10(8), '27746022080317013368386739296529228311234380410172302292636640044397700225243989014219192414572200000000');
assertBigIntegerEquals(BigInteger('277460220803170133683867392965292283112343804101723022926366400443977002252439890142191924145722').exp10(9), '277460220803170133683867392965292283112343804101723022926366400443977002252439890142191924145722000000000');
assertBigIntegerEquals(BigInteger('281730631083492345939880995488156886227560025405478318560679548823005924860027080130180488567341041504647761475086105739806209157598562028').exp10(-1), '28173063108349234593988099548815688622756002540547831856067954882300592486002708013018048856734104150464776147508610573980620915759856202');
assertBigIntegerEquals(BigInteger('281730631083492345939880995488156886227560025405478318560679548823005924860027080130180488567341041504647761475086105739806209157598562028').exp10(-10), '28173063108349234593988099548815688622756002540547831856067954882300592486002708013018048856734104150464776147508610573980620915');
assertBigIntegerEquals(BigInteger('281730631083492345939880995488156886227560025405478318560679548823005924860027080130180488567341041504647761475086105739806209157598562028').exp10(-11), '2817306310834923459398809954881568862275600254054783185606795488230059248600270801301804885673410415046477614750861057398062091');
assertBigIntegerEquals(BigInteger('281730631083492345939880995488156886227560025405478318560679548823005924860027080130180488567341041504647761475086105739806209157598562028').exp10(-12), '281730631083492345939880995488156886227560025405478318560679548823005924860027080130180488567341041504647761475086105739806209');
assertBigIntegerEquals(BigInteger('281730631083492345939880995488156886227560025405478318560679548823005924860027080130180488567341041504647761475086105739806209157598562028').exp10(-2), '2817306310834923459398809954881568862275600254054783185606795488230059248600270801301804885673410415046477614750861057398062091575985620');
assertBigIntegerEquals(BigInteger('281730631083492345939880995488156886227560025405478318560679548823005924860027080130180488567341041504647761475086105739806209157598562028').exp10(-3), '281730631083492345939880995488156886227560025405478318560679548823005924860027080130180488567341041504647761475086105739806209157598562');
assertBigIntegerEquals(BigInteger('281730631083492345939880995488156886227560025405478318560679548823005924860027080130180488567341041504647761475086105739806209157598562028').exp10(-4), '28173063108349234593988099548815688622756002540547831856067954882300592486002708013018048856734104150464776147508610573980620915759856');
assertBigIntegerEquals(BigInteger('281730631083492345939880995488156886227560025405478318560679548823005924860027080130180488567341041504647761475086105739806209157598562028').exp10(-5), '2817306310834923459398809954881568862275600254054783185606795488230059248600270801301804885673410415046477614750861057398062091575985');
assertBigIntegerEquals(BigInteger('281730631083492345939880995488156886227560025405478318560679548823005924860027080130180488567341041504647761475086105739806209157598562028').exp10(-6), '281730631083492345939880995488156886227560025405478318560679548823005924860027080130180488567341041504647761475086105739806209157598');
assertBigIntegerEquals(BigInteger('281730631083492345939880995488156886227560025405478318560679548823005924860027080130180488567341041504647761475086105739806209157598562028').exp10(-7), '28173063108349234593988099548815688622756002540547831856067954882300592486002708013018048856734104150464776147508610573980620915759');
assertBigIntegerEquals(BigInteger('281730631083492345939880995488156886227560025405478318560679548823005924860027080130180488567341041504647761475086105739806209157598562028').exp10(-8), '2817306310834923459398809954881568862275600254054783185606795488230059248600270801301804885673410415046477614750861057398062091575');
assertBigIntegerEquals(BigInteger('281730631083492345939880995488156886227560025405478318560679548823005924860027080130180488567341041504647761475086105739806209157598562028').exp10(-9), '281730631083492345939880995488156886227560025405478318560679548823005924860027080130180488567341041504647761475086105739806209157');
assertBigIntegerEquals(BigInteger('281730631083492345939880995488156886227560025405478318560679548823005924860027080130180488567341041504647761475086105739806209157598562028').exp10(0), '281730631083492345939880995488156886227560025405478318560679548823005924860027080130180488567341041504647761475086105739806209157598562028');
assertBigIntegerEquals(BigInteger('281730631083492345939880995488156886227560025405478318560679548823005924860027080130180488567341041504647761475086105739806209157598562028').exp10(1), '2817306310834923459398809954881568862275600254054783185606795488230059248600270801301804885673410415046477614750861057398062091575985620280');
assertBigIntegerEquals(BigInteger('281730631083492345939880995488156886227560025405478318560679548823005924860027080130180488567341041504647761475086105739806209157598562028').exp10(10), '2817306310834923459398809954881568862275600254054783185606795488230059248600270801301804885673410415046477614750861057398062091575985620280000000000');
assertBigIntegerEquals(BigInteger('281730631083492345939880995488156886227560025405478318560679548823005924860027080130180488567341041504647761475086105739806209157598562028').exp10(2), '28173063108349234593988099548815688622756002540547831856067954882300592486002708013018048856734104150464776147508610573980620915759856202800');
assertBigIntegerEquals(BigInteger('281730631083492345939880995488156886227560025405478318560679548823005924860027080130180488567341041504647761475086105739806209157598562028').exp10(3), '281730631083492345939880995488156886227560025405478318560679548823005924860027080130180488567341041504647761475086105739806209157598562028000');
assertBigIntegerEquals(BigInteger('281730631083492345939880995488156886227560025405478318560679548823005924860027080130180488567341041504647761475086105739806209157598562028').exp10(4), '2817306310834923459398809954881568862275600254054783185606795488230059248600270801301804885673410415046477614750861057398062091575985620280000');
assertBigIntegerEquals(BigInteger('281730631083492345939880995488156886227560025405478318560679548823005924860027080130180488567341041504647761475086105739806209157598562028').exp10(5), '28173063108349234593988099548815688622756002540547831856067954882300592486002708013018048856734104150464776147508610573980620915759856202800000');
assertBigIntegerEquals(BigInteger('281730631083492345939880995488156886227560025405478318560679548823005924860027080130180488567341041504647761475086105739806209157598562028').exp10(568), '2817306310834923459398809954881568862275600254054783185606795488230059248600270801301804885673410415046477614750861057398062091575985620280000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('281730631083492345939880995488156886227560025405478318560679548823005924860027080130180488567341041504647761475086105739806209157598562028').exp10(6), '281730631083492345939880995488156886227560025405478318560679548823005924860027080130180488567341041504647761475086105739806209157598562028000000');
assertBigIntegerEquals(BigInteger('281730631083492345939880995488156886227560025405478318560679548823005924860027080130180488567341041504647761475086105739806209157598562028').exp10(7), '2817306310834923459398809954881568862275600254054783185606795488230059248600270801301804885673410415046477614750861057398062091575985620280000000');
assertBigIntegerEquals(BigInteger('281730631083492345939880995488156886227560025405478318560679548823005924860027080130180488567341041504647761475086105739806209157598562028').exp10(74), '28173063108349234593988099548815688622756002540547831856067954882300592486002708013018048856734104150464776147508610573980620915759856202800000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('281730631083492345939880995488156886227560025405478318560679548823005924860027080130180488567341041504647761475086105739806209157598562028').exp10(8), '28173063108349234593988099548815688622756002540547831856067954882300592486002708013018048856734104150464776147508610573980620915759856202800000000');
assertBigIntegerEquals(BigInteger('281730631083492345939880995488156886227560025405478318560679548823005924860027080130180488567341041504647761475086105739806209157598562028').exp10(9), '281730631083492345939880995488156886227560025405478318560679548823005924860027080130180488567341041504647761475086105739806209157598562028000000000');
assertBigIntegerEquals(BigInteger('291381770958').exp10(-1), '29138177095');
assertBigIntegerEquals(BigInteger('291381770958').exp10(-10), '29');
assertBigIntegerEquals(BigInteger('291381770958').exp10(-11), '2');
assertBigIntegerEquals(BigInteger('291381770958').exp10(-12), '0');
assertBigIntegerEquals(BigInteger('291381770958').exp10(-2), '2913817709');
assertBigIntegerEquals(BigInteger('291381770958').exp10(-3), '291381770');
assertBigIntegerEquals(BigInteger('291381770958').exp10(-4), '29138177');
assertBigIntegerEquals(BigInteger('291381770958').exp10(-5), '2913817');
assertBigIntegerEquals(BigInteger('291381770958').exp10(-6), '291381');
assertBigIntegerEquals(BigInteger('291381770958').exp10(-7), '29138');
assertBigIntegerEquals(BigInteger('291381770958').exp10(-8), '2913');
assertBigIntegerEquals(BigInteger('291381770958').exp10(-9), '291');
assertBigIntegerEquals(BigInteger('291381770958').exp10(0), '291381770958');
assertBigIntegerEquals(BigInteger('291381770958').exp10(1), '2913817709580');
assertBigIntegerEquals(BigInteger('291381770958').exp10(10), '2913817709580000000000');
assertBigIntegerEquals(BigInteger('291381770958').exp10(2), '29138177095800');
assertBigIntegerEquals(BigInteger('291381770958').exp10(3), '291381770958000');
assertBigIntegerEquals(BigInteger('291381770958').exp10(4), '2913817709580000');
assertBigIntegerEquals(BigInteger('291381770958').exp10(5), '29138177095800000');
assertBigIntegerEquals(BigInteger('291381770958').exp10(568), '2913817709580000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('291381770958').exp10(6), '291381770958000000');
assertBigIntegerEquals(BigInteger('291381770958').exp10(7), '2913817709580000000');
assertBigIntegerEquals(BigInteger('291381770958').exp10(74), '29138177095800000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('291381770958').exp10(8), '29138177095800000000');
assertBigIntegerEquals(BigInteger('291381770958').exp10(9), '291381770958000000000');
assertBigIntegerEquals(BigInteger('29345943771049638448341763000882111422888869776329135051738765553372901428808277728681262509298083850142596121922395107683607562149684613672741812462867438468129481833454428891').exp10(-1), '2934594377104963844834176300088211142288886977632913505173876555337290142880827772868126250929808385014259612192239510768360756214968461367274181246286743846812948183345442889');
assertBigIntegerEquals(BigInteger('29345943771049638448341763000882111422888869776329135051738765553372901428808277728681262509298083850142596121922395107683607562149684613672741812462867438468129481833454428891').exp10(-10), '2934594377104963844834176300088211142288886977632913505173876555337290142880827772868126250929808385014259612192239510768360756214968461367274181246286743846812948183');
assertBigIntegerEquals(BigInteger('29345943771049638448341763000882111422888869776329135051738765553372901428808277728681262509298083850142596121922395107683607562149684613672741812462867438468129481833454428891').exp10(-11), '293459437710496384483417630008821114228888697763291350517387655533729014288082777286812625092980838501425961219223951076836075621496846136727418124628674384681294818');
assertBigIntegerEquals(BigInteger('29345943771049638448341763000882111422888869776329135051738765553372901428808277728681262509298083850142596121922395107683607562149684613672741812462867438468129481833454428891').exp10(-12), '29345943771049638448341763000882111422888869776329135051738765553372901428808277728681262509298083850142596121922395107683607562149684613672741812462867438468129481');
assertBigIntegerEquals(BigInteger('29345943771049638448341763000882111422888869776329135051738765553372901428808277728681262509298083850142596121922395107683607562149684613672741812462867438468129481833454428891').exp10(-2), '293459437710496384483417630008821114228888697763291350517387655533729014288082777286812625092980838501425961219223951076836075621496846136727418124628674384681294818334544288');
assertBigIntegerEquals(BigInteger('29345943771049638448341763000882111422888869776329135051738765553372901428808277728681262509298083850142596121922395107683607562149684613672741812462867438468129481833454428891').exp10(-3), '29345943771049638448341763000882111422888869776329135051738765553372901428808277728681262509298083850142596121922395107683607562149684613672741812462867438468129481833454428');
assertBigIntegerEquals(BigInteger('29345943771049638448341763000882111422888869776329135051738765553372901428808277728681262509298083850142596121922395107683607562149684613672741812462867438468129481833454428891').exp10(-4), '2934594377104963844834176300088211142288886977632913505173876555337290142880827772868126250929808385014259612192239510768360756214968461367274181246286743846812948183345442');
assertBigIntegerEquals(BigInteger('29345943771049638448341763000882111422888869776329135051738765553372901428808277728681262509298083850142596121922395107683607562149684613672741812462867438468129481833454428891').exp10(-5), '293459437710496384483417630008821114228888697763291350517387655533729014288082777286812625092980838501425961219223951076836075621496846136727418124628674384681294818334544');
assertBigIntegerEquals(BigInteger('29345943771049638448341763000882111422888869776329135051738765553372901428808277728681262509298083850142596121922395107683607562149684613672741812462867438468129481833454428891').exp10(-6), '29345943771049638448341763000882111422888869776329135051738765553372901428808277728681262509298083850142596121922395107683607562149684613672741812462867438468129481833454');
assertBigIntegerEquals(BigInteger('29345943771049638448341763000882111422888869776329135051738765553372901428808277728681262509298083850142596121922395107683607562149684613672741812462867438468129481833454428891').exp10(-7), '2934594377104963844834176300088211142288886977632913505173876555337290142880827772868126250929808385014259612192239510768360756214968461367274181246286743846812948183345');
assertBigIntegerEquals(BigInteger('29345943771049638448341763000882111422888869776329135051738765553372901428808277728681262509298083850142596121922395107683607562149684613672741812462867438468129481833454428891').exp10(-8), '293459437710496384483417630008821114228888697763291350517387655533729014288082777286812625092980838501425961219223951076836075621496846136727418124628674384681294818334');
assertBigIntegerEquals(BigInteger('29345943771049638448341763000882111422888869776329135051738765553372901428808277728681262509298083850142596121922395107683607562149684613672741812462867438468129481833454428891').exp10(-9), '29345943771049638448341763000882111422888869776329135051738765553372901428808277728681262509298083850142596121922395107683607562149684613672741812462867438468129481833');
assertBigIntegerEquals(BigInteger('29345943771049638448341763000882111422888869776329135051738765553372901428808277728681262509298083850142596121922395107683607562149684613672741812462867438468129481833454428891').exp10(0), '29345943771049638448341763000882111422888869776329135051738765553372901428808277728681262509298083850142596121922395107683607562149684613672741812462867438468129481833454428891');
assertBigIntegerEquals(BigInteger('29345943771049638448341763000882111422888869776329135051738765553372901428808277728681262509298083850142596121922395107683607562149684613672741812462867438468129481833454428891').exp10(1), '293459437710496384483417630008821114228888697763291350517387655533729014288082777286812625092980838501425961219223951076836075621496846136727418124628674384681294818334544288910');
assertBigIntegerEquals(BigInteger('29345943771049638448341763000882111422888869776329135051738765553372901428808277728681262509298083850142596121922395107683607562149684613672741812462867438468129481833454428891').exp10(10), '293459437710496384483417630008821114228888697763291350517387655533729014288082777286812625092980838501425961219223951076836075621496846136727418124628674384681294818334544288910000000000');
assertBigIntegerEquals(BigInteger('29345943771049638448341763000882111422888869776329135051738765553372901428808277728681262509298083850142596121922395107683607562149684613672741812462867438468129481833454428891').exp10(2), '2934594377104963844834176300088211142288886977632913505173876555337290142880827772868126250929808385014259612192239510768360756214968461367274181246286743846812948183345442889100');
assertBigIntegerEquals(BigInteger('29345943771049638448341763000882111422888869776329135051738765553372901428808277728681262509298083850142596121922395107683607562149684613672741812462867438468129481833454428891').exp10(3), '29345943771049638448341763000882111422888869776329135051738765553372901428808277728681262509298083850142596121922395107683607562149684613672741812462867438468129481833454428891000');
assertBigIntegerEquals(BigInteger('29345943771049638448341763000882111422888869776329135051738765553372901428808277728681262509298083850142596121922395107683607562149684613672741812462867438468129481833454428891').exp10(4), '293459437710496384483417630008821114228888697763291350517387655533729014288082777286812625092980838501425961219223951076836075621496846136727418124628674384681294818334544288910000');
assertBigIntegerEquals(BigInteger('29345943771049638448341763000882111422888869776329135051738765553372901428808277728681262509298083850142596121922395107683607562149684613672741812462867438468129481833454428891').exp10(5), '2934594377104963844834176300088211142288886977632913505173876555337290142880827772868126250929808385014259612192239510768360756214968461367274181246286743846812948183345442889100000');
assertBigIntegerEquals(BigInteger('29345943771049638448341763000882111422888869776329135051738765553372901428808277728681262509298083850142596121922395107683607562149684613672741812462867438468129481833454428891').exp10(568), '293459437710496384483417630008821114228888697763291350517387655533729014288082777286812625092980838501425961219223951076836075621496846136727418124628674384681294818334544288910000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('29345943771049638448341763000882111422888869776329135051738765553372901428808277728681262509298083850142596121922395107683607562149684613672741812462867438468129481833454428891').exp10(6), '29345943771049638448341763000882111422888869776329135051738765553372901428808277728681262509298083850142596121922395107683607562149684613672741812462867438468129481833454428891000000');
assertBigIntegerEquals(BigInteger('29345943771049638448341763000882111422888869776329135051738765553372901428808277728681262509298083850142596121922395107683607562149684613672741812462867438468129481833454428891').exp10(7), '293459437710496384483417630008821114228888697763291350517387655533729014288082777286812625092980838501425961219223951076836075621496846136727418124628674384681294818334544288910000000');
assertBigIntegerEquals(BigInteger('29345943771049638448341763000882111422888869776329135051738765553372901428808277728681262509298083850142596121922395107683607562149684613672741812462867438468129481833454428891').exp10(74), '2934594377104963844834176300088211142288886977632913505173876555337290142880827772868126250929808385014259612192239510768360756214968461367274181246286743846812948183345442889100000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('29345943771049638448341763000882111422888869776329135051738765553372901428808277728681262509298083850142596121922395107683607562149684613672741812462867438468129481833454428891').exp10(8), '2934594377104963844834176300088211142288886977632913505173876555337290142880827772868126250929808385014259612192239510768360756214968461367274181246286743846812948183345442889100000000');
assertBigIntegerEquals(BigInteger('29345943771049638448341763000882111422888869776329135051738765553372901428808277728681262509298083850142596121922395107683607562149684613672741812462867438468129481833454428891').exp10(9), '29345943771049638448341763000882111422888869776329135051738765553372901428808277728681262509298083850142596121922395107683607562149684613672741812462867438468129481833454428891000000000');
assertBigIntegerEquals(BigInteger('3').exp10(-1), '0');
assertBigIntegerEquals(BigInteger('3').exp10(-10), '0');
assertBigIntegerEquals(BigInteger('3').exp10(-11), '0');
assertBigIntegerEquals(BigInteger('3').exp10(-12), '0');
assertBigIntegerEquals(BigInteger('3').exp10(-2), '0');
assertBigIntegerEquals(BigInteger('3').exp10(-3), '0');
assertBigIntegerEquals(BigInteger('3').exp10(-4), '0');
assertBigIntegerEquals(BigInteger('3').exp10(-5), '0');
assertBigIntegerEquals(BigInteger('3').exp10(-6), '0');
assertBigIntegerEquals(BigInteger('3').exp10(-7), '0');
assertBigIntegerEquals(BigInteger('3').exp10(-8), '0');
assertBigIntegerEquals(BigInteger('3').exp10(-9), '0');
assertBigIntegerEquals(BigInteger('3').exp10(0), '3');
assertBigIntegerEquals(BigInteger('3').exp10(1), '30');
assertBigIntegerEquals(BigInteger('3').exp10(10), '30000000000');
assertBigIntegerEquals(BigInteger('3').exp10(2), '300');
assertBigIntegerEquals(BigInteger('3').exp10(3), '3000');
assertBigIntegerEquals(BigInteger('3').exp10(4), '30000');
assertBigIntegerEquals(BigInteger('3').exp10(5), '300000');
assertBigIntegerEquals(BigInteger('3').exp10(568), '30000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('3').exp10(6), '3000000');
assertBigIntegerEquals(BigInteger('3').exp10(7), '30000000');
assertBigIntegerEquals(BigInteger('3').exp10(74), '300000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('3').exp10(8), '300000000');
assertBigIntegerEquals(BigInteger('3').exp10(9), '3000000000');
assertBigIntegerEquals(BigInteger('30514941987010').exp10(-1), '3051494198701');
assertBigIntegerEquals(BigInteger('30514941987010').exp10(-10), '3051');
assertBigIntegerEquals(BigInteger('30514941987010').exp10(-11), '305');
assertBigIntegerEquals(BigInteger('30514941987010').exp10(-12), '30');
assertBigIntegerEquals(BigInteger('30514941987010').exp10(-2), '305149419870');
assertBigIntegerEquals(BigInteger('30514941987010').exp10(-3), '30514941987');
assertBigIntegerEquals(BigInteger('30514941987010').exp10(-4), '3051494198');
assertBigIntegerEquals(BigInteger('30514941987010').exp10(-5), '305149419');
assertBigIntegerEquals(BigInteger('30514941987010').exp10(-6), '30514941');
assertBigIntegerEquals(BigInteger('30514941987010').exp10(-7), '3051494');
assertBigIntegerEquals(BigInteger('30514941987010').exp10(-8), '305149');
assertBigIntegerEquals(BigInteger('30514941987010').exp10(-9), '30514');
assertBigIntegerEquals(BigInteger('30514941987010').exp10(0), '30514941987010');
assertBigIntegerEquals(BigInteger('30514941987010').exp10(1), '305149419870100');
assertBigIntegerEquals(BigInteger('30514941987010').exp10(10), '305149419870100000000000');
assertBigIntegerEquals(BigInteger('30514941987010').exp10(2), '3051494198701000');
assertBigIntegerEquals(BigInteger('30514941987010').exp10(3), '30514941987010000');
assertBigIntegerEquals(BigInteger('30514941987010').exp10(4), '305149419870100000');
assertBigIntegerEquals(BigInteger('30514941987010').exp10(5), '3051494198701000000');
assertBigIntegerEquals(BigInteger('30514941987010').exp10(568), '305149419870100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('30514941987010').exp10(6), '30514941987010000000');
assertBigIntegerEquals(BigInteger('30514941987010').exp10(7), '305149419870100000000');
assertBigIntegerEquals(BigInteger('30514941987010').exp10(74), '3051494198701000000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('30514941987010').exp10(8), '3051494198701000000000');
assertBigIntegerEquals(BigInteger('30514941987010').exp10(9), '30514941987010000000000');
assertBigIntegerEquals(BigInteger('331582054172310013635181905646204661989171235666401937872152206243737362946').exp10(-1), '33158205417231001363518190564620466198917123566640193787215220624373736294');
assertBigIntegerEquals(BigInteger('331582054172310013635181905646204661989171235666401937872152206243737362946').exp10(-10), '33158205417231001363518190564620466198917123566640193787215220624');
assertBigIntegerEquals(BigInteger('331582054172310013635181905646204661989171235666401937872152206243737362946').exp10(-11), '3315820541723100136351819056462046619891712356664019378721522062');
assertBigIntegerEquals(BigInteger('331582054172310013635181905646204661989171235666401937872152206243737362946').exp10(-12), '331582054172310013635181905646204661989171235666401937872152206');
assertBigIntegerEquals(BigInteger('331582054172310013635181905646204661989171235666401937872152206243737362946').exp10(-2), '3315820541723100136351819056462046619891712356664019378721522062437373629');
assertBigIntegerEquals(BigInteger('331582054172310013635181905646204661989171235666401937872152206243737362946').exp10(-3), '331582054172310013635181905646204661989171235666401937872152206243737362');
assertBigIntegerEquals(BigInteger('331582054172310013635181905646204661989171235666401937872152206243737362946').exp10(-4), '33158205417231001363518190564620466198917123566640193787215220624373736');
assertBigIntegerEquals(BigInteger('331582054172310013635181905646204661989171235666401937872152206243737362946').exp10(-5), '3315820541723100136351819056462046619891712356664019378721522062437373');
assertBigIntegerEquals(BigInteger('331582054172310013635181905646204661989171235666401937872152206243737362946').exp10(-6), '331582054172310013635181905646204661989171235666401937872152206243737');
assertBigIntegerEquals(BigInteger('331582054172310013635181905646204661989171235666401937872152206243737362946').exp10(-7), '33158205417231001363518190564620466198917123566640193787215220624373');
assertBigIntegerEquals(BigInteger('331582054172310013635181905646204661989171235666401937872152206243737362946').exp10(-8), '3315820541723100136351819056462046619891712356664019378721522062437');
assertBigIntegerEquals(BigInteger('331582054172310013635181905646204661989171235666401937872152206243737362946').exp10(-9), '331582054172310013635181905646204661989171235666401937872152206243');
assertBigIntegerEquals(BigInteger('331582054172310013635181905646204661989171235666401937872152206243737362946').exp10(0), '331582054172310013635181905646204661989171235666401937872152206243737362946');
assertBigIntegerEquals(BigInteger('331582054172310013635181905646204661989171235666401937872152206243737362946').exp10(1), '3315820541723100136351819056462046619891712356664019378721522062437373629460');
assertBigIntegerEquals(BigInteger('331582054172310013635181905646204661989171235666401937872152206243737362946').exp10(10), '3315820541723100136351819056462046619891712356664019378721522062437373629460000000000');
assertBigIntegerEquals(BigInteger('331582054172310013635181905646204661989171235666401937872152206243737362946').exp10(2), '33158205417231001363518190564620466198917123566640193787215220624373736294600');
assertBigIntegerEquals(BigInteger('331582054172310013635181905646204661989171235666401937872152206243737362946').exp10(3), '331582054172310013635181905646204661989171235666401937872152206243737362946000');
assertBigIntegerEquals(BigInteger('331582054172310013635181905646204661989171235666401937872152206243737362946').exp10(4), '3315820541723100136351819056462046619891712356664019378721522062437373629460000');
assertBigIntegerEquals(BigInteger('331582054172310013635181905646204661989171235666401937872152206243737362946').exp10(5), '33158205417231001363518190564620466198917123566640193787215220624373736294600000');
assertBigIntegerEquals(BigInteger('331582054172310013635181905646204661989171235666401937872152206243737362946').exp10(568), '3315820541723100136351819056462046619891712356664019378721522062437373629460000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('331582054172310013635181905646204661989171235666401937872152206243737362946').exp10(6), '331582054172310013635181905646204661989171235666401937872152206243737362946000000');
assertBigIntegerEquals(BigInteger('331582054172310013635181905646204661989171235666401937872152206243737362946').exp10(7), '3315820541723100136351819056462046619891712356664019378721522062437373629460000000');
assertBigIntegerEquals(BigInteger('331582054172310013635181905646204661989171235666401937872152206243737362946').exp10(74), '33158205417231001363518190564620466198917123566640193787215220624373736294600000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('331582054172310013635181905646204661989171235666401937872152206243737362946').exp10(8), '33158205417231001363518190564620466198917123566640193787215220624373736294600000000');
assertBigIntegerEquals(BigInteger('331582054172310013635181905646204661989171235666401937872152206243737362946').exp10(9), '331582054172310013635181905646204661989171235666401937872152206243737362946000000000');
assertBigIntegerEquals(BigInteger('37002422595522161032086725924934617976428107255803333508613776941553061663685318873827666814514069881821456625761423079496362499025456096895').exp10(-1), '3700242259552216103208672592493461797642810725580333350861377694155306166368531887382766681451406988182145662576142307949636249902545609689');
assertBigIntegerEquals(BigInteger('37002422595522161032086725924934617976428107255803333508613776941553061663685318873827666814514069881821456625761423079496362499025456096895').exp10(-10), '3700242259552216103208672592493461797642810725580333350861377694155306166368531887382766681451406988182145662576142307949636249902');
assertBigIntegerEquals(BigInteger('37002422595522161032086725924934617976428107255803333508613776941553061663685318873827666814514069881821456625761423079496362499025456096895').exp10(-11), '370024225955221610320867259249346179764281072558033335086137769415530616636853188738276668145140698818214566257614230794963624990');
assertBigIntegerEquals(BigInteger('37002422595522161032086725924934617976428107255803333508613776941553061663685318873827666814514069881821456625761423079496362499025456096895').exp10(-12), '37002422595522161032086725924934617976428107255803333508613776941553061663685318873827666814514069881821456625761423079496362499');
assertBigIntegerEquals(BigInteger('37002422595522161032086725924934617976428107255803333508613776941553061663685318873827666814514069881821456625761423079496362499025456096895').exp10(-2), '370024225955221610320867259249346179764281072558033335086137769415530616636853188738276668145140698818214566257614230794963624990254560968');
assertBigIntegerEquals(BigInteger('37002422595522161032086725924934617976428107255803333508613776941553061663685318873827666814514069881821456625761423079496362499025456096895').exp10(-3), '37002422595522161032086725924934617976428107255803333508613776941553061663685318873827666814514069881821456625761423079496362499025456096');
assertBigIntegerEquals(BigInteger('37002422595522161032086725924934617976428107255803333508613776941553061663685318873827666814514069881821456625761423079496362499025456096895').exp10(-4), '3700242259552216103208672592493461797642810725580333350861377694155306166368531887382766681451406988182145662576142307949636249902545609');
assertBigIntegerEquals(BigInteger('37002422595522161032086725924934617976428107255803333508613776941553061663685318873827666814514069881821456625761423079496362499025456096895').exp10(-5), '370024225955221610320867259249346179764281072558033335086137769415530616636853188738276668145140698818214566257614230794963624990254560');
assertBigIntegerEquals(BigInteger('37002422595522161032086725924934617976428107255803333508613776941553061663685318873827666814514069881821456625761423079496362499025456096895').exp10(-6), '37002422595522161032086725924934617976428107255803333508613776941553061663685318873827666814514069881821456625761423079496362499025456');
assertBigIntegerEquals(BigInteger('37002422595522161032086725924934617976428107255803333508613776941553061663685318873827666814514069881821456625761423079496362499025456096895').exp10(-7), '3700242259552216103208672592493461797642810725580333350861377694155306166368531887382766681451406988182145662576142307949636249902545');
assertBigIntegerEquals(BigInteger('37002422595522161032086725924934617976428107255803333508613776941553061663685318873827666814514069881821456625761423079496362499025456096895').exp10(-8), '370024225955221610320867259249346179764281072558033335086137769415530616636853188738276668145140698818214566257614230794963624990254');
assertBigIntegerEquals(BigInteger('37002422595522161032086725924934617976428107255803333508613776941553061663685318873827666814514069881821456625761423079496362499025456096895').exp10(-9), '37002422595522161032086725924934617976428107255803333508613776941553061663685318873827666814514069881821456625761423079496362499025');
assertBigIntegerEquals(BigInteger('37002422595522161032086725924934617976428107255803333508613776941553061663685318873827666814514069881821456625761423079496362499025456096895').exp10(0), '37002422595522161032086725924934617976428107255803333508613776941553061663685318873827666814514069881821456625761423079496362499025456096895');
assertBigIntegerEquals(BigInteger('37002422595522161032086725924934617976428107255803333508613776941553061663685318873827666814514069881821456625761423079496362499025456096895').exp10(1), '370024225955221610320867259249346179764281072558033335086137769415530616636853188738276668145140698818214566257614230794963624990254560968950');
assertBigIntegerEquals(BigInteger('37002422595522161032086725924934617976428107255803333508613776941553061663685318873827666814514069881821456625761423079496362499025456096895').exp10(10), '370024225955221610320867259249346179764281072558033335086137769415530616636853188738276668145140698818214566257614230794963624990254560968950000000000');
assertBigIntegerEquals(BigInteger('37002422595522161032086725924934617976428107255803333508613776941553061663685318873827666814514069881821456625761423079496362499025456096895').exp10(2), '3700242259552216103208672592493461797642810725580333350861377694155306166368531887382766681451406988182145662576142307949636249902545609689500');
assertBigIntegerEquals(BigInteger('37002422595522161032086725924934617976428107255803333508613776941553061663685318873827666814514069881821456625761423079496362499025456096895').exp10(3), '37002422595522161032086725924934617976428107255803333508613776941553061663685318873827666814514069881821456625761423079496362499025456096895000');
assertBigIntegerEquals(BigInteger('37002422595522161032086725924934617976428107255803333508613776941553061663685318873827666814514069881821456625761423079496362499025456096895').exp10(4), '370024225955221610320867259249346179764281072558033335086137769415530616636853188738276668145140698818214566257614230794963624990254560968950000');
assertBigIntegerEquals(BigInteger('37002422595522161032086725924934617976428107255803333508613776941553061663685318873827666814514069881821456625761423079496362499025456096895').exp10(5), '3700242259552216103208672592493461797642810725580333350861377694155306166368531887382766681451406988182145662576142307949636249902545609689500000');
assertBigIntegerEquals(BigInteger('37002422595522161032086725924934617976428107255803333508613776941553061663685318873827666814514069881821456625761423079496362499025456096895').exp10(568), '370024225955221610320867259249346179764281072558033335086137769415530616636853188738276668145140698818214566257614230794963624990254560968950000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('37002422595522161032086725924934617976428107255803333508613776941553061663685318873827666814514069881821456625761423079496362499025456096895').exp10(6), '37002422595522161032086725924934617976428107255803333508613776941553061663685318873827666814514069881821456625761423079496362499025456096895000000');
assertBigIntegerEquals(BigInteger('37002422595522161032086725924934617976428107255803333508613776941553061663685318873827666814514069881821456625761423079496362499025456096895').exp10(7), '370024225955221610320867259249346179764281072558033335086137769415530616636853188738276668145140698818214566257614230794963624990254560968950000000');
assertBigIntegerEquals(BigInteger('37002422595522161032086725924934617976428107255803333508613776941553061663685318873827666814514069881821456625761423079496362499025456096895').exp10(74), '3700242259552216103208672592493461797642810725580333350861377694155306166368531887382766681451406988182145662576142307949636249902545609689500000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('37002422595522161032086725924934617976428107255803333508613776941553061663685318873827666814514069881821456625761423079496362499025456096895').exp10(8), '3700242259552216103208672592493461797642810725580333350861377694155306166368531887382766681451406988182145662576142307949636249902545609689500000000');
assertBigIntegerEquals(BigInteger('37002422595522161032086725924934617976428107255803333508613776941553061663685318873827666814514069881821456625761423079496362499025456096895').exp10(9), '37002422595522161032086725924934617976428107255803333508613776941553061663685318873827666814514069881821456625761423079496362499025456096895000000000');
assertBigIntegerEquals(BigInteger('3878182266978880305749543422914777569229636428599764504429913656112581921875376162093486587388727').exp10(-1), '387818226697888030574954342291477756922963642859976450442991365611258192187537616209348658738872');
assertBigIntegerEquals(BigInteger('3878182266978880305749543422914777569229636428599764504429913656112581921875376162093486587388727').exp10(-10), '387818226697888030574954342291477756922963642859976450442991365611258192187537616209348');
assertBigIntegerEquals(BigInteger('3878182266978880305749543422914777569229636428599764504429913656112581921875376162093486587388727').exp10(-11), '38781822669788803057495434229147775692296364285997645044299136561125819218753761620934');
assertBigIntegerEquals(BigInteger('3878182266978880305749543422914777569229636428599764504429913656112581921875376162093486587388727').exp10(-12), '3878182266978880305749543422914777569229636428599764504429913656112581921875376162093');
assertBigIntegerEquals(BigInteger('3878182266978880305749543422914777569229636428599764504429913656112581921875376162093486587388727').exp10(-2), '38781822669788803057495434229147775692296364285997645044299136561125819218753761620934865873887');
assertBigIntegerEquals(BigInteger('3878182266978880305749543422914777569229636428599764504429913656112581921875376162093486587388727').exp10(-3), '3878182266978880305749543422914777569229636428599764504429913656112581921875376162093486587388');
assertBigIntegerEquals(BigInteger('3878182266978880305749543422914777569229636428599764504429913656112581921875376162093486587388727').exp10(-4), '387818226697888030574954342291477756922963642859976450442991365611258192187537616209348658738');
assertBigIntegerEquals(BigInteger('3878182266978880305749543422914777569229636428599764504429913656112581921875376162093486587388727').exp10(-5), '38781822669788803057495434229147775692296364285997645044299136561125819218753761620934865873');
assertBigIntegerEquals(BigInteger('3878182266978880305749543422914777569229636428599764504429913656112581921875376162093486587388727').exp10(-6), '3878182266978880305749543422914777569229636428599764504429913656112581921875376162093486587');
assertBigIntegerEquals(BigInteger('3878182266978880305749543422914777569229636428599764504429913656112581921875376162093486587388727').exp10(-7), '387818226697888030574954342291477756922963642859976450442991365611258192187537616209348658');
assertBigIntegerEquals(BigInteger('3878182266978880305749543422914777569229636428599764504429913656112581921875376162093486587388727').exp10(-8), '38781822669788803057495434229147775692296364285997645044299136561125819218753761620934865');
assertBigIntegerEquals(BigInteger('3878182266978880305749543422914777569229636428599764504429913656112581921875376162093486587388727').exp10(-9), '3878182266978880305749543422914777569229636428599764504429913656112581921875376162093486');
assertBigIntegerEquals(BigInteger('3878182266978880305749543422914777569229636428599764504429913656112581921875376162093486587388727').exp10(0), '3878182266978880305749543422914777569229636428599764504429913656112581921875376162093486587388727');
assertBigIntegerEquals(BigInteger('3878182266978880305749543422914777569229636428599764504429913656112581921875376162093486587388727').exp10(1), '38781822669788803057495434229147775692296364285997645044299136561125819218753761620934865873887270');
assertBigIntegerEquals(BigInteger('3878182266978880305749543422914777569229636428599764504429913656112581921875376162093486587388727').exp10(10), '38781822669788803057495434229147775692296364285997645044299136561125819218753761620934865873887270000000000');
assertBigIntegerEquals(BigInteger('3878182266978880305749543422914777569229636428599764504429913656112581921875376162093486587388727').exp10(2), '387818226697888030574954342291477756922963642859976450442991365611258192187537616209348658738872700');
assertBigIntegerEquals(BigInteger('3878182266978880305749543422914777569229636428599764504429913656112581921875376162093486587388727').exp10(3), '3878182266978880305749543422914777569229636428599764504429913656112581921875376162093486587388727000');
assertBigIntegerEquals(BigInteger('3878182266978880305749543422914777569229636428599764504429913656112581921875376162093486587388727').exp10(4), '38781822669788803057495434229147775692296364285997645044299136561125819218753761620934865873887270000');
assertBigIntegerEquals(BigInteger('3878182266978880305749543422914777569229636428599764504429913656112581921875376162093486587388727').exp10(5), '387818226697888030574954342291477756922963642859976450442991365611258192187537616209348658738872700000');
assertBigIntegerEquals(BigInteger('3878182266978880305749543422914777569229636428599764504429913656112581921875376162093486587388727').exp10(568), '38781822669788803057495434229147775692296364285997645044299136561125819218753761620934865873887270000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('3878182266978880305749543422914777569229636428599764504429913656112581921875376162093486587388727').exp10(6), '3878182266978880305749543422914777569229636428599764504429913656112581921875376162093486587388727000000');
assertBigIntegerEquals(BigInteger('3878182266978880305749543422914777569229636428599764504429913656112581921875376162093486587388727').exp10(7), '38781822669788803057495434229147775692296364285997645044299136561125819218753761620934865873887270000000');
assertBigIntegerEquals(BigInteger('3878182266978880305749543422914777569229636428599764504429913656112581921875376162093486587388727').exp10(74), '387818226697888030574954342291477756922963642859976450442991365611258192187537616209348658738872700000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('3878182266978880305749543422914777569229636428599764504429913656112581921875376162093486587388727').exp10(8), '387818226697888030574954342291477756922963642859976450442991365611258192187537616209348658738872700000000');
assertBigIntegerEquals(BigInteger('3878182266978880305749543422914777569229636428599764504429913656112581921875376162093486587388727').exp10(9), '3878182266978880305749543422914777569229636428599764504429913656112581921875376162093486587388727000000000');
assertBigIntegerEquals(BigInteger('398515777680123136680192434809946769445426177827640125940511670935').exp10(-1), '39851577768012313668019243480994676944542617782764012594051167093');
assertBigIntegerEquals(BigInteger('398515777680123136680192434809946769445426177827640125940511670935').exp10(-10), '39851577768012313668019243480994676944542617782764012594');
assertBigIntegerEquals(BigInteger('398515777680123136680192434809946769445426177827640125940511670935').exp10(-11), '3985157776801231366801924348099467694454261778276401259');
assertBigIntegerEquals(BigInteger('398515777680123136680192434809946769445426177827640125940511670935').exp10(-12), '398515777680123136680192434809946769445426177827640125');
assertBigIntegerEquals(BigInteger('398515777680123136680192434809946769445426177827640125940511670935').exp10(-2), '3985157776801231366801924348099467694454261778276401259405116709');
assertBigIntegerEquals(BigInteger('398515777680123136680192434809946769445426177827640125940511670935').exp10(-3), '398515777680123136680192434809946769445426177827640125940511670');
assertBigIntegerEquals(BigInteger('398515777680123136680192434809946769445426177827640125940511670935').exp10(-4), '39851577768012313668019243480994676944542617782764012594051167');
assertBigIntegerEquals(BigInteger('398515777680123136680192434809946769445426177827640125940511670935').exp10(-5), '3985157776801231366801924348099467694454261778276401259405116');
assertBigIntegerEquals(BigInteger('398515777680123136680192434809946769445426177827640125940511670935').exp10(-6), '398515777680123136680192434809946769445426177827640125940511');
assertBigIntegerEquals(BigInteger('398515777680123136680192434809946769445426177827640125940511670935').exp10(-7), '39851577768012313668019243480994676944542617782764012594051');
assertBigIntegerEquals(BigInteger('398515777680123136680192434809946769445426177827640125940511670935').exp10(-8), '3985157776801231366801924348099467694454261778276401259405');
assertBigIntegerEquals(BigInteger('398515777680123136680192434809946769445426177827640125940511670935').exp10(-9), '398515777680123136680192434809946769445426177827640125940');
assertBigIntegerEquals(BigInteger('398515777680123136680192434809946769445426177827640125940511670935').exp10(0), '398515777680123136680192434809946769445426177827640125940511670935');
assertBigIntegerEquals(BigInteger('398515777680123136680192434809946769445426177827640125940511670935').exp10(1), '3985157776801231366801924348099467694454261778276401259405116709350');
assertBigIntegerEquals(BigInteger('398515777680123136680192434809946769445426177827640125940511670935').exp10(10), '3985157776801231366801924348099467694454261778276401259405116709350000000000');
assertBigIntegerEquals(BigInteger('398515777680123136680192434809946769445426177827640125940511670935').exp10(2), '39851577768012313668019243480994676944542617782764012594051167093500');
assertBigIntegerEquals(BigInteger('398515777680123136680192434809946769445426177827640125940511670935').exp10(3), '398515777680123136680192434809946769445426177827640125940511670935000');
assertBigIntegerEquals(BigInteger('398515777680123136680192434809946769445426177827640125940511670935').exp10(4), '3985157776801231366801924348099467694454261778276401259405116709350000');
assertBigIntegerEquals(BigInteger('398515777680123136680192434809946769445426177827640125940511670935').exp10(5), '39851577768012313668019243480994676944542617782764012594051167093500000');
assertBigIntegerEquals(BigInteger('398515777680123136680192434809946769445426177827640125940511670935').exp10(568), '3985157776801231366801924348099467694454261778276401259405116709350000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('398515777680123136680192434809946769445426177827640125940511670935').exp10(6), '398515777680123136680192434809946769445426177827640125940511670935000000');
assertBigIntegerEquals(BigInteger('398515777680123136680192434809946769445426177827640125940511670935').exp10(7), '3985157776801231366801924348099467694454261778276401259405116709350000000');
assertBigIntegerEquals(BigInteger('398515777680123136680192434809946769445426177827640125940511670935').exp10(74), '39851577768012313668019243480994676944542617782764012594051167093500000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('398515777680123136680192434809946769445426177827640125940511670935').exp10(8), '39851577768012313668019243480994676944542617782764012594051167093500000000');
assertBigIntegerEquals(BigInteger('398515777680123136680192434809946769445426177827640125940511670935').exp10(9), '398515777680123136680192434809946769445426177827640125940511670935000000000');
assertBigIntegerEquals(BigInteger('4').exp10(-1), '0');
assertBigIntegerEquals(BigInteger('4').exp10(-10), '0');
assertBigIntegerEquals(BigInteger('4').exp10(-11), '0');
assertBigIntegerEquals(BigInteger('4').exp10(-12), '0');
assertBigIntegerEquals(BigInteger('4').exp10(-2), '0');
assertBigIntegerEquals(BigInteger('4').exp10(-3), '0');
assertBigIntegerEquals(BigInteger('4').exp10(-4), '0');
assertBigIntegerEquals(BigInteger('4').exp10(-5), '0');
assertBigIntegerEquals(BigInteger('4').exp10(-6), '0');
assertBigIntegerEquals(BigInteger('4').exp10(-7), '0');
assertBigIntegerEquals(BigInteger('4').exp10(-8), '0');
assertBigIntegerEquals(BigInteger('4').exp10(-9), '0');
assertBigIntegerEquals(BigInteger('4').exp10(0), '4');
assertBigIntegerEquals(BigInteger('4').exp10(1), '40');
assertBigIntegerEquals(BigInteger('4').exp10(10), '40000000000');
assertBigIntegerEquals(BigInteger('4').exp10(2), '400');
assertBigIntegerEquals(BigInteger('4').exp10(3), '4000');
assertBigIntegerEquals(BigInteger('4').exp10(4), '40000');
assertBigIntegerEquals(BigInteger('4').exp10(5), '400000');
assertBigIntegerEquals(BigInteger('4').exp10(568), '40000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('4').exp10(6), '4000000');
assertBigIntegerEquals(BigInteger('4').exp10(7), '40000000');
assertBigIntegerEquals(BigInteger('4').exp10(74), '400000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('4').exp10(8), '400000000');
assertBigIntegerEquals(BigInteger('4').exp10(9), '4000000000');
assertBigIntegerEquals(BigInteger('4227224306971170988716827185870519579782234150611831494926052243428192243517312221765490067054576722892784347440519').exp10(-1), '422722430697117098871682718587051957978223415061183149492605224342819224351731222176549006705457672289278434744051');
assertBigIntegerEquals(BigInteger('4227224306971170988716827185870519579782234150611831494926052243428192243517312221765490067054576722892784347440519').exp10(-10), '422722430697117098871682718587051957978223415061183149492605224342819224351731222176549006705457672289278');
assertBigIntegerEquals(BigInteger('4227224306971170988716827185870519579782234150611831494926052243428192243517312221765490067054576722892784347440519').exp10(-11), '42272243069711709887168271858705195797822341506118314949260522434281922435173122217654900670545767228927');
assertBigIntegerEquals(BigInteger('4227224306971170988716827185870519579782234150611831494926052243428192243517312221765490067054576722892784347440519').exp10(-12), '4227224306971170988716827185870519579782234150611831494926052243428192243517312221765490067054576722892');
assertBigIntegerEquals(BigInteger('4227224306971170988716827185870519579782234150611831494926052243428192243517312221765490067054576722892784347440519').exp10(-2), '42272243069711709887168271858705195797822341506118314949260522434281922435173122217654900670545767228927843474405');
assertBigIntegerEquals(BigInteger('4227224306971170988716827185870519579782234150611831494926052243428192243517312221765490067054576722892784347440519').exp10(-3), '4227224306971170988716827185870519579782234150611831494926052243428192243517312221765490067054576722892784347440');
assertBigIntegerEquals(BigInteger('4227224306971170988716827185870519579782234150611831494926052243428192243517312221765490067054576722892784347440519').exp10(-4), '422722430697117098871682718587051957978223415061183149492605224342819224351731222176549006705457672289278434744');
assertBigIntegerEquals(BigInteger('4227224306971170988716827185870519579782234150611831494926052243428192243517312221765490067054576722892784347440519').exp10(-5), '42272243069711709887168271858705195797822341506118314949260522434281922435173122217654900670545767228927843474');
assertBigIntegerEquals(BigInteger('4227224306971170988716827185870519579782234150611831494926052243428192243517312221765490067054576722892784347440519').exp10(-6), '4227224306971170988716827185870519579782234150611831494926052243428192243517312221765490067054576722892784347');
assertBigIntegerEquals(BigInteger('4227224306971170988716827185870519579782234150611831494926052243428192243517312221765490067054576722892784347440519').exp10(-7), '422722430697117098871682718587051957978223415061183149492605224342819224351731222176549006705457672289278434');
assertBigIntegerEquals(BigInteger('4227224306971170988716827185870519579782234150611831494926052243428192243517312221765490067054576722892784347440519').exp10(-8), '42272243069711709887168271858705195797822341506118314949260522434281922435173122217654900670545767228927843');
assertBigIntegerEquals(BigInteger('4227224306971170988716827185870519579782234150611831494926052243428192243517312221765490067054576722892784347440519').exp10(-9), '4227224306971170988716827185870519579782234150611831494926052243428192243517312221765490067054576722892784');
assertBigIntegerEquals(BigInteger('4227224306971170988716827185870519579782234150611831494926052243428192243517312221765490067054576722892784347440519').exp10(0), '4227224306971170988716827185870519579782234150611831494926052243428192243517312221765490067054576722892784347440519');
assertBigIntegerEquals(BigInteger('4227224306971170988716827185870519579782234150611831494926052243428192243517312221765490067054576722892784347440519').exp10(1), '42272243069711709887168271858705195797822341506118314949260522434281922435173122217654900670545767228927843474405190');
assertBigIntegerEquals(BigInteger('4227224306971170988716827185870519579782234150611831494926052243428192243517312221765490067054576722892784347440519').exp10(10), '42272243069711709887168271858705195797822341506118314949260522434281922435173122217654900670545767228927843474405190000000000');
assertBigIntegerEquals(BigInteger('4227224306971170988716827185870519579782234150611831494926052243428192243517312221765490067054576722892784347440519').exp10(2), '422722430697117098871682718587051957978223415061183149492605224342819224351731222176549006705457672289278434744051900');
assertBigIntegerEquals(BigInteger('4227224306971170988716827185870519579782234150611831494926052243428192243517312221765490067054576722892784347440519').exp10(3), '4227224306971170988716827185870519579782234150611831494926052243428192243517312221765490067054576722892784347440519000');
assertBigIntegerEquals(BigInteger('4227224306971170988716827185870519579782234150611831494926052243428192243517312221765490067054576722892784347440519').exp10(4), '42272243069711709887168271858705195797822341506118314949260522434281922435173122217654900670545767228927843474405190000');
assertBigIntegerEquals(BigInteger('4227224306971170988716827185870519579782234150611831494926052243428192243517312221765490067054576722892784347440519').exp10(5), '422722430697117098871682718587051957978223415061183149492605224342819224351731222176549006705457672289278434744051900000');
assertBigIntegerEquals(BigInteger('4227224306971170988716827185870519579782234150611831494926052243428192243517312221765490067054576722892784347440519').exp10(568), '42272243069711709887168271858705195797822341506118314949260522434281922435173122217654900670545767228927843474405190000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('4227224306971170988716827185870519579782234150611831494926052243428192243517312221765490067054576722892784347440519').exp10(6), '4227224306971170988716827185870519579782234150611831494926052243428192243517312221765490067054576722892784347440519000000');
assertBigIntegerEquals(BigInteger('4227224306971170988716827185870519579782234150611831494926052243428192243517312221765490067054576722892784347440519').exp10(7), '42272243069711709887168271858705195797822341506118314949260522434281922435173122217654900670545767228927843474405190000000');
assertBigIntegerEquals(BigInteger('4227224306971170988716827185870519579782234150611831494926052243428192243517312221765490067054576722892784347440519').exp10(74), '422722430697117098871682718587051957978223415061183149492605224342819224351731222176549006705457672289278434744051900000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('4227224306971170988716827185870519579782234150611831494926052243428192243517312221765490067054576722892784347440519').exp10(8), '422722430697117098871682718587051957978223415061183149492605224342819224351731222176549006705457672289278434744051900000000');
assertBigIntegerEquals(BigInteger('4227224306971170988716827185870519579782234150611831494926052243428192243517312221765490067054576722892784347440519').exp10(9), '4227224306971170988716827185870519579782234150611831494926052243428192243517312221765490067054576722892784347440519000000000');
assertBigIntegerEquals(BigInteger('45').exp10(-1), '4');
assertBigIntegerEquals(BigInteger('45').exp10(-10), '0');
assertBigIntegerEquals(BigInteger('45').exp10(-11), '0');
assertBigIntegerEquals(BigInteger('45').exp10(-12), '0');
assertBigIntegerEquals(BigInteger('45').exp10(-2), '0');
assertBigIntegerEquals(BigInteger('45').exp10(-3), '0');
assertBigIntegerEquals(BigInteger('45').exp10(-4), '0');
assertBigIntegerEquals(BigInteger('45').exp10(-5), '0');
assertBigIntegerEquals(BigInteger('45').exp10(-6), '0');
assertBigIntegerEquals(BigInteger('45').exp10(-7), '0');
assertBigIntegerEquals(BigInteger('45').exp10(-8), '0');
assertBigIntegerEquals(BigInteger('45').exp10(-9), '0');
assertBigIntegerEquals(BigInteger('45').exp10(0), '45');
assertBigIntegerEquals(BigInteger('45').exp10(1), '450');
assertBigIntegerEquals(BigInteger('45').exp10(10), '450000000000');
assertBigIntegerEquals(BigInteger('45').exp10(2), '4500');
assertBigIntegerEquals(BigInteger('45').exp10(3), '45000');
assertBigIntegerEquals(BigInteger('45').exp10(4), '450000');
assertBigIntegerEquals(BigInteger('45').exp10(5), '4500000');
assertBigIntegerEquals(BigInteger('45').exp10(568), '450000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('45').exp10(6), '45000000');
assertBigIntegerEquals(BigInteger('45').exp10(7), '450000000');
assertBigIntegerEquals(BigInteger('45').exp10(74), '4500000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('45').exp10(8), '4500000000');
assertBigIntegerEquals(BigInteger('45').exp10(9), '45000000000');
assertBigIntegerEquals(BigInteger('455488708838288456390976738').exp10(-1), '45548870883828845639097673');
assertBigIntegerEquals(BigInteger('455488708838288456390976738').exp10(-10), '45548870883828845');
assertBigIntegerEquals(BigInteger('455488708838288456390976738').exp10(-11), '4554887088382884');
assertBigIntegerEquals(BigInteger('455488708838288456390976738').exp10(-12), '455488708838288');
assertBigIntegerEquals(BigInteger('455488708838288456390976738').exp10(-2), '4554887088382884563909767');
assertBigIntegerEquals(BigInteger('455488708838288456390976738').exp10(-3), '455488708838288456390976');
assertBigIntegerEquals(BigInteger('455488708838288456390976738').exp10(-4), '45548870883828845639097');
assertBigIntegerEquals(BigInteger('455488708838288456390976738').exp10(-5), '4554887088382884563909');
assertBigIntegerEquals(BigInteger('455488708838288456390976738').exp10(-6), '455488708838288456390');
assertBigIntegerEquals(BigInteger('455488708838288456390976738').exp10(-7), '45548870883828845639');
assertBigIntegerEquals(BigInteger('455488708838288456390976738').exp10(-8), '4554887088382884563');
assertBigIntegerEquals(BigInteger('455488708838288456390976738').exp10(-9), '455488708838288456');
assertBigIntegerEquals(BigInteger('455488708838288456390976738').exp10(0), '455488708838288456390976738');
assertBigIntegerEquals(BigInteger('455488708838288456390976738').exp10(1), '4554887088382884563909767380');
assertBigIntegerEquals(BigInteger('455488708838288456390976738').exp10(10), '4554887088382884563909767380000000000');
assertBigIntegerEquals(BigInteger('455488708838288456390976738').exp10(2), '45548870883828845639097673800');
assertBigIntegerEquals(BigInteger('455488708838288456390976738').exp10(3), '455488708838288456390976738000');
assertBigIntegerEquals(BigInteger('455488708838288456390976738').exp10(4), '4554887088382884563909767380000');
assertBigIntegerEquals(BigInteger('455488708838288456390976738').exp10(5), '45548870883828845639097673800000');
assertBigIntegerEquals(BigInteger('455488708838288456390976738').exp10(568), '4554887088382884563909767380000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('455488708838288456390976738').exp10(6), '455488708838288456390976738000000');
assertBigIntegerEquals(BigInteger('455488708838288456390976738').exp10(7), '4554887088382884563909767380000000');
assertBigIntegerEquals(BigInteger('455488708838288456390976738').exp10(74), '45548870883828845639097673800000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('455488708838288456390976738').exp10(8), '45548870883828845639097673800000000');
assertBigIntegerEquals(BigInteger('455488708838288456390976738').exp10(9), '455488708838288456390976738000000000');
assertBigIntegerEquals(BigInteger('457069814657032').exp10(-1), '45706981465703');
assertBigIntegerEquals(BigInteger('457069814657032').exp10(-10), '45706');
assertBigIntegerEquals(BigInteger('457069814657032').exp10(-11), '4570');
assertBigIntegerEquals(BigInteger('457069814657032').exp10(-12), '457');
assertBigIntegerEquals(BigInteger('457069814657032').exp10(-2), '4570698146570');
assertBigIntegerEquals(BigInteger('457069814657032').exp10(-3), '457069814657');
assertBigIntegerEquals(BigInteger('457069814657032').exp10(-4), '45706981465');
assertBigIntegerEquals(BigInteger('457069814657032').exp10(-5), '4570698146');
assertBigIntegerEquals(BigInteger('457069814657032').exp10(-6), '457069814');
assertBigIntegerEquals(BigInteger('457069814657032').exp10(-7), '45706981');
assertBigIntegerEquals(BigInteger('457069814657032').exp10(-8), '4570698');
assertBigIntegerEquals(BigInteger('457069814657032').exp10(-9), '457069');
assertBigIntegerEquals(BigInteger('457069814657032').exp10(0), '457069814657032');
assertBigIntegerEquals(BigInteger('457069814657032').exp10(1), '4570698146570320');
assertBigIntegerEquals(BigInteger('457069814657032').exp10(10), '4570698146570320000000000');
assertBigIntegerEquals(BigInteger('457069814657032').exp10(2), '45706981465703200');
assertBigIntegerEquals(BigInteger('457069814657032').exp10(3), '457069814657032000');
assertBigIntegerEquals(BigInteger('457069814657032').exp10(4), '4570698146570320000');
assertBigIntegerEquals(BigInteger('457069814657032').exp10(5), '45706981465703200000');
assertBigIntegerEquals(BigInteger('457069814657032').exp10(568), '4570698146570320000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('457069814657032').exp10(6), '457069814657032000000');
assertBigIntegerEquals(BigInteger('457069814657032').exp10(7), '4570698146570320000000');
assertBigIntegerEquals(BigInteger('457069814657032').exp10(74), '45706981465703200000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('457069814657032').exp10(8), '45706981465703200000000');
assertBigIntegerEquals(BigInteger('457069814657032').exp10(9), '457069814657032000000000');
assertBigIntegerEquals(BigInteger('49322023916480219931134361554779109184328608328288970393765456338166453156711394763089925921351717462304949844030257888954892465078891795224360276323254119437225715082044426').exp10(-1), '4932202391648021993113436155477910918432860832828897039376545633816645315671139476308992592135171746230494984403025788895489246507889179522436027632325411943722571508204442');
assertBigIntegerEquals(BigInteger('49322023916480219931134361554779109184328608328288970393765456338166453156711394763089925921351717462304949844030257888954892465078891795224360276323254119437225715082044426').exp10(-10), '4932202391648021993113436155477910918432860832828897039376545633816645315671139476308992592135171746230494984403025788895489246507889179522436027632325411943722571');
assertBigIntegerEquals(BigInteger('49322023916480219931134361554779109184328608328288970393765456338166453156711394763089925921351717462304949844030257888954892465078891795224360276323254119437225715082044426').exp10(-11), '493220239164802199311343615547791091843286083282889703937654563381664531567113947630899259213517174623049498440302578889548924650788917952243602763232541194372257');
assertBigIntegerEquals(BigInteger('49322023916480219931134361554779109184328608328288970393765456338166453156711394763089925921351717462304949844030257888954892465078891795224360276323254119437225715082044426').exp10(-12), '49322023916480219931134361554779109184328608328288970393765456338166453156711394763089925921351717462304949844030257888954892465078891795224360276323254119437225');
assertBigIntegerEquals(BigInteger('49322023916480219931134361554779109184328608328288970393765456338166453156711394763089925921351717462304949844030257888954892465078891795224360276323254119437225715082044426').exp10(-2), '493220239164802199311343615547791091843286083282889703937654563381664531567113947630899259213517174623049498440302578889548924650788917952243602763232541194372257150820444');
assertBigIntegerEquals(BigInteger('49322023916480219931134361554779109184328608328288970393765456338166453156711394763089925921351717462304949844030257888954892465078891795224360276323254119437225715082044426').exp10(-3), '49322023916480219931134361554779109184328608328288970393765456338166453156711394763089925921351717462304949844030257888954892465078891795224360276323254119437225715082044');
assertBigIntegerEquals(BigInteger('49322023916480219931134361554779109184328608328288970393765456338166453156711394763089925921351717462304949844030257888954892465078891795224360276323254119437225715082044426').exp10(-4), '4932202391648021993113436155477910918432860832828897039376545633816645315671139476308992592135171746230494984403025788895489246507889179522436027632325411943722571508204');
assertBigIntegerEquals(BigInteger('49322023916480219931134361554779109184328608328288970393765456338166453156711394763089925921351717462304949844030257888954892465078891795224360276323254119437225715082044426').exp10(-5), '493220239164802199311343615547791091843286083282889703937654563381664531567113947630899259213517174623049498440302578889548924650788917952243602763232541194372257150820');
assertBigIntegerEquals(BigInteger('49322023916480219931134361554779109184328608328288970393765456338166453156711394763089925921351717462304949844030257888954892465078891795224360276323254119437225715082044426').exp10(-6), '49322023916480219931134361554779109184328608328288970393765456338166453156711394763089925921351717462304949844030257888954892465078891795224360276323254119437225715082');
assertBigIntegerEquals(BigInteger('49322023916480219931134361554779109184328608328288970393765456338166453156711394763089925921351717462304949844030257888954892465078891795224360276323254119437225715082044426').exp10(-7), '4932202391648021993113436155477910918432860832828897039376545633816645315671139476308992592135171746230494984403025788895489246507889179522436027632325411943722571508');
assertBigIntegerEquals(BigInteger('49322023916480219931134361554779109184328608328288970393765456338166453156711394763089925921351717462304949844030257888954892465078891795224360276323254119437225715082044426').exp10(-8), '493220239164802199311343615547791091843286083282889703937654563381664531567113947630899259213517174623049498440302578889548924650788917952243602763232541194372257150');
assertBigIntegerEquals(BigInteger('49322023916480219931134361554779109184328608328288970393765456338166453156711394763089925921351717462304949844030257888954892465078891795224360276323254119437225715082044426').exp10(-9), '49322023916480219931134361554779109184328608328288970393765456338166453156711394763089925921351717462304949844030257888954892465078891795224360276323254119437225715');
assertBigIntegerEquals(BigInteger('49322023916480219931134361554779109184328608328288970393765456338166453156711394763089925921351717462304949844030257888954892465078891795224360276323254119437225715082044426').exp10(0), '49322023916480219931134361554779109184328608328288970393765456338166453156711394763089925921351717462304949844030257888954892465078891795224360276323254119437225715082044426');
assertBigIntegerEquals(BigInteger('49322023916480219931134361554779109184328608328288970393765456338166453156711394763089925921351717462304949844030257888954892465078891795224360276323254119437225715082044426').exp10(1), '493220239164802199311343615547791091843286083282889703937654563381664531567113947630899259213517174623049498440302578889548924650788917952243602763232541194372257150820444260');
assertBigIntegerEquals(BigInteger('49322023916480219931134361554779109184328608328288970393765456338166453156711394763089925921351717462304949844030257888954892465078891795224360276323254119437225715082044426').exp10(10), '493220239164802199311343615547791091843286083282889703937654563381664531567113947630899259213517174623049498440302578889548924650788917952243602763232541194372257150820444260000000000');
assertBigIntegerEquals(BigInteger('49322023916480219931134361554779109184328608328288970393765456338166453156711394763089925921351717462304949844030257888954892465078891795224360276323254119437225715082044426').exp10(2), '4932202391648021993113436155477910918432860832828897039376545633816645315671139476308992592135171746230494984403025788895489246507889179522436027632325411943722571508204442600');
assertBigIntegerEquals(BigInteger('49322023916480219931134361554779109184328608328288970393765456338166453156711394763089925921351717462304949844030257888954892465078891795224360276323254119437225715082044426').exp10(3), '49322023916480219931134361554779109184328608328288970393765456338166453156711394763089925921351717462304949844030257888954892465078891795224360276323254119437225715082044426000');
assertBigIntegerEquals(BigInteger('49322023916480219931134361554779109184328608328288970393765456338166453156711394763089925921351717462304949844030257888954892465078891795224360276323254119437225715082044426').exp10(4), '493220239164802199311343615547791091843286083282889703937654563381664531567113947630899259213517174623049498440302578889548924650788917952243602763232541194372257150820444260000');
assertBigIntegerEquals(BigInteger('49322023916480219931134361554779109184328608328288970393765456338166453156711394763089925921351717462304949844030257888954892465078891795224360276323254119437225715082044426').exp10(5), '4932202391648021993113436155477910918432860832828897039376545633816645315671139476308992592135171746230494984403025788895489246507889179522436027632325411943722571508204442600000');
assertBigIntegerEquals(BigInteger('49322023916480219931134361554779109184328608328288970393765456338166453156711394763089925921351717462304949844030257888954892465078891795224360276323254119437225715082044426').exp10(568), '493220239164802199311343615547791091843286083282889703937654563381664531567113947630899259213517174623049498440302578889548924650788917952243602763232541194372257150820444260000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('49322023916480219931134361554779109184328608328288970393765456338166453156711394763089925921351717462304949844030257888954892465078891795224360276323254119437225715082044426').exp10(6), '49322023916480219931134361554779109184328608328288970393765456338166453156711394763089925921351717462304949844030257888954892465078891795224360276323254119437225715082044426000000');
assertBigIntegerEquals(BigInteger('49322023916480219931134361554779109184328608328288970393765456338166453156711394763089925921351717462304949844030257888954892465078891795224360276323254119437225715082044426').exp10(7), '493220239164802199311343615547791091843286083282889703937654563381664531567113947630899259213517174623049498440302578889548924650788917952243602763232541194372257150820444260000000');
assertBigIntegerEquals(BigInteger('49322023916480219931134361554779109184328608328288970393765456338166453156711394763089925921351717462304949844030257888954892465078891795224360276323254119437225715082044426').exp10(74), '4932202391648021993113436155477910918432860832828897039376545633816645315671139476308992592135171746230494984403025788895489246507889179522436027632325411943722571508204442600000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('49322023916480219931134361554779109184328608328288970393765456338166453156711394763089925921351717462304949844030257888954892465078891795224360276323254119437225715082044426').exp10(8), '4932202391648021993113436155477910918432860832828897039376545633816645315671139476308992592135171746230494984403025788895489246507889179522436027632325411943722571508204442600000000');
assertBigIntegerEquals(BigInteger('49322023916480219931134361554779109184328608328288970393765456338166453156711394763089925921351717462304949844030257888954892465078891795224360276323254119437225715082044426').exp10(9), '49322023916480219931134361554779109184328608328288970393765456338166453156711394763089925921351717462304949844030257888954892465078891795224360276323254119437225715082044426000000000');
assertBigIntegerEquals(BigInteger('5').exp10(-1), '0');
assertBigIntegerEquals(BigInteger('5').exp10(-10), '0');
assertBigIntegerEquals(BigInteger('5').exp10(-11), '0');
assertBigIntegerEquals(BigInteger('5').exp10(-12), '0');
assertBigIntegerEquals(BigInteger('5').exp10(-2), '0');
assertBigIntegerEquals(BigInteger('5').exp10(-3), '0');
assertBigIntegerEquals(BigInteger('5').exp10(-4), '0');
assertBigIntegerEquals(BigInteger('5').exp10(-5), '0');
assertBigIntegerEquals(BigInteger('5').exp10(-6), '0');
assertBigIntegerEquals(BigInteger('5').exp10(-7), '0');
assertBigIntegerEquals(BigInteger('5').exp10(-8), '0');
assertBigIntegerEquals(BigInteger('5').exp10(-9), '0');
assertBigIntegerEquals(BigInteger('5').exp10(0), '5');
assertBigIntegerEquals(BigInteger('5').exp10(1), '50');
assertBigIntegerEquals(BigInteger('5').exp10(10), '50000000000');
assertBigIntegerEquals(BigInteger('5').exp10(2), '500');
assertBigIntegerEquals(BigInteger('5').exp10(3), '5000');
assertBigIntegerEquals(BigInteger('5').exp10(4), '50000');
assertBigIntegerEquals(BigInteger('5').exp10(5), '500000');
assertBigIntegerEquals(BigInteger('5').exp10(568), '50000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('5').exp10(6), '5000000');
assertBigIntegerEquals(BigInteger('5').exp10(7), '50000000');
assertBigIntegerEquals(BigInteger('5').exp10(74), '500000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('5').exp10(8), '500000000');
assertBigIntegerEquals(BigInteger('5').exp10(9), '5000000000');
assertBigIntegerEquals(BigInteger('5084968096321475').exp10(-1), '508496809632147');
assertBigIntegerEquals(BigInteger('5084968096321475').exp10(-10), '508496');
assertBigIntegerEquals(BigInteger('5084968096321475').exp10(-11), '50849');
assertBigIntegerEquals(BigInteger('5084968096321475').exp10(-12), '5084');
assertBigIntegerEquals(BigInteger('5084968096321475').exp10(-2), '50849680963214');
assertBigIntegerEquals(BigInteger('5084968096321475').exp10(-3), '5084968096321');
assertBigIntegerEquals(BigInteger('5084968096321475').exp10(-4), '508496809632');
assertBigIntegerEquals(BigInteger('5084968096321475').exp10(-5), '50849680963');
assertBigIntegerEquals(BigInteger('5084968096321475').exp10(-6), '5084968096');
assertBigIntegerEquals(BigInteger('5084968096321475').exp10(-7), '508496809');
assertBigIntegerEquals(BigInteger('5084968096321475').exp10(-8), '50849680');
assertBigIntegerEquals(BigInteger('5084968096321475').exp10(-9), '5084968');
assertBigIntegerEquals(BigInteger('5084968096321475').exp10(0), '5084968096321475');
assertBigIntegerEquals(BigInteger('5084968096321475').exp10(1), '50849680963214750');
assertBigIntegerEquals(BigInteger('5084968096321475').exp10(10), '50849680963214750000000000');
assertBigIntegerEquals(BigInteger('5084968096321475').exp10(2), '508496809632147500');
assertBigIntegerEquals(BigInteger('5084968096321475').exp10(3), '5084968096321475000');
assertBigIntegerEquals(BigInteger('5084968096321475').exp10(4), '50849680963214750000');
assertBigIntegerEquals(BigInteger('5084968096321475').exp10(5), '508496809632147500000');
assertBigIntegerEquals(BigInteger('5084968096321475').exp10(568), '50849680963214750000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('5084968096321475').exp10(6), '5084968096321475000000');
assertBigIntegerEquals(BigInteger('5084968096321475').exp10(7), '50849680963214750000000');
assertBigIntegerEquals(BigInteger('5084968096321475').exp10(74), '508496809632147500000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('5084968096321475').exp10(8), '508496809632147500000000');
assertBigIntegerEquals(BigInteger('5084968096321475').exp10(9), '5084968096321475000000000');
assertBigIntegerEquals(BigInteger('55').exp10(-1), '5');
assertBigIntegerEquals(BigInteger('55').exp10(-10), '0');
assertBigIntegerEquals(BigInteger('55').exp10(-11), '0');
assertBigIntegerEquals(BigInteger('55').exp10(-12), '0');
assertBigIntegerEquals(BigInteger('55').exp10(-2), '0');
assertBigIntegerEquals(BigInteger('55').exp10(-3), '0');
assertBigIntegerEquals(BigInteger('55').exp10(-4), '0');
assertBigIntegerEquals(BigInteger('55').exp10(-5), '0');
assertBigIntegerEquals(BigInteger('55').exp10(-6), '0');
assertBigIntegerEquals(BigInteger('55').exp10(-7), '0');
assertBigIntegerEquals(BigInteger('55').exp10(-8), '0');
assertBigIntegerEquals(BigInteger('55').exp10(-9), '0');
assertBigIntegerEquals(BigInteger('55').exp10(0), '55');
assertBigIntegerEquals(BigInteger('55').exp10(1), '550');
assertBigIntegerEquals(BigInteger('55').exp10(10), '550000000000');
assertBigIntegerEquals(BigInteger('55').exp10(2), '5500');
assertBigIntegerEquals(BigInteger('55').exp10(3), '55000');
assertBigIntegerEquals(BigInteger('55').exp10(4), '550000');
assertBigIntegerEquals(BigInteger('55').exp10(5), '5500000');
assertBigIntegerEquals(BigInteger('55').exp10(568), '550000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('55').exp10(6), '55000000');
assertBigIntegerEquals(BigInteger('55').exp10(7), '550000000');
assertBigIntegerEquals(BigInteger('55').exp10(74), '5500000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('55').exp10(8), '5500000000');
assertBigIntegerEquals(BigInteger('55').exp10(9), '55000000000');
assertBigIntegerEquals(BigInteger('568').exp10(-1), '56');
assertBigIntegerEquals(BigInteger('568').exp10(-10), '0');
assertBigIntegerEquals(BigInteger('568').exp10(-11), '0');
assertBigIntegerEquals(BigInteger('568').exp10(-12), '0');
assertBigIntegerEquals(BigInteger('568').exp10(-2), '5');
assertBigIntegerEquals(BigInteger('568').exp10(-3), '0');
assertBigIntegerEquals(BigInteger('568').exp10(-4), '0');
assertBigIntegerEquals(BigInteger('568').exp10(-5), '0');
assertBigIntegerEquals(BigInteger('568').exp10(-6), '0');
assertBigIntegerEquals(BigInteger('568').exp10(-7), '0');
assertBigIntegerEquals(BigInteger('568').exp10(-8), '0');
assertBigIntegerEquals(BigInteger('568').exp10(-9), '0');
assertBigIntegerEquals(BigInteger('568').exp10(0), '568');
assertBigIntegerEquals(BigInteger('568').exp10(1), '5680');
assertBigIntegerEquals(BigInteger('568').exp10(10), '5680000000000');
assertBigIntegerEquals(BigInteger('568').exp10(2), '56800');
assertBigIntegerEquals(BigInteger('568').exp10(3), '568000');
assertBigIntegerEquals(BigInteger('568').exp10(4), '5680000');
assertBigIntegerEquals(BigInteger('568').exp10(5), '56800000');
assertBigIntegerEquals(BigInteger('568').exp10(568), '5680000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('568').exp10(6), '568000000');
assertBigIntegerEquals(BigInteger('568').exp10(7), '5680000000');
assertBigIntegerEquals(BigInteger('568').exp10(74), '56800000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('568').exp10(8), '56800000000');
assertBigIntegerEquals(BigInteger('568').exp10(9), '568000000000');
assertBigIntegerEquals(BigInteger('57637936').exp10(-1), '5763793');
assertBigIntegerEquals(BigInteger('57637936').exp10(-10), '0');
assertBigIntegerEquals(BigInteger('57637936').exp10(-11), '0');
assertBigIntegerEquals(BigInteger('57637936').exp10(-12), '0');
assertBigIntegerEquals(BigInteger('57637936').exp10(-2), '576379');
assertBigIntegerEquals(BigInteger('57637936').exp10(-3), '57637');
assertBigIntegerEquals(BigInteger('57637936').exp10(-4), '5763');
assertBigIntegerEquals(BigInteger('57637936').exp10(-5), '576');
assertBigIntegerEquals(BigInteger('57637936').exp10(-6), '57');
assertBigIntegerEquals(BigInteger('57637936').exp10(-7), '5');
assertBigIntegerEquals(BigInteger('57637936').exp10(-8), '0');
assertBigIntegerEquals(BigInteger('57637936').exp10(-9), '0');
assertBigIntegerEquals(BigInteger('57637936').exp10(0), '57637936');
assertBigIntegerEquals(BigInteger('57637936').exp10(1), '576379360');
assertBigIntegerEquals(BigInteger('57637936').exp10(10), '576379360000000000');
assertBigIntegerEquals(BigInteger('57637936').exp10(2), '5763793600');
assertBigIntegerEquals(BigInteger('57637936').exp10(3), '57637936000');
assertBigIntegerEquals(BigInteger('57637936').exp10(4), '576379360000');
assertBigIntegerEquals(BigInteger('57637936').exp10(5), '5763793600000');
assertBigIntegerEquals(BigInteger('57637936').exp10(568), '576379360000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('57637936').exp10(6), '57637936000000');
assertBigIntegerEquals(BigInteger('57637936').exp10(7), '576379360000000');
assertBigIntegerEquals(BigInteger('57637936').exp10(74), '5763793600000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('57637936').exp10(8), '5763793600000000');
assertBigIntegerEquals(BigInteger('57637936').exp10(9), '57637936000000000');
assertBigIntegerEquals(BigInteger('5836').exp10(-1), '583');
assertBigIntegerEquals(BigInteger('5836').exp10(-10), '0');
assertBigIntegerEquals(BigInteger('5836').exp10(-11), '0');
assertBigIntegerEquals(BigInteger('5836').exp10(-12), '0');
assertBigIntegerEquals(BigInteger('5836').exp10(-2), '58');
assertBigIntegerEquals(BigInteger('5836').exp10(-3), '5');
assertBigIntegerEquals(BigInteger('5836').exp10(-4), '0');
assertBigIntegerEquals(BigInteger('5836').exp10(-5), '0');
assertBigIntegerEquals(BigInteger('5836').exp10(-6), '0');
assertBigIntegerEquals(BigInteger('5836').exp10(-7), '0');
assertBigIntegerEquals(BigInteger('5836').exp10(-8), '0');
assertBigIntegerEquals(BigInteger('5836').exp10(-9), '0');
assertBigIntegerEquals(BigInteger('5836').exp10(0), '5836');
assertBigIntegerEquals(BigInteger('5836').exp10(1), '58360');
assertBigIntegerEquals(BigInteger('5836').exp10(10), '58360000000000');
assertBigIntegerEquals(BigInteger('5836').exp10(2), '583600');
assertBigIntegerEquals(BigInteger('5836').exp10(3), '5836000');
assertBigIntegerEquals(BigInteger('5836').exp10(4), '58360000');
assertBigIntegerEquals(BigInteger('5836').exp10(5), '583600000');
assertBigIntegerEquals(BigInteger('5836').exp10(568), '58360000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('5836').exp10(6), '5836000000');
assertBigIntegerEquals(BigInteger('5836').exp10(7), '58360000000');
assertBigIntegerEquals(BigInteger('5836').exp10(74), '583600000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('5836').exp10(8), '583600000000');
assertBigIntegerEquals(BigInteger('5836').exp10(9), '5836000000000');
assertBigIntegerEquals(BigInteger('59884393257606720065434438087005410690984535879799964926170716775084968096321475304418452574570698146570322630514941987010240775').exp10(-1), '5988439325760672006543443808700541069098453587979996492617071677508496809632147530441845257457069814657032263051494198701024077');
assertBigIntegerEquals(BigInteger('59884393257606720065434438087005410690984535879799964926170716775084968096321475304418452574570698146570322630514941987010240775').exp10(-10), '5988439325760672006543443808700541069098453587979996492617071677508496809632147530441845257457069814657032263051494198');
assertBigIntegerEquals(BigInteger('59884393257606720065434438087005410690984535879799964926170716775084968096321475304418452574570698146570322630514941987010240775').exp10(-11), '598843932576067200654344380870054106909845358797999649261707167750849680963214753044184525745706981465703226305149419');
assertBigIntegerEquals(BigInteger('59884393257606720065434438087005410690984535879799964926170716775084968096321475304418452574570698146570322630514941987010240775').exp10(-12), '59884393257606720065434438087005410690984535879799964926170716775084968096321475304418452574570698146570322630514941');
assertBigIntegerEquals(BigInteger('59884393257606720065434438087005410690984535879799964926170716775084968096321475304418452574570698146570322630514941987010240775').exp10(-2), '598843932576067200654344380870054106909845358797999649261707167750849680963214753044184525745706981465703226305149419870102407');
assertBigIntegerEquals(BigInteger('59884393257606720065434438087005410690984535879799964926170716775084968096321475304418452574570698146570322630514941987010240775').exp10(-3), '59884393257606720065434438087005410690984535879799964926170716775084968096321475304418452574570698146570322630514941987010240');
assertBigIntegerEquals(BigInteger('59884393257606720065434438087005410690984535879799964926170716775084968096321475304418452574570698146570322630514941987010240775').exp10(-4), '5988439325760672006543443808700541069098453587979996492617071677508496809632147530441845257457069814657032263051494198701024');
assertBigIntegerEquals(BigInteger('59884393257606720065434438087005410690984535879799964926170716775084968096321475304418452574570698146570322630514941987010240775').exp10(-5), '598843932576067200654344380870054106909845358797999649261707167750849680963214753044184525745706981465703226305149419870102');
assertBigIntegerEquals(BigInteger('59884393257606720065434438087005410690984535879799964926170716775084968096321475304418452574570698146570322630514941987010240775').exp10(-6), '59884393257606720065434438087005410690984535879799964926170716775084968096321475304418452574570698146570322630514941987010');
assertBigIntegerEquals(BigInteger('59884393257606720065434438087005410690984535879799964926170716775084968096321475304418452574570698146570322630514941987010240775').exp10(-7), '5988439325760672006543443808700541069098453587979996492617071677508496809632147530441845257457069814657032263051494198701');
assertBigIntegerEquals(BigInteger('59884393257606720065434438087005410690984535879799964926170716775084968096321475304418452574570698146570322630514941987010240775').exp10(-8), '598843932576067200654344380870054106909845358797999649261707167750849680963214753044184525745706981465703226305149419870');
assertBigIntegerEquals(BigInteger('59884393257606720065434438087005410690984535879799964926170716775084968096321475304418452574570698146570322630514941987010240775').exp10(-9), '59884393257606720065434438087005410690984535879799964926170716775084968096321475304418452574570698146570322630514941987');
assertBigIntegerEquals(BigInteger('59884393257606720065434438087005410690984535879799964926170716775084968096321475304418452574570698146570322630514941987010240775').exp10(0), '59884393257606720065434438087005410690984535879799964926170716775084968096321475304418452574570698146570322630514941987010240775');
assertBigIntegerEquals(BigInteger('59884393257606720065434438087005410690984535879799964926170716775084968096321475304418452574570698146570322630514941987010240775').exp10(1), '598843932576067200654344380870054106909845358797999649261707167750849680963214753044184525745706981465703226305149419870102407750');
assertBigIntegerEquals(BigInteger('59884393257606720065434438087005410690984535879799964926170716775084968096321475304418452574570698146570322630514941987010240775').exp10(10), '598843932576067200654344380870054106909845358797999649261707167750849680963214753044184525745706981465703226305149419870102407750000000000');
assertBigIntegerEquals(BigInteger('59884393257606720065434438087005410690984535879799964926170716775084968096321475304418452574570698146570322630514941987010240775').exp10(2), '5988439325760672006543443808700541069098453587979996492617071677508496809632147530441845257457069814657032263051494198701024077500');
assertBigIntegerEquals(BigInteger('59884393257606720065434438087005410690984535879799964926170716775084968096321475304418452574570698146570322630514941987010240775').exp10(3), '59884393257606720065434438087005410690984535879799964926170716775084968096321475304418452574570698146570322630514941987010240775000');
assertBigIntegerEquals(BigInteger('59884393257606720065434438087005410690984535879799964926170716775084968096321475304418452574570698146570322630514941987010240775').exp10(4), '598843932576067200654344380870054106909845358797999649261707167750849680963214753044184525745706981465703226305149419870102407750000');
assertBigIntegerEquals(BigInteger('59884393257606720065434438087005410690984535879799964926170716775084968096321475304418452574570698146570322630514941987010240775').exp10(5), '5988439325760672006543443808700541069098453587979996492617071677508496809632147530441845257457069814657032263051494198701024077500000');
assertBigIntegerEquals(BigInteger('59884393257606720065434438087005410690984535879799964926170716775084968096321475304418452574570698146570322630514941987010240775').exp10(568), '598843932576067200654344380870054106909845358797999649261707167750849680963214753044184525745706981465703226305149419870102407750000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('59884393257606720065434438087005410690984535879799964926170716775084968096321475304418452574570698146570322630514941987010240775').exp10(6), '59884393257606720065434438087005410690984535879799964926170716775084968096321475304418452574570698146570322630514941987010240775000000');
assertBigIntegerEquals(BigInteger('59884393257606720065434438087005410690984535879799964926170716775084968096321475304418452574570698146570322630514941987010240775').exp10(7), '598843932576067200654344380870054106909845358797999649261707167750849680963214753044184525745706981465703226305149419870102407750000000');
assertBigIntegerEquals(BigInteger('59884393257606720065434438087005410690984535879799964926170716775084968096321475304418452574570698146570322630514941987010240775').exp10(74), '5988439325760672006543443808700541069098453587979996492617071677508496809632147530441845257457069814657032263051494198701024077500000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('59884393257606720065434438087005410690984535879799964926170716775084968096321475304418452574570698146570322630514941987010240775').exp10(8), '5988439325760672006543443808700541069098453587979996492617071677508496809632147530441845257457069814657032263051494198701024077500000000');
assertBigIntegerEquals(BigInteger('59884393257606720065434438087005410690984535879799964926170716775084968096321475304418452574570698146570322630514941987010240775').exp10(9), '59884393257606720065434438087005410690984535879799964926170716775084968096321475304418452574570698146570322630514941987010240775000000000');
assertBigIntegerEquals(BigInteger('6').exp10(-1), '0');
assertBigIntegerEquals(BigInteger('6').exp10(-10), '0');
assertBigIntegerEquals(BigInteger('6').exp10(-11), '0');
assertBigIntegerEquals(BigInteger('6').exp10(-12), '0');
assertBigIntegerEquals(BigInteger('6').exp10(-2), '0');
assertBigIntegerEquals(BigInteger('6').exp10(-3), '0');
assertBigIntegerEquals(BigInteger('6').exp10(-4), '0');
assertBigIntegerEquals(BigInteger('6').exp10(-5), '0');
assertBigIntegerEquals(BigInteger('6').exp10(-6), '0');
assertBigIntegerEquals(BigInteger('6').exp10(-7), '0');
assertBigIntegerEquals(BigInteger('6').exp10(-8), '0');
assertBigIntegerEquals(BigInteger('6').exp10(-9), '0');
assertBigIntegerEquals(BigInteger('6').exp10(0), '6');
assertBigIntegerEquals(BigInteger('6').exp10(1), '60');
assertBigIntegerEquals(BigInteger('6').exp10(10), '60000000000');
assertBigIntegerEquals(BigInteger('6').exp10(2), '600');
assertBigIntegerEquals(BigInteger('6').exp10(3), '6000');
assertBigIntegerEquals(BigInteger('6').exp10(4), '60000');
assertBigIntegerEquals(BigInteger('6').exp10(5), '600000');
assertBigIntegerEquals(BigInteger('6').exp10(568), '60000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('6').exp10(6), '6000000');
assertBigIntegerEquals(BigInteger('6').exp10(7), '60000000');
assertBigIntegerEquals(BigInteger('6').exp10(74), '600000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('6').exp10(8), '600000000');
assertBigIntegerEquals(BigInteger('6').exp10(9), '6000000000');
assertBigIntegerEquals(BigInteger('60806103829201727642').exp10(-1), '6080610382920172764');
assertBigIntegerEquals(BigInteger('60806103829201727642').exp10(-10), '6080610382');
assertBigIntegerEquals(BigInteger('60806103829201727642').exp10(-11), '608061038');
assertBigIntegerEquals(BigInteger('60806103829201727642').exp10(-12), '60806103');
assertBigIntegerEquals(BigInteger('60806103829201727642').exp10(-2), '608061038292017276');
assertBigIntegerEquals(BigInteger('60806103829201727642').exp10(-3), '60806103829201727');
assertBigIntegerEquals(BigInteger('60806103829201727642').exp10(-4), '6080610382920172');
assertBigIntegerEquals(BigInteger('60806103829201727642').exp10(-5), '608061038292017');
assertBigIntegerEquals(BigInteger('60806103829201727642').exp10(-6), '60806103829201');
assertBigIntegerEquals(BigInteger('60806103829201727642').exp10(-7), '6080610382920');
assertBigIntegerEquals(BigInteger('60806103829201727642').exp10(-8), '608061038292');
assertBigIntegerEquals(BigInteger('60806103829201727642').exp10(-9), '60806103829');
assertBigIntegerEquals(BigInteger('60806103829201727642').exp10(0), '60806103829201727642');
assertBigIntegerEquals(BigInteger('60806103829201727642').exp10(1), '608061038292017276420');
assertBigIntegerEquals(BigInteger('60806103829201727642').exp10(10), '608061038292017276420000000000');
assertBigIntegerEquals(BigInteger('60806103829201727642').exp10(2), '6080610382920172764200');
assertBigIntegerEquals(BigInteger('60806103829201727642').exp10(3), '60806103829201727642000');
assertBigIntegerEquals(BigInteger('60806103829201727642').exp10(4), '608061038292017276420000');
assertBigIntegerEquals(BigInteger('60806103829201727642').exp10(5), '6080610382920172764200000');
assertBigIntegerEquals(BigInteger('60806103829201727642').exp10(568), '608061038292017276420000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('60806103829201727642').exp10(6), '60806103829201727642000000');
assertBigIntegerEquals(BigInteger('60806103829201727642').exp10(7), '608061038292017276420000000');
assertBigIntegerEquals(BigInteger('60806103829201727642').exp10(74), '6080610382920172764200000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('60806103829201727642').exp10(8), '6080610382920172764200000000');
assertBigIntegerEquals(BigInteger('60806103829201727642').exp10(9), '60806103829201727642000000000');
assertBigIntegerEquals(BigInteger('609675204133978287633625528598941105000580436935869275085195396511118657').exp10(-1), '60967520413397828763362552859894110500058043693586927508519539651111865');
assertBigIntegerEquals(BigInteger('609675204133978287633625528598941105000580436935869275085195396511118657').exp10(-10), '60967520413397828763362552859894110500058043693586927508519539');
assertBigIntegerEquals(BigInteger('609675204133978287633625528598941105000580436935869275085195396511118657').exp10(-11), '6096752041339782876336255285989411050005804369358692750851953');
assertBigIntegerEquals(BigInteger('609675204133978287633625528598941105000580436935869275085195396511118657').exp10(-12), '609675204133978287633625528598941105000580436935869275085195');
assertBigIntegerEquals(BigInteger('609675204133978287633625528598941105000580436935869275085195396511118657').exp10(-2), '6096752041339782876336255285989411050005804369358692750851953965111186');
assertBigIntegerEquals(BigInteger('609675204133978287633625528598941105000580436935869275085195396511118657').exp10(-3), '609675204133978287633625528598941105000580436935869275085195396511118');
assertBigIntegerEquals(BigInteger('609675204133978287633625528598941105000580436935869275085195396511118657').exp10(-4), '60967520413397828763362552859894110500058043693586927508519539651111');
assertBigIntegerEquals(BigInteger('609675204133978287633625528598941105000580436935869275085195396511118657').exp10(-5), '6096752041339782876336255285989411050005804369358692750851953965111');
assertBigIntegerEquals(BigInteger('609675204133978287633625528598941105000580436935869275085195396511118657').exp10(-6), '609675204133978287633625528598941105000580436935869275085195396511');
assertBigIntegerEquals(BigInteger('609675204133978287633625528598941105000580436935869275085195396511118657').exp10(-7), '60967520413397828763362552859894110500058043693586927508519539651');
assertBigIntegerEquals(BigInteger('609675204133978287633625528598941105000580436935869275085195396511118657').exp10(-8), '6096752041339782876336255285989411050005804369358692750851953965');
assertBigIntegerEquals(BigInteger('609675204133978287633625528598941105000580436935869275085195396511118657').exp10(-9), '609675204133978287633625528598941105000580436935869275085195396');
assertBigIntegerEquals(BigInteger('609675204133978287633625528598941105000580436935869275085195396511118657').exp10(0), '609675204133978287633625528598941105000580436935869275085195396511118657');
assertBigIntegerEquals(BigInteger('609675204133978287633625528598941105000580436935869275085195396511118657').exp10(1), '6096752041339782876336255285989411050005804369358692750851953965111186570');
assertBigIntegerEquals(BigInteger('609675204133978287633625528598941105000580436935869275085195396511118657').exp10(10), '6096752041339782876336255285989411050005804369358692750851953965111186570000000000');
assertBigIntegerEquals(BigInteger('609675204133978287633625528598941105000580436935869275085195396511118657').exp10(2), '60967520413397828763362552859894110500058043693586927508519539651111865700');
assertBigIntegerEquals(BigInteger('609675204133978287633625528598941105000580436935869275085195396511118657').exp10(3), '609675204133978287633625528598941105000580436935869275085195396511118657000');
assertBigIntegerEquals(BigInteger('609675204133978287633625528598941105000580436935869275085195396511118657').exp10(4), '6096752041339782876336255285989411050005804369358692750851953965111186570000');
assertBigIntegerEquals(BigInteger('609675204133978287633625528598941105000580436935869275085195396511118657').exp10(5), '60967520413397828763362552859894110500058043693586927508519539651111865700000');
assertBigIntegerEquals(BigInteger('609675204133978287633625528598941105000580436935869275085195396511118657').exp10(568), '6096752041339782876336255285989411050005804369358692750851953965111186570000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('609675204133978287633625528598941105000580436935869275085195396511118657').exp10(6), '609675204133978287633625528598941105000580436935869275085195396511118657000000');
assertBigIntegerEquals(BigInteger('609675204133978287633625528598941105000580436935869275085195396511118657').exp10(7), '6096752041339782876336255285989411050005804369358692750851953965111186570000000');
assertBigIntegerEquals(BigInteger('609675204133978287633625528598941105000580436935869275085195396511118657').exp10(74), '60967520413397828763362552859894110500058043693586927508519539651111865700000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('609675204133978287633625528598941105000580436935869275085195396511118657').exp10(8), '60967520413397828763362552859894110500058043693586927508519539651111865700000000');
assertBigIntegerEquals(BigInteger('609675204133978287633625528598941105000580436935869275085195396511118657').exp10(9), '609675204133978287633625528598941105000580436935869275085195396511118657000000000');
assertBigIntegerEquals(BigInteger('6210519985880524850605465904155380215027236600816531155434179432768928168336607689660372950027916871196753780651842392').exp10(-1), '621051998588052485060546590415538021502723660081653115543417943276892816833660768966037295002791687119675378065184239');
assertBigIntegerEquals(BigInteger('6210519985880524850605465904155380215027236600816531155434179432768928168336607689660372950027916871196753780651842392').exp10(-10), '621051998588052485060546590415538021502723660081653115543417943276892816833660768966037295002791687119675378');
assertBigIntegerEquals(BigInteger('6210519985880524850605465904155380215027236600816531155434179432768928168336607689660372950027916871196753780651842392').exp10(-11), '62105199858805248506054659041553802150272366008165311554341794327689281683366076896603729500279168711967537');
assertBigIntegerEquals(BigInteger('6210519985880524850605465904155380215027236600816531155434179432768928168336607689660372950027916871196753780651842392').exp10(-12), '6210519985880524850605465904155380215027236600816531155434179432768928168336607689660372950027916871196753');
assertBigIntegerEquals(BigInteger('6210519985880524850605465904155380215027236600816531155434179432768928168336607689660372950027916871196753780651842392').exp10(-2), '62105199858805248506054659041553802150272366008165311554341794327689281683366076896603729500279168711967537806518423');
assertBigIntegerEquals(BigInteger('6210519985880524850605465904155380215027236600816531155434179432768928168336607689660372950027916871196753780651842392').exp10(-3), '6210519985880524850605465904155380215027236600816531155434179432768928168336607689660372950027916871196753780651842');
assertBigIntegerEquals(BigInteger('6210519985880524850605465904155380215027236600816531155434179432768928168336607689660372950027916871196753780651842392').exp10(-4), '621051998588052485060546590415538021502723660081653115543417943276892816833660768966037295002791687119675378065184');
assertBigIntegerEquals(BigInteger('6210519985880524850605465904155380215027236600816531155434179432768928168336607689660372950027916871196753780651842392').exp10(-5), '62105199858805248506054659041553802150272366008165311554341794327689281683366076896603729500279168711967537806518');
assertBigIntegerEquals(BigInteger('6210519985880524850605465904155380215027236600816531155434179432768928168336607689660372950027916871196753780651842392').exp10(-6), '6210519985880524850605465904155380215027236600816531155434179432768928168336607689660372950027916871196753780651');
assertBigIntegerEquals(BigInteger('6210519985880524850605465904155380215027236600816531155434179432768928168336607689660372950027916871196753780651842392').exp10(-7), '621051998588052485060546590415538021502723660081653115543417943276892816833660768966037295002791687119675378065');
assertBigIntegerEquals(BigInteger('6210519985880524850605465904155380215027236600816531155434179432768928168336607689660372950027916871196753780651842392').exp10(-8), '62105199858805248506054659041553802150272366008165311554341794327689281683366076896603729500279168711967537806');
assertBigIntegerEquals(BigInteger('6210519985880524850605465904155380215027236600816531155434179432768928168336607689660372950027916871196753780651842392').exp10(-9), '6210519985880524850605465904155380215027236600816531155434179432768928168336607689660372950027916871196753780');
assertBigIntegerEquals(BigInteger('6210519985880524850605465904155380215027236600816531155434179432768928168336607689660372950027916871196753780651842392').exp10(0), '6210519985880524850605465904155380215027236600816531155434179432768928168336607689660372950027916871196753780651842392');
assertBigIntegerEquals(BigInteger('6210519985880524850605465904155380215027236600816531155434179432768928168336607689660372950027916871196753780651842392').exp10(1), '62105199858805248506054659041553802150272366008165311554341794327689281683366076896603729500279168711967537806518423920');
assertBigIntegerEquals(BigInteger('6210519985880524850605465904155380215027236600816531155434179432768928168336607689660372950027916871196753780651842392').exp10(10), '62105199858805248506054659041553802150272366008165311554341794327689281683366076896603729500279168711967537806518423920000000000');
assertBigIntegerEquals(BigInteger('6210519985880524850605465904155380215027236600816531155434179432768928168336607689660372950027916871196753780651842392').exp10(2), '621051998588052485060546590415538021502723660081653115543417943276892816833660768966037295002791687119675378065184239200');
assertBigIntegerEquals(BigInteger('6210519985880524850605465904155380215027236600816531155434179432768928168336607689660372950027916871196753780651842392').exp10(3), '6210519985880524850605465904155380215027236600816531155434179432768928168336607689660372950027916871196753780651842392000');
assertBigIntegerEquals(BigInteger('6210519985880524850605465904155380215027236600816531155434179432768928168336607689660372950027916871196753780651842392').exp10(4), '62105199858805248506054659041553802150272366008165311554341794327689281683366076896603729500279168711967537806518423920000');
assertBigIntegerEquals(BigInteger('6210519985880524850605465904155380215027236600816531155434179432768928168336607689660372950027916871196753780651842392').exp10(5), '621051998588052485060546590415538021502723660081653115543417943276892816833660768966037295002791687119675378065184239200000');
assertBigIntegerEquals(BigInteger('6210519985880524850605465904155380215027236600816531155434179432768928168336607689660372950027916871196753780651842392').exp10(568), '62105199858805248506054659041553802150272366008165311554341794327689281683366076896603729500279168711967537806518423920000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('6210519985880524850605465904155380215027236600816531155434179432768928168336607689660372950027916871196753780651842392').exp10(6), '6210519985880524850605465904155380215027236600816531155434179432768928168336607689660372950027916871196753780651842392000000');
assertBigIntegerEquals(BigInteger('6210519985880524850605465904155380215027236600816531155434179432768928168336607689660372950027916871196753780651842392').exp10(7), '62105199858805248506054659041553802150272366008165311554341794327689281683366076896603729500279168711967537806518423920000000');
assertBigIntegerEquals(BigInteger('6210519985880524850605465904155380215027236600816531155434179432768928168336607689660372950027916871196753780651842392').exp10(74), '621051998588052485060546590415538021502723660081653115543417943276892816833660768966037295002791687119675378065184239200000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('6210519985880524850605465904155380215027236600816531155434179432768928168336607689660372950027916871196753780651842392').exp10(8), '621051998588052485060546590415538021502723660081653115543417943276892816833660768966037295002791687119675378065184239200000000');
assertBigIntegerEquals(BigInteger('6210519985880524850605465904155380215027236600816531155434179432768928168336607689660372950027916871196753780651842392').exp10(9), '6210519985880524850605465904155380215027236600816531155434179432768928168336607689660372950027916871196753780651842392000000000');
assertBigIntegerEquals(BigInteger('6311612915668321104').exp10(-1), '631161291566832110');
assertBigIntegerEquals(BigInteger('6311612915668321104').exp10(-10), '631161291');
assertBigIntegerEquals(BigInteger('6311612915668321104').exp10(-11), '63116129');
assertBigIntegerEquals(BigInteger('6311612915668321104').exp10(-12), '6311612');
assertBigIntegerEquals(BigInteger('6311612915668321104').exp10(-2), '63116129156683211');
assertBigIntegerEquals(BigInteger('6311612915668321104').exp10(-3), '6311612915668321');
assertBigIntegerEquals(BigInteger('6311612915668321104').exp10(-4), '631161291566832');
assertBigIntegerEquals(BigInteger('6311612915668321104').exp10(-5), '63116129156683');
assertBigIntegerEquals(BigInteger('6311612915668321104').exp10(-6), '6311612915668');
assertBigIntegerEquals(BigInteger('6311612915668321104').exp10(-7), '631161291566');
assertBigIntegerEquals(BigInteger('6311612915668321104').exp10(-8), '63116129156');
assertBigIntegerEquals(BigInteger('6311612915668321104').exp10(-9), '6311612915');
assertBigIntegerEquals(BigInteger('6311612915668321104').exp10(0), '6311612915668321104');
assertBigIntegerEquals(BigInteger('6311612915668321104').exp10(1), '63116129156683211040');
assertBigIntegerEquals(BigInteger('6311612915668321104').exp10(10), '63116129156683211040000000000');
assertBigIntegerEquals(BigInteger('6311612915668321104').exp10(2), '631161291566832110400');
assertBigIntegerEquals(BigInteger('6311612915668321104').exp10(3), '6311612915668321104000');
assertBigIntegerEquals(BigInteger('6311612915668321104').exp10(4), '63116129156683211040000');
assertBigIntegerEquals(BigInteger('6311612915668321104').exp10(5), '631161291566832110400000');
assertBigIntegerEquals(BigInteger('6311612915668321104').exp10(568), '63116129156683211040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('6311612915668321104').exp10(6), '6311612915668321104000000');
assertBigIntegerEquals(BigInteger('6311612915668321104').exp10(7), '63116129156683211040000000');
assertBigIntegerEquals(BigInteger('6311612915668321104').exp10(74), '631161291566832110400000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('6311612915668321104').exp10(8), '631161291566832110400000000');
assertBigIntegerEquals(BigInteger('6311612915668321104').exp10(9), '6311612915668321104000000000');
assertBigIntegerEquals(BigInteger('69269786631707').exp10(-1), '6926978663170');
assertBigIntegerEquals(BigInteger('69269786631707').exp10(-10), '6926');
assertBigIntegerEquals(BigInteger('69269786631707').exp10(-11), '692');
assertBigIntegerEquals(BigInteger('69269786631707').exp10(-12), '69');
assertBigIntegerEquals(BigInteger('69269786631707').exp10(-2), '692697866317');
assertBigIntegerEquals(BigInteger('69269786631707').exp10(-3), '69269786631');
assertBigIntegerEquals(BigInteger('69269786631707').exp10(-4), '6926978663');
assertBigIntegerEquals(BigInteger('69269786631707').exp10(-5), '692697866');
assertBigIntegerEquals(BigInteger('69269786631707').exp10(-6), '69269786');
assertBigIntegerEquals(BigInteger('69269786631707').exp10(-7), '6926978');
assertBigIntegerEquals(BigInteger('69269786631707').exp10(-8), '692697');
assertBigIntegerEquals(BigInteger('69269786631707').exp10(-9), '69269');
assertBigIntegerEquals(BigInteger('69269786631707').exp10(0), '69269786631707');
assertBigIntegerEquals(BigInteger('69269786631707').exp10(1), '692697866317070');
assertBigIntegerEquals(BigInteger('69269786631707').exp10(10), '692697866317070000000000');
assertBigIntegerEquals(BigInteger('69269786631707').exp10(2), '6926978663170700');
assertBigIntegerEquals(BigInteger('69269786631707').exp10(3), '69269786631707000');
assertBigIntegerEquals(BigInteger('69269786631707').exp10(4), '692697866317070000');
assertBigIntegerEquals(BigInteger('69269786631707').exp10(5), '6926978663170700000');
assertBigIntegerEquals(BigInteger('69269786631707').exp10(568), '692697866317070000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('69269786631707').exp10(6), '69269786631707000000');
assertBigIntegerEquals(BigInteger('69269786631707').exp10(7), '692697866317070000000');
assertBigIntegerEquals(BigInteger('69269786631707').exp10(74), '6926978663170700000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('69269786631707').exp10(8), '6926978663170700000000');
assertBigIntegerEquals(BigInteger('69269786631707').exp10(9), '69269786631707000000000');
assertBigIntegerEquals(BigInteger('7').exp10(-1), '0');
assertBigIntegerEquals(BigInteger('7').exp10(-10), '0');
assertBigIntegerEquals(BigInteger('7').exp10(-11), '0');
assertBigIntegerEquals(BigInteger('7').exp10(-12), '0');
assertBigIntegerEquals(BigInteger('7').exp10(-2), '0');
assertBigIntegerEquals(BigInteger('7').exp10(-3), '0');
assertBigIntegerEquals(BigInteger('7').exp10(-4), '0');
assertBigIntegerEquals(BigInteger('7').exp10(-5), '0');
assertBigIntegerEquals(BigInteger('7').exp10(-6), '0');
assertBigIntegerEquals(BigInteger('7').exp10(-7), '0');
assertBigIntegerEquals(BigInteger('7').exp10(-8), '0');
assertBigIntegerEquals(BigInteger('7').exp10(-9), '0');
assertBigIntegerEquals(BigInteger('7').exp10(0), '7');
assertBigIntegerEquals(BigInteger('7').exp10(1), '70');
assertBigIntegerEquals(BigInteger('7').exp10(10), '70000000000');
assertBigIntegerEquals(BigInteger('7').exp10(2), '700');
assertBigIntegerEquals(BigInteger('7').exp10(3), '7000');
assertBigIntegerEquals(BigInteger('7').exp10(4), '70000');
assertBigIntegerEquals(BigInteger('7').exp10(5), '700000');
assertBigIntegerEquals(BigInteger('7').exp10(568), '70000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('7').exp10(6), '7000000');
assertBigIntegerEquals(BigInteger('7').exp10(7), '70000000');
assertBigIntegerEquals(BigInteger('7').exp10(74), '700000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('7').exp10(8), '700000000');
assertBigIntegerEquals(BigInteger('7').exp10(9), '7000000000');
assertBigIntegerEquals(BigInteger('72857166527346886').exp10(-1), '7285716652734688');
assertBigIntegerEquals(BigInteger('72857166527346886').exp10(-10), '7285716');
assertBigIntegerEquals(BigInteger('72857166527346886').exp10(-11), '728571');
assertBigIntegerEquals(BigInteger('72857166527346886').exp10(-12), '72857');
assertBigIntegerEquals(BigInteger('72857166527346886').exp10(-2), '728571665273468');
assertBigIntegerEquals(BigInteger('72857166527346886').exp10(-3), '72857166527346');
assertBigIntegerEquals(BigInteger('72857166527346886').exp10(-4), '7285716652734');
assertBigIntegerEquals(BigInteger('72857166527346886').exp10(-5), '728571665273');
assertBigIntegerEquals(BigInteger('72857166527346886').exp10(-6), '72857166527');
assertBigIntegerEquals(BigInteger('72857166527346886').exp10(-7), '7285716652');
assertBigIntegerEquals(BigInteger('72857166527346886').exp10(-8), '728571665');
assertBigIntegerEquals(BigInteger('72857166527346886').exp10(-9), '72857166');
assertBigIntegerEquals(BigInteger('72857166527346886').exp10(0), '72857166527346886');
assertBigIntegerEquals(BigInteger('72857166527346886').exp10(1), '728571665273468860');
assertBigIntegerEquals(BigInteger('72857166527346886').exp10(10), '728571665273468860000000000');
assertBigIntegerEquals(BigInteger('72857166527346886').exp10(2), '7285716652734688600');
assertBigIntegerEquals(BigInteger('72857166527346886').exp10(3), '72857166527346886000');
assertBigIntegerEquals(BigInteger('72857166527346886').exp10(4), '728571665273468860000');
assertBigIntegerEquals(BigInteger('72857166527346886').exp10(5), '7285716652734688600000');
assertBigIntegerEquals(BigInteger('72857166527346886').exp10(568), '728571665273468860000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('72857166527346886').exp10(6), '72857166527346886000000');
assertBigIntegerEquals(BigInteger('72857166527346886').exp10(7), '728571665273468860000000');
assertBigIntegerEquals(BigInteger('72857166527346886').exp10(74), '7285716652734688600000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('72857166527346886').exp10(8), '7285716652734688600000000');
assertBigIntegerEquals(BigInteger('72857166527346886').exp10(9), '72857166527346886000000000');
assertBigIntegerEquals(BigInteger('74').exp10(-1), '7');
assertBigIntegerEquals(BigInteger('74').exp10(-10), '0');
assertBigIntegerEquals(BigInteger('74').exp10(-11), '0');
assertBigIntegerEquals(BigInteger('74').exp10(-12), '0');
assertBigIntegerEquals(BigInteger('74').exp10(-2), '0');
assertBigIntegerEquals(BigInteger('74').exp10(-3), '0');
assertBigIntegerEquals(BigInteger('74').exp10(-4), '0');
assertBigIntegerEquals(BigInteger('74').exp10(-5), '0');
assertBigIntegerEquals(BigInteger('74').exp10(-6), '0');
assertBigIntegerEquals(BigInteger('74').exp10(-7), '0');
assertBigIntegerEquals(BigInteger('74').exp10(-8), '0');
assertBigIntegerEquals(BigInteger('74').exp10(-9), '0');
assertBigIntegerEquals(BigInteger('74').exp10(0), '74');
assertBigIntegerEquals(BigInteger('74').exp10(1), '740');
assertBigIntegerEquals(BigInteger('74').exp10(10), '740000000000');
assertBigIntegerEquals(BigInteger('74').exp10(2), '7400');
assertBigIntegerEquals(BigInteger('74').exp10(3), '74000');
assertBigIntegerEquals(BigInteger('74').exp10(4), '740000');
assertBigIntegerEquals(BigInteger('74').exp10(5), '7400000');
assertBigIntegerEquals(BigInteger('74').exp10(568), '740000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('74').exp10(6), '74000000');
assertBigIntegerEquals(BigInteger('74').exp10(7), '740000000');
assertBigIntegerEquals(BigInteger('74').exp10(74), '7400000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('74').exp10(8), '7400000000');
assertBigIntegerEquals(BigInteger('74').exp10(9), '74000000000');
assertBigIntegerEquals(BigInteger('741726877267167619973325056129665793788090097446918345851946144674659150945563383288173470555019454324813728624538707250061357818563470553275478682986167042300023900431181658126').exp10(-1), '74172687726716761997332505612966579378809009744691834585194614467465915094556338328817347055501945432481372862453870725006135781856347055327547868298616704230002390043118165812');
assertBigIntegerEquals(BigInteger('741726877267167619973325056129665793788090097446918345851946144674659150945563383288173470555019454324813728624538707250061357818563470553275478682986167042300023900431181658126').exp10(-10), '74172687726716761997332505612966579378809009744691834585194614467465915094556338328817347055501945432481372862453870725006135781856347055327547868298616704230002390043');
assertBigIntegerEquals(BigInteger('741726877267167619973325056129665793788090097446918345851946144674659150945563383288173470555019454324813728624538707250061357818563470553275478682986167042300023900431181658126').exp10(-11), '7417268772671676199733250561296657937880900974469183458519461446746591509455633832881734705550194543248137286245387072500613578185634705532754786829861670423000239004');
assertBigIntegerEquals(BigInteger('741726877267167619973325056129665793788090097446918345851946144674659150945563383288173470555019454324813728624538707250061357818563470553275478682986167042300023900431181658126').exp10(-12), '741726877267167619973325056129665793788090097446918345851946144674659150945563383288173470555019454324813728624538707250061357818563470553275478682986167042300023900');
assertBigIntegerEquals(BigInteger('741726877267167619973325056129665793788090097446918345851946144674659150945563383288173470555019454324813728624538707250061357818563470553275478682986167042300023900431181658126').exp10(-2), '7417268772671676199733250561296657937880900974469183458519461446746591509455633832881734705550194543248137286245387072500613578185634705532754786829861670423000239004311816581');
assertBigIntegerEquals(BigInteger('741726877267167619973325056129665793788090097446918345851946144674659150945563383288173470555019454324813728624538707250061357818563470553275478682986167042300023900431181658126').exp10(-3), '741726877267167619973325056129665793788090097446918345851946144674659150945563383288173470555019454324813728624538707250061357818563470553275478682986167042300023900431181658');
assertBigIntegerEquals(BigInteger('741726877267167619973325056129665793788090097446918345851946144674659150945563383288173470555019454324813728624538707250061357818563470553275478682986167042300023900431181658126').exp10(-4), '74172687726716761997332505612966579378809009744691834585194614467465915094556338328817347055501945432481372862453870725006135781856347055327547868298616704230002390043118165');
assertBigIntegerEquals(BigInteger('741726877267167619973325056129665793788090097446918345851946144674659150945563383288173470555019454324813728624538707250061357818563470553275478682986167042300023900431181658126').exp10(-5), '7417268772671676199733250561296657937880900974469183458519461446746591509455633832881734705550194543248137286245387072500613578185634705532754786829861670423000239004311816');
assertBigIntegerEquals(BigInteger('741726877267167619973325056129665793788090097446918345851946144674659150945563383288173470555019454324813728624538707250061357818563470553275478682986167042300023900431181658126').exp10(-6), '741726877267167619973325056129665793788090097446918345851946144674659150945563383288173470555019454324813728624538707250061357818563470553275478682986167042300023900431181');
assertBigIntegerEquals(BigInteger('741726877267167619973325056129665793788090097446918345851946144674659150945563383288173470555019454324813728624538707250061357818563470553275478682986167042300023900431181658126').exp10(-7), '74172687726716761997332505612966579378809009744691834585194614467465915094556338328817347055501945432481372862453870725006135781856347055327547868298616704230002390043118');
assertBigIntegerEquals(BigInteger('741726877267167619973325056129665793788090097446918345851946144674659150945563383288173470555019454324813728624538707250061357818563470553275478682986167042300023900431181658126').exp10(-8), '7417268772671676199733250561296657937880900974469183458519461446746591509455633832881734705550194543248137286245387072500613578185634705532754786829861670423000239004311');
assertBigIntegerEquals(BigInteger('741726877267167619973325056129665793788090097446918345851946144674659150945563383288173470555019454324813728624538707250061357818563470553275478682986167042300023900431181658126').exp10(-9), '741726877267167619973325056129665793788090097446918345851946144674659150945563383288173470555019454324813728624538707250061357818563470553275478682986167042300023900431');
assertBigIntegerEquals(BigInteger('741726877267167619973325056129665793788090097446918345851946144674659150945563383288173470555019454324813728624538707250061357818563470553275478682986167042300023900431181658126').exp10(0), '741726877267167619973325056129665793788090097446918345851946144674659150945563383288173470555019454324813728624538707250061357818563470553275478682986167042300023900431181658126');
assertBigIntegerEquals(BigInteger('741726877267167619973325056129665793788090097446918345851946144674659150945563383288173470555019454324813728624538707250061357818563470553275478682986167042300023900431181658126').exp10(1), '7417268772671676199733250561296657937880900974469183458519461446746591509455633832881734705550194543248137286245387072500613578185634705532754786829861670423000239004311816581260');
assertBigIntegerEquals(BigInteger('741726877267167619973325056129665793788090097446918345851946144674659150945563383288173470555019454324813728624538707250061357818563470553275478682986167042300023900431181658126').exp10(10), '7417268772671676199733250561296657937880900974469183458519461446746591509455633832881734705550194543248137286245387072500613578185634705532754786829861670423000239004311816581260000000000');
assertBigIntegerEquals(BigInteger('741726877267167619973325056129665793788090097446918345851946144674659150945563383288173470555019454324813728624538707250061357818563470553275478682986167042300023900431181658126').exp10(2), '74172687726716761997332505612966579378809009744691834585194614467465915094556338328817347055501945432481372862453870725006135781856347055327547868298616704230002390043118165812600');
assertBigIntegerEquals(BigInteger('741726877267167619973325056129665793788090097446918345851946144674659150945563383288173470555019454324813728624538707250061357818563470553275478682986167042300023900431181658126').exp10(3), '741726877267167619973325056129665793788090097446918345851946144674659150945563383288173470555019454324813728624538707250061357818563470553275478682986167042300023900431181658126000');
assertBigIntegerEquals(BigInteger('741726877267167619973325056129665793788090097446918345851946144674659150945563383288173470555019454324813728624538707250061357818563470553275478682986167042300023900431181658126').exp10(4), '7417268772671676199733250561296657937880900974469183458519461446746591509455633832881734705550194543248137286245387072500613578185634705532754786829861670423000239004311816581260000');
assertBigIntegerEquals(BigInteger('741726877267167619973325056129665793788090097446918345851946144674659150945563383288173470555019454324813728624538707250061357818563470553275478682986167042300023900431181658126').exp10(5), '74172687726716761997332505612966579378809009744691834585194614467465915094556338328817347055501945432481372862453870725006135781856347055327547868298616704230002390043118165812600000');
assertBigIntegerEquals(BigInteger('741726877267167619973325056129665793788090097446918345851946144674659150945563383288173470555019454324813728624538707250061357818563470553275478682986167042300023900431181658126').exp10(568), '7417268772671676199733250561296657937880900974469183458519461446746591509455633832881734705550194543248137286245387072500613578185634705532754786829861670423000239004311816581260000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('741726877267167619973325056129665793788090097446918345851946144674659150945563383288173470555019454324813728624538707250061357818563470553275478682986167042300023900431181658126').exp10(6), '741726877267167619973325056129665793788090097446918345851946144674659150945563383288173470555019454324813728624538707250061357818563470553275478682986167042300023900431181658126000000');
assertBigIntegerEquals(BigInteger('741726877267167619973325056129665793788090097446918345851946144674659150945563383288173470555019454324813728624538707250061357818563470553275478682986167042300023900431181658126').exp10(7), '7417268772671676199733250561296657937880900974469183458519461446746591509455633832881734705550194543248137286245387072500613578185634705532754786829861670423000239004311816581260000000');
assertBigIntegerEquals(BigInteger('741726877267167619973325056129665793788090097446918345851946144674659150945563383288173470555019454324813728624538707250061357818563470553275478682986167042300023900431181658126').exp10(74), '74172687726716761997332505612966579378809009744691834585194614467465915094556338328817347055501945432481372862453870725006135781856347055327547868298616704230002390043118165812600000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('741726877267167619973325056129665793788090097446918345851946144674659150945563383288173470555019454324813728624538707250061357818563470553275478682986167042300023900431181658126').exp10(8), '74172687726716761997332505612966579378809009744691834585194614467465915094556338328817347055501945432481372862453870725006135781856347055327547868298616704230002390043118165812600000000');
assertBigIntegerEquals(BigInteger('741726877267167619973325056129665793788090097446918345851946144674659150945563383288173470555019454324813728624538707250061357818563470553275478682986167042300023900431181658126').exp10(9), '741726877267167619973325056129665793788090097446918345851946144674659150945563383288173470555019454324813728624538707250061357818563470553275478682986167042300023900431181658126000000000');
assertBigIntegerEquals(BigInteger('775231172').exp10(-1), '77523117');
assertBigIntegerEquals(BigInteger('775231172').exp10(-10), '0');
assertBigIntegerEquals(BigInteger('775231172').exp10(-11), '0');
assertBigIntegerEquals(BigInteger('775231172').exp10(-12), '0');
assertBigIntegerEquals(BigInteger('775231172').exp10(-2), '7752311');
assertBigIntegerEquals(BigInteger('775231172').exp10(-3), '775231');
assertBigIntegerEquals(BigInteger('775231172').exp10(-4), '77523');
assertBigIntegerEquals(BigInteger('775231172').exp10(-5), '7752');
assertBigIntegerEquals(BigInteger('775231172').exp10(-6), '775');
assertBigIntegerEquals(BigInteger('775231172').exp10(-7), '77');
assertBigIntegerEquals(BigInteger('775231172').exp10(-8), '7');
assertBigIntegerEquals(BigInteger('775231172').exp10(-9), '0');
assertBigIntegerEquals(BigInteger('775231172').exp10(0), '775231172');
assertBigIntegerEquals(BigInteger('775231172').exp10(1), '7752311720');
assertBigIntegerEquals(BigInteger('775231172').exp10(10), '7752311720000000000');
assertBigIntegerEquals(BigInteger('775231172').exp10(2), '77523117200');
assertBigIntegerEquals(BigInteger('775231172').exp10(3), '775231172000');
assertBigIntegerEquals(BigInteger('775231172').exp10(4), '7752311720000');
assertBigIntegerEquals(BigInteger('775231172').exp10(5), '77523117200000');
assertBigIntegerEquals(BigInteger('775231172').exp10(568), '7752311720000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('775231172').exp10(6), '775231172000000');
assertBigIntegerEquals(BigInteger('775231172').exp10(7), '7752311720000000');
assertBigIntegerEquals(BigInteger('775231172').exp10(74), '77523117200000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('775231172').exp10(8), '77523117200000000');
assertBigIntegerEquals(BigInteger('775231172').exp10(9), '775231172000000000');
assertBigIntegerEquals(BigInteger('7788756649308352170040978424345039101369279128462').exp10(-1), '778875664930835217004097842434503910136927912846');
assertBigIntegerEquals(BigInteger('7788756649308352170040978424345039101369279128462').exp10(-10), '778875664930835217004097842434503910136');
assertBigIntegerEquals(BigInteger('7788756649308352170040978424345039101369279128462').exp10(-11), '77887566493083521700409784243450391013');
assertBigIntegerEquals(BigInteger('7788756649308352170040978424345039101369279128462').exp10(-12), '7788756649308352170040978424345039101');
assertBigIntegerEquals(BigInteger('7788756649308352170040978424345039101369279128462').exp10(-2), '77887566493083521700409784243450391013692791284');
assertBigIntegerEquals(BigInteger('7788756649308352170040978424345039101369279128462').exp10(-3), '7788756649308352170040978424345039101369279128');
assertBigIntegerEquals(BigInteger('7788756649308352170040978424345039101369279128462').exp10(-4), '778875664930835217004097842434503910136927912');
assertBigIntegerEquals(BigInteger('7788756649308352170040978424345039101369279128462').exp10(-5), '77887566493083521700409784243450391013692791');
assertBigIntegerEquals(BigInteger('7788756649308352170040978424345039101369279128462').exp10(-6), '7788756649308352170040978424345039101369279');
assertBigIntegerEquals(BigInteger('7788756649308352170040978424345039101369279128462').exp10(-7), '778875664930835217004097842434503910136927');
assertBigIntegerEquals(BigInteger('7788756649308352170040978424345039101369279128462').exp10(-8), '77887566493083521700409784243450391013692');
assertBigIntegerEquals(BigInteger('7788756649308352170040978424345039101369279128462').exp10(-9), '7788756649308352170040978424345039101369');
assertBigIntegerEquals(BigInteger('7788756649308352170040978424345039101369279128462').exp10(0), '7788756649308352170040978424345039101369279128462');
assertBigIntegerEquals(BigInteger('7788756649308352170040978424345039101369279128462').exp10(1), '77887566493083521700409784243450391013692791284620');
assertBigIntegerEquals(BigInteger('7788756649308352170040978424345039101369279128462').exp10(10), '77887566493083521700409784243450391013692791284620000000000');
assertBigIntegerEquals(BigInteger('7788756649308352170040978424345039101369279128462').exp10(2), '778875664930835217004097842434503910136927912846200');
assertBigIntegerEquals(BigInteger('7788756649308352170040978424345039101369279128462').exp10(3), '7788756649308352170040978424345039101369279128462000');
assertBigIntegerEquals(BigInteger('7788756649308352170040978424345039101369279128462').exp10(4), '77887566493083521700409784243450391013692791284620000');
assertBigIntegerEquals(BigInteger('7788756649308352170040978424345039101369279128462').exp10(5), '778875664930835217004097842434503910136927912846200000');
assertBigIntegerEquals(BigInteger('7788756649308352170040978424345039101369279128462').exp10(568), '77887566493083521700409784243450391013692791284620000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('7788756649308352170040978424345039101369279128462').exp10(6), '7788756649308352170040978424345039101369279128462000000');
assertBigIntegerEquals(BigInteger('7788756649308352170040978424345039101369279128462').exp10(7), '77887566493083521700409784243450391013692791284620000000');
assertBigIntegerEquals(BigInteger('7788756649308352170040978424345039101369279128462').exp10(74), '778875664930835217004097842434503910136927912846200000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('7788756649308352170040978424345039101369279128462').exp10(8), '778875664930835217004097842434503910136927912846200000000');
assertBigIntegerEquals(BigInteger('7788756649308352170040978424345039101369279128462').exp10(9), '7788756649308352170040978424345039101369279128462000000000');
assertBigIntegerEquals(BigInteger('78716745').exp10(-1), '7871674');
assertBigIntegerEquals(BigInteger('78716745').exp10(-10), '0');
assertBigIntegerEquals(BigInteger('78716745').exp10(-11), '0');
assertBigIntegerEquals(BigInteger('78716745').exp10(-12), '0');
assertBigIntegerEquals(BigInteger('78716745').exp10(-2), '787167');
assertBigIntegerEquals(BigInteger('78716745').exp10(-3), '78716');
assertBigIntegerEquals(BigInteger('78716745').exp10(-4), '7871');
assertBigIntegerEquals(BigInteger('78716745').exp10(-5), '787');
assertBigIntegerEquals(BigInteger('78716745').exp10(-6), '78');
assertBigIntegerEquals(BigInteger('78716745').exp10(-7), '7');
assertBigIntegerEquals(BigInteger('78716745').exp10(-8), '0');
assertBigIntegerEquals(BigInteger('78716745').exp10(-9), '0');
assertBigIntegerEquals(BigInteger('78716745').exp10(0), '78716745');
assertBigIntegerEquals(BigInteger('78716745').exp10(1), '787167450');
assertBigIntegerEquals(BigInteger('78716745').exp10(10), '787167450000000000');
assertBigIntegerEquals(BigInteger('78716745').exp10(2), '7871674500');
assertBigIntegerEquals(BigInteger('78716745').exp10(3), '78716745000');
assertBigIntegerEquals(BigInteger('78716745').exp10(4), '787167450000');
assertBigIntegerEquals(BigInteger('78716745').exp10(5), '7871674500000');
assertBigIntegerEquals(BigInteger('78716745').exp10(568), '787167450000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('78716745').exp10(6), '78716745000000');
assertBigIntegerEquals(BigInteger('78716745').exp10(7), '787167450000000');
assertBigIntegerEquals(BigInteger('78716745').exp10(74), '7871674500000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('78716745').exp10(8), '7871674500000000');
assertBigIntegerEquals(BigInteger('78716745').exp10(9), '78716745000000000');
assertBigIntegerEquals(BigInteger('79799964926170716').exp10(-1), '7979996492617071');
assertBigIntegerEquals(BigInteger('79799964926170716').exp10(-10), '7979996');
assertBigIntegerEquals(BigInteger('79799964926170716').exp10(-11), '797999');
assertBigIntegerEquals(BigInteger('79799964926170716').exp10(-12), '79799');
assertBigIntegerEquals(BigInteger('79799964926170716').exp10(-2), '797999649261707');
assertBigIntegerEquals(BigInteger('79799964926170716').exp10(-3), '79799964926170');
assertBigIntegerEquals(BigInteger('79799964926170716').exp10(-4), '7979996492617');
assertBigIntegerEquals(BigInteger('79799964926170716').exp10(-5), '797999649261');
assertBigIntegerEquals(BigInteger('79799964926170716').exp10(-6), '79799964926');
assertBigIntegerEquals(BigInteger('79799964926170716').exp10(-7), '7979996492');
assertBigIntegerEquals(BigInteger('79799964926170716').exp10(-8), '797999649');
assertBigIntegerEquals(BigInteger('79799964926170716').exp10(-9), '79799964');
assertBigIntegerEquals(BigInteger('79799964926170716').exp10(0), '79799964926170716');
assertBigIntegerEquals(BigInteger('79799964926170716').exp10(1), '797999649261707160');
assertBigIntegerEquals(BigInteger('79799964926170716').exp10(10), '797999649261707160000000000');
assertBigIntegerEquals(BigInteger('79799964926170716').exp10(2), '7979996492617071600');
assertBigIntegerEquals(BigInteger('79799964926170716').exp10(3), '79799964926170716000');
assertBigIntegerEquals(BigInteger('79799964926170716').exp10(4), '797999649261707160000');
assertBigIntegerEquals(BigInteger('79799964926170716').exp10(5), '7979996492617071600000');
assertBigIntegerEquals(BigInteger('79799964926170716').exp10(568), '797999649261707160000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('79799964926170716').exp10(6), '79799964926170716000000');
assertBigIntegerEquals(BigInteger('79799964926170716').exp10(7), '797999649261707160000000');
assertBigIntegerEquals(BigInteger('79799964926170716').exp10(74), '7979996492617071600000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('79799964926170716').exp10(8), '7979996492617071600000000');
assertBigIntegerEquals(BigInteger('79799964926170716').exp10(9), '79799964926170716000000000');
assertBigIntegerEquals(BigInteger('8').exp10(-1), '0');
assertBigIntegerEquals(BigInteger('8').exp10(-10), '0');
assertBigIntegerEquals(BigInteger('8').exp10(-11), '0');
assertBigIntegerEquals(BigInteger('8').exp10(-12), '0');
assertBigIntegerEquals(BigInteger('8').exp10(-2), '0');
assertBigIntegerEquals(BigInteger('8').exp10(-3), '0');
assertBigIntegerEquals(BigInteger('8').exp10(-4), '0');
assertBigIntegerEquals(BigInteger('8').exp10(-5), '0');
assertBigIntegerEquals(BigInteger('8').exp10(-6), '0');
assertBigIntegerEquals(BigInteger('8').exp10(-7), '0');
assertBigIntegerEquals(BigInteger('8').exp10(-8), '0');
assertBigIntegerEquals(BigInteger('8').exp10(-9), '0');
assertBigIntegerEquals(BigInteger('8').exp10(0), '8');
assertBigIntegerEquals(BigInteger('8').exp10(1), '80');
assertBigIntegerEquals(BigInteger('8').exp10(10), '80000000000');
assertBigIntegerEquals(BigInteger('8').exp10(2), '800');
assertBigIntegerEquals(BigInteger('8').exp10(3), '8000');
assertBigIntegerEquals(BigInteger('8').exp10(4), '80000');
assertBigIntegerEquals(BigInteger('8').exp10(5), '800000');
assertBigIntegerEquals(BigInteger('8').exp10(568), '80000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('8').exp10(6), '8000000');
assertBigIntegerEquals(BigInteger('8').exp10(7), '80000000');
assertBigIntegerEquals(BigInteger('8').exp10(74), '800000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('8').exp10(8), '800000000');
assertBigIntegerEquals(BigInteger('8').exp10(9), '8000000000');
assertBigIntegerEquals(BigInteger('8452').exp10(-1), '845');
assertBigIntegerEquals(BigInteger('8452').exp10(-10), '0');
assertBigIntegerEquals(BigInteger('8452').exp10(-11), '0');
assertBigIntegerEquals(BigInteger('8452').exp10(-12), '0');
assertBigIntegerEquals(BigInteger('8452').exp10(-2), '84');
assertBigIntegerEquals(BigInteger('8452').exp10(-3), '8');
assertBigIntegerEquals(BigInteger('8452').exp10(-4), '0');
assertBigIntegerEquals(BigInteger('8452').exp10(-5), '0');
assertBigIntegerEquals(BigInteger('8452').exp10(-6), '0');
assertBigIntegerEquals(BigInteger('8452').exp10(-7), '0');
assertBigIntegerEquals(BigInteger('8452').exp10(-8), '0');
assertBigIntegerEquals(BigInteger('8452').exp10(-9), '0');
assertBigIntegerEquals(BigInteger('8452').exp10(0), '8452');
assertBigIntegerEquals(BigInteger('8452').exp10(1), '84520');
assertBigIntegerEquals(BigInteger('8452').exp10(10), '84520000000000');
assertBigIntegerEquals(BigInteger('8452').exp10(2), '845200');
assertBigIntegerEquals(BigInteger('8452').exp10(3), '8452000');
assertBigIntegerEquals(BigInteger('8452').exp10(4), '84520000');
assertBigIntegerEquals(BigInteger('8452').exp10(5), '845200000');
assertBigIntegerEquals(BigInteger('8452').exp10(568), '84520000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('8452').exp10(6), '8452000000');
assertBigIntegerEquals(BigInteger('8452').exp10(7), '84520000000');
assertBigIntegerEquals(BigInteger('8452').exp10(74), '845200000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('8452').exp10(8), '845200000000');
assertBigIntegerEquals(BigInteger('8452').exp10(9), '8452000000000');
assertBigIntegerEquals(BigInteger('88').exp10(-1), '8');
assertBigIntegerEquals(BigInteger('88').exp10(-10), '0');
assertBigIntegerEquals(BigInteger('88').exp10(-11), '0');
assertBigIntegerEquals(BigInteger('88').exp10(-12), '0');
assertBigIntegerEquals(BigInteger('88').exp10(-2), '0');
assertBigIntegerEquals(BigInteger('88').exp10(-3), '0');
assertBigIntegerEquals(BigInteger('88').exp10(-4), '0');
assertBigIntegerEquals(BigInteger('88').exp10(-5), '0');
assertBigIntegerEquals(BigInteger('88').exp10(-6), '0');
assertBigIntegerEquals(BigInteger('88').exp10(-7), '0');
assertBigIntegerEquals(BigInteger('88').exp10(-8), '0');
assertBigIntegerEquals(BigInteger('88').exp10(-9), '0');
assertBigIntegerEquals(BigInteger('88').exp10(0), '88');
assertBigIntegerEquals(BigInteger('88').exp10(1), '880');
assertBigIntegerEquals(BigInteger('88').exp10(10), '880000000000');
assertBigIntegerEquals(BigInteger('88').exp10(2), '8800');
assertBigIntegerEquals(BigInteger('88').exp10(3), '88000');
assertBigIntegerEquals(BigInteger('88').exp10(4), '880000');
assertBigIntegerEquals(BigInteger('88').exp10(5), '8800000');
assertBigIntegerEquals(BigInteger('88').exp10(568), '880000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('88').exp10(6), '88000000');
assertBigIntegerEquals(BigInteger('88').exp10(7), '880000000');
assertBigIntegerEquals(BigInteger('88').exp10(74), '8800000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('88').exp10(8), '8800000000');
assertBigIntegerEquals(BigInteger('88').exp10(9), '88000000000');
assertBigIntegerEquals(BigInteger('9').exp10(-1), '0');
assertBigIntegerEquals(BigInteger('9').exp10(-10), '0');
assertBigIntegerEquals(BigInteger('9').exp10(-11), '0');
assertBigIntegerEquals(BigInteger('9').exp10(-12), '0');
assertBigIntegerEquals(BigInteger('9').exp10(-2), '0');
assertBigIntegerEquals(BigInteger('9').exp10(-3), '0');
assertBigIntegerEquals(BigInteger('9').exp10(-4), '0');
assertBigIntegerEquals(BigInteger('9').exp10(-5), '0');
assertBigIntegerEquals(BigInteger('9').exp10(-6), '0');
assertBigIntegerEquals(BigInteger('9').exp10(-7), '0');
assertBigIntegerEquals(BigInteger('9').exp10(-8), '0');
assertBigIntegerEquals(BigInteger('9').exp10(-9), '0');
assertBigIntegerEquals(BigInteger('9').exp10(0), '9');
assertBigIntegerEquals(BigInteger('9').exp10(1), '90');
assertBigIntegerEquals(BigInteger('9').exp10(10), '90000000000');
assertBigIntegerEquals(BigInteger('9').exp10(2), '900');
assertBigIntegerEquals(BigInteger('9').exp10(3), '9000');
assertBigIntegerEquals(BigInteger('9').exp10(4), '90000');
assertBigIntegerEquals(BigInteger('9').exp10(5), '900000');
assertBigIntegerEquals(BigInteger('9').exp10(568), '90000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('9').exp10(6), '9000000');
assertBigIntegerEquals(BigInteger('9').exp10(7), '90000000');
assertBigIntegerEquals(BigInteger('9').exp10(74), '900000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('9').exp10(8), '900000000');
assertBigIntegerEquals(BigInteger('9').exp10(9), '9000000000');
assertBigIntegerEquals(BigInteger('903380908177068729').exp10(-1), '90338090817706872');
assertBigIntegerEquals(BigInteger('903380908177068729').exp10(-10), '90338090');
assertBigIntegerEquals(BigInteger('903380908177068729').exp10(-11), '9033809');
assertBigIntegerEquals(BigInteger('903380908177068729').exp10(-12), '903380');
assertBigIntegerEquals(BigInteger('903380908177068729').exp10(-2), '9033809081770687');
assertBigIntegerEquals(BigInteger('903380908177068729').exp10(-3), '903380908177068');
assertBigIntegerEquals(BigInteger('903380908177068729').exp10(-4), '90338090817706');
assertBigIntegerEquals(BigInteger('903380908177068729').exp10(-5), '9033809081770');
assertBigIntegerEquals(BigInteger('903380908177068729').exp10(-6), '903380908177');
assertBigIntegerEquals(BigInteger('903380908177068729').exp10(-7), '90338090817');
assertBigIntegerEquals(BigInteger('903380908177068729').exp10(-8), '9033809081');
assertBigIntegerEquals(BigInteger('903380908177068729').exp10(-9), '903380908');
assertBigIntegerEquals(BigInteger('903380908177068729').exp10(0), '903380908177068729');
assertBigIntegerEquals(BigInteger('903380908177068729').exp10(1), '9033809081770687290');
assertBigIntegerEquals(BigInteger('903380908177068729').exp10(10), '9033809081770687290000000000');
assertBigIntegerEquals(BigInteger('903380908177068729').exp10(2), '90338090817706872900');
assertBigIntegerEquals(BigInteger('903380908177068729').exp10(3), '903380908177068729000');
assertBigIntegerEquals(BigInteger('903380908177068729').exp10(4), '9033809081770687290000');
assertBigIntegerEquals(BigInteger('903380908177068729').exp10(5), '90338090817706872900000');
assertBigIntegerEquals(BigInteger('903380908177068729').exp10(568), '9033809081770687290000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('903380908177068729').exp10(6), '903380908177068729000000');
assertBigIntegerEquals(BigInteger('903380908177068729').exp10(7), '9033809081770687290000000');
assertBigIntegerEquals(BigInteger('903380908177068729').exp10(74), '90338090817706872900000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('903380908177068729').exp10(8), '90338090817706872900000000');
assertBigIntegerEquals(BigInteger('903380908177068729').exp10(9), '903380908177068729000000000');
assertBigIntegerEquals(BigInteger('92418648063').exp10(-1), '9241864806');
assertBigIntegerEquals(BigInteger('92418648063').exp10(-10), '9');
assertBigIntegerEquals(BigInteger('92418648063').exp10(-11), '0');
assertBigIntegerEquals(BigInteger('92418648063').exp10(-12), '0');
assertBigIntegerEquals(BigInteger('92418648063').exp10(-2), '924186480');
assertBigIntegerEquals(BigInteger('92418648063').exp10(-3), '92418648');
assertBigIntegerEquals(BigInteger('92418648063').exp10(-4), '9241864');
assertBigIntegerEquals(BigInteger('92418648063').exp10(-5), '924186');
assertBigIntegerEquals(BigInteger('92418648063').exp10(-6), '92418');
assertBigIntegerEquals(BigInteger('92418648063').exp10(-7), '9241');
assertBigIntegerEquals(BigInteger('92418648063').exp10(-8), '924');
assertBigIntegerEquals(BigInteger('92418648063').exp10(-9), '92');
assertBigIntegerEquals(BigInteger('92418648063').exp10(0), '92418648063');
assertBigIntegerEquals(BigInteger('92418648063').exp10(1), '924186480630');
assertBigIntegerEquals(BigInteger('92418648063').exp10(10), '924186480630000000000');
assertBigIntegerEquals(BigInteger('92418648063').exp10(2), '9241864806300');
assertBigIntegerEquals(BigInteger('92418648063').exp10(3), '92418648063000');
assertBigIntegerEquals(BigInteger('92418648063').exp10(4), '924186480630000');
assertBigIntegerEquals(BigInteger('92418648063').exp10(5), '9241864806300000');
assertBigIntegerEquals(BigInteger('92418648063').exp10(568), '924186480630000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('92418648063').exp10(6), '92418648063000000');
assertBigIntegerEquals(BigInteger('92418648063').exp10(7), '924186480630000000');
assertBigIntegerEquals(BigInteger('92418648063').exp10(74), '9241864806300000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('92418648063').exp10(8), '9241864806300000000');
assertBigIntegerEquals(BigInteger('92418648063').exp10(9), '92418648063000000000');
assertBigIntegerEquals(BigInteger('92943465').exp10(-1), '9294346');
assertBigIntegerEquals(BigInteger('92943465').exp10(-10), '0');
assertBigIntegerEquals(BigInteger('92943465').exp10(-11), '0');
assertBigIntegerEquals(BigInteger('92943465').exp10(-12), '0');
assertBigIntegerEquals(BigInteger('92943465').exp10(-2), '929434');
assertBigIntegerEquals(BigInteger('92943465').exp10(-3), '92943');
assertBigIntegerEquals(BigInteger('92943465').exp10(-4), '9294');
assertBigIntegerEquals(BigInteger('92943465').exp10(-5), '929');
assertBigIntegerEquals(BigInteger('92943465').exp10(-6), '92');
assertBigIntegerEquals(BigInteger('92943465').exp10(-7), '9');
assertBigIntegerEquals(BigInteger('92943465').exp10(-8), '0');
assertBigIntegerEquals(BigInteger('92943465').exp10(-9), '0');
assertBigIntegerEquals(BigInteger('92943465').exp10(0), '92943465');
assertBigIntegerEquals(BigInteger('92943465').exp10(1), '929434650');
assertBigIntegerEquals(BigInteger('92943465').exp10(10), '929434650000000000');
assertBigIntegerEquals(BigInteger('92943465').exp10(2), '9294346500');
assertBigIntegerEquals(BigInteger('92943465').exp10(3), '92943465000');
assertBigIntegerEquals(BigInteger('92943465').exp10(4), '929434650000');
assertBigIntegerEquals(BigInteger('92943465').exp10(5), '9294346500000');
assertBigIntegerEquals(BigInteger('92943465').exp10(568), '929434650000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('92943465').exp10(6), '92943465000000');
assertBigIntegerEquals(BigInteger('92943465').exp10(7), '929434650000000');
assertBigIntegerEquals(BigInteger('92943465').exp10(74), '9294346500000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('92943465').exp10(8), '9294346500000000');
assertBigIntegerEquals(BigInteger('92943465').exp10(9), '92943465000000000');
assertBigIntegerEquals(BigInteger('9296774590944767474820600872642800769619683318924936104009986193324803815411614362179498856768115670315738686032176477835121223726227113448428529006128447204').exp10(-1), '929677459094476747482060087264280076961968331892493610400998619332480381541161436217949885676811567031573868603217647783512122372622711344842852900612844720');
assertBigIntegerEquals(BigInteger('9296774590944767474820600872642800769619683318924936104009986193324803815411614362179498856768115670315738686032176477835121223726227113448428529006128447204').exp10(-10), '929677459094476747482060087264280076961968331892493610400998619332480381541161436217949885676811567031573868603217647783512122372622711344842852900');
assertBigIntegerEquals(BigInteger('9296774590944767474820600872642800769619683318924936104009986193324803815411614362179498856768115670315738686032176477835121223726227113448428529006128447204').exp10(-11), '92967745909447674748206008726428007696196833189249361040099861933248038154116143621794988567681156703157386860321764778351212237262271134484285290');
assertBigIntegerEquals(BigInteger('9296774590944767474820600872642800769619683318924936104009986193324803815411614362179498856768115670315738686032176477835121223726227113448428529006128447204').exp10(-12), '9296774590944767474820600872642800769619683318924936104009986193324803815411614362179498856768115670315738686032176477835121223726227113448428529');
assertBigIntegerEquals(BigInteger('9296774590944767474820600872642800769619683318924936104009986193324803815411614362179498856768115670315738686032176477835121223726227113448428529006128447204').exp10(-2), '92967745909447674748206008726428007696196833189249361040099861933248038154116143621794988567681156703157386860321764778351212237262271134484285290061284472');
assertBigIntegerEquals(BigInteger('9296774590944767474820600872642800769619683318924936104009986193324803815411614362179498856768115670315738686032176477835121223726227113448428529006128447204').exp10(-3), '9296774590944767474820600872642800769619683318924936104009986193324803815411614362179498856768115670315738686032176477835121223726227113448428529006128447');
assertBigIntegerEquals(BigInteger('9296774590944767474820600872642800769619683318924936104009986193324803815411614362179498856768115670315738686032176477835121223726227113448428529006128447204').exp10(-4), '929677459094476747482060087264280076961968331892493610400998619332480381541161436217949885676811567031573868603217647783512122372622711344842852900612844');
assertBigIntegerEquals(BigInteger('9296774590944767474820600872642800769619683318924936104009986193324803815411614362179498856768115670315738686032176477835121223726227113448428529006128447204').exp10(-5), '92967745909447674748206008726428007696196833189249361040099861933248038154116143621794988567681156703157386860321764778351212237262271134484285290061284');
assertBigIntegerEquals(BigInteger('9296774590944767474820600872642800769619683318924936104009986193324803815411614362179498856768115670315738686032176477835121223726227113448428529006128447204').exp10(-6), '9296774590944767474820600872642800769619683318924936104009986193324803815411614362179498856768115670315738686032176477835121223726227113448428529006128');
assertBigIntegerEquals(BigInteger('9296774590944767474820600872642800769619683318924936104009986193324803815411614362179498856768115670315738686032176477835121223726227113448428529006128447204').exp10(-7), '929677459094476747482060087264280076961968331892493610400998619332480381541161436217949885676811567031573868603217647783512122372622711344842852900612');
assertBigIntegerEquals(BigInteger('9296774590944767474820600872642800769619683318924936104009986193324803815411614362179498856768115670315738686032176477835121223726227113448428529006128447204').exp10(-8), '92967745909447674748206008726428007696196833189249361040099861933248038154116143621794988567681156703157386860321764778351212237262271134484285290061');
assertBigIntegerEquals(BigInteger('9296774590944767474820600872642800769619683318924936104009986193324803815411614362179498856768115670315738686032176477835121223726227113448428529006128447204').exp10(-9), '9296774590944767474820600872642800769619683318924936104009986193324803815411614362179498856768115670315738686032176477835121223726227113448428529006');
assertBigIntegerEquals(BigInteger('9296774590944767474820600872642800769619683318924936104009986193324803815411614362179498856768115670315738686032176477835121223726227113448428529006128447204').exp10(0), '9296774590944767474820600872642800769619683318924936104009986193324803815411614362179498856768115670315738686032176477835121223726227113448428529006128447204');
assertBigIntegerEquals(BigInteger('9296774590944767474820600872642800769619683318924936104009986193324803815411614362179498856768115670315738686032176477835121223726227113448428529006128447204').exp10(1), '92967745909447674748206008726428007696196833189249361040099861933248038154116143621794988567681156703157386860321764778351212237262271134484285290061284472040');
assertBigIntegerEquals(BigInteger('9296774590944767474820600872642800769619683318924936104009986193324803815411614362179498856768115670315738686032176477835121223726227113448428529006128447204').exp10(10), '92967745909447674748206008726428007696196833189249361040099861933248038154116143621794988567681156703157386860321764778351212237262271134484285290061284472040000000000');
assertBigIntegerEquals(BigInteger('9296774590944767474820600872642800769619683318924936104009986193324803815411614362179498856768115670315738686032176477835121223726227113448428529006128447204').exp10(2), '929677459094476747482060087264280076961968331892493610400998619332480381541161436217949885676811567031573868603217647783512122372622711344842852900612844720400');
assertBigIntegerEquals(BigInteger('9296774590944767474820600872642800769619683318924936104009986193324803815411614362179498856768115670315738686032176477835121223726227113448428529006128447204').exp10(3), '9296774590944767474820600872642800769619683318924936104009986193324803815411614362179498856768115670315738686032176477835121223726227113448428529006128447204000');
assertBigIntegerEquals(BigInteger('9296774590944767474820600872642800769619683318924936104009986193324803815411614362179498856768115670315738686032176477835121223726227113448428529006128447204').exp10(4), '92967745909447674748206008726428007696196833189249361040099861933248038154116143621794988567681156703157386860321764778351212237262271134484285290061284472040000');
assertBigIntegerEquals(BigInteger('9296774590944767474820600872642800769619683318924936104009986193324803815411614362179498856768115670315738686032176477835121223726227113448428529006128447204').exp10(5), '929677459094476747482060087264280076961968331892493610400998619332480381541161436217949885676811567031573868603217647783512122372622711344842852900612844720400000');
assertBigIntegerEquals(BigInteger('9296774590944767474820600872642800769619683318924936104009986193324803815411614362179498856768115670315738686032176477835121223726227113448428529006128447204').exp10(568), '92967745909447674748206008726428007696196833189249361040099861933248038154116143621794988567681156703157386860321764778351212237262271134484285290061284472040000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('9296774590944767474820600872642800769619683318924936104009986193324803815411614362179498856768115670315738686032176477835121223726227113448428529006128447204').exp10(6), '9296774590944767474820600872642800769619683318924936104009986193324803815411614362179498856768115670315738686032176477835121223726227113448428529006128447204000000');
assertBigIntegerEquals(BigInteger('9296774590944767474820600872642800769619683318924936104009986193324803815411614362179498856768115670315738686032176477835121223726227113448428529006128447204').exp10(7), '92967745909447674748206008726428007696196833189249361040099861933248038154116143621794988567681156703157386860321764778351212237262271134484285290061284472040000000');
assertBigIntegerEquals(BigInteger('9296774590944767474820600872642800769619683318924936104009986193324803815411614362179498856768115670315738686032176477835121223726227113448428529006128447204').exp10(74), '929677459094476747482060087264280076961968331892493610400998619332480381541161436217949885676811567031573868603217647783512122372622711344842852900612844720400000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('9296774590944767474820600872642800769619683318924936104009986193324803815411614362179498856768115670315738686032176477835121223726227113448428529006128447204').exp10(8), '929677459094476747482060087264280076961968331892493610400998619332480381541161436217949885676811567031573868603217647783512122372622711344842852900612844720400000000');
assertBigIntegerEquals(BigInteger('9296774590944767474820600872642800769619683318924936104009986193324803815411614362179498856768115670315738686032176477835121223726227113448428529006128447204').exp10(9), '9296774590944767474820600872642800769619683318924936104009986193324803815411614362179498856768115670315738686032176477835121223726227113448428529006128447204000000000');
assertBigIntegerEquals(BigInteger('936311839198780769').exp10(-1), '93631183919878076');
assertBigIntegerEquals(BigInteger('936311839198780769').exp10(-10), '93631183');
assertBigIntegerEquals(BigInteger('936311839198780769').exp10(-11), '9363118');
assertBigIntegerEquals(BigInteger('936311839198780769').exp10(-12), '936311');
assertBigIntegerEquals(BigInteger('936311839198780769').exp10(-2), '9363118391987807');
assertBigIntegerEquals(BigInteger('936311839198780769').exp10(-3), '936311839198780');
assertBigIntegerEquals(BigInteger('936311839198780769').exp10(-4), '93631183919878');
assertBigIntegerEquals(BigInteger('936311839198780769').exp10(-5), '9363118391987');
assertBigIntegerEquals(BigInteger('936311839198780769').exp10(-6), '936311839198');
assertBigIntegerEquals(BigInteger('936311839198780769').exp10(-7), '93631183919');
assertBigIntegerEquals(BigInteger('936311839198780769').exp10(-8), '9363118391');
assertBigIntegerEquals(BigInteger('936311839198780769').exp10(-9), '936311839');
assertBigIntegerEquals(BigInteger('936311839198780769').exp10(0), '936311839198780769');
assertBigIntegerEquals(BigInteger('936311839198780769').exp10(1), '9363118391987807690');
assertBigIntegerEquals(BigInteger('936311839198780769').exp10(10), '9363118391987807690000000000');
assertBigIntegerEquals(BigInteger('936311839198780769').exp10(2), '93631183919878076900');
assertBigIntegerEquals(BigInteger('936311839198780769').exp10(3), '936311839198780769000');
assertBigIntegerEquals(BigInteger('936311839198780769').exp10(4), '9363118391987807690000');
assertBigIntegerEquals(BigInteger('936311839198780769').exp10(5), '93631183919878076900000');
assertBigIntegerEquals(BigInteger('936311839198780769').exp10(568), '9363118391987807690000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('936311839198780769').exp10(6), '936311839198780769000000');
assertBigIntegerEquals(BigInteger('936311839198780769').exp10(7), '9363118391987807690000000');
assertBigIntegerEquals(BigInteger('936311839198780769').exp10(74), '93631183919878076900000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('936311839198780769').exp10(8), '93631183919878076900000000');
assertBigIntegerEquals(BigInteger('936311839198780769').exp10(9), '936311839198780769000000000');
assertBigIntegerEquals(BigInteger('9511570882781').exp10(-1), '951157088278');
assertBigIntegerEquals(BigInteger('9511570882781').exp10(-10), '951');
assertBigIntegerEquals(BigInteger('9511570882781').exp10(-11), '95');
assertBigIntegerEquals(BigInteger('9511570882781').exp10(-12), '9');
assertBigIntegerEquals(BigInteger('9511570882781').exp10(-2), '95115708827');
assertBigIntegerEquals(BigInteger('9511570882781').exp10(-3), '9511570882');
assertBigIntegerEquals(BigInteger('9511570882781').exp10(-4), '951157088');
assertBigIntegerEquals(BigInteger('9511570882781').exp10(-5), '95115708');
assertBigIntegerEquals(BigInteger('9511570882781').exp10(-6), '9511570');
assertBigIntegerEquals(BigInteger('9511570882781').exp10(-7), '951157');
assertBigIntegerEquals(BigInteger('9511570882781').exp10(-8), '95115');
assertBigIntegerEquals(BigInteger('9511570882781').exp10(-9), '9511');
assertBigIntegerEquals(BigInteger('9511570882781').exp10(0), '9511570882781');
assertBigIntegerEquals(BigInteger('9511570882781').exp10(1), '95115708827810');
assertBigIntegerEquals(BigInteger('9511570882781').exp10(10), '95115708827810000000000');
assertBigIntegerEquals(BigInteger('9511570882781').exp10(2), '951157088278100');
assertBigIntegerEquals(BigInteger('9511570882781').exp10(3), '9511570882781000');
assertBigIntegerEquals(BigInteger('9511570882781').exp10(4), '95115708827810000');
assertBigIntegerEquals(BigInteger('9511570882781').exp10(5), '951157088278100000');
assertBigIntegerEquals(BigInteger('9511570882781').exp10(568), '95115708827810000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('9511570882781').exp10(6), '9511570882781000000');
assertBigIntegerEquals(BigInteger('9511570882781').exp10(7), '95115708827810000000');
assertBigIntegerEquals(BigInteger('9511570882781').exp10(74), '951157088278100000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('9511570882781').exp10(8), '951157088278100000000');
assertBigIntegerEquals(BigInteger('9511570882781').exp10(9), '9511570882781000000000');
assertBigIntegerEquals(BigInteger('9588638393973').exp10(-1), '958863839397');
assertBigIntegerEquals(BigInteger('9588638393973').exp10(-10), '958');
assertBigIntegerEquals(BigInteger('9588638393973').exp10(-11), '95');
assertBigIntegerEquals(BigInteger('9588638393973').exp10(-12), '9');
assertBigIntegerEquals(BigInteger('9588638393973').exp10(-2), '95886383939');
assertBigIntegerEquals(BigInteger('9588638393973').exp10(-3), '9588638393');
assertBigIntegerEquals(BigInteger('9588638393973').exp10(-4), '958863839');
assertBigIntegerEquals(BigInteger('9588638393973').exp10(-5), '95886383');
assertBigIntegerEquals(BigInteger('9588638393973').exp10(-6), '9588638');
assertBigIntegerEquals(BigInteger('9588638393973').exp10(-7), '958863');
assertBigIntegerEquals(BigInteger('9588638393973').exp10(-8), '95886');
assertBigIntegerEquals(BigInteger('9588638393973').exp10(-9), '9588');
assertBigIntegerEquals(BigInteger('9588638393973').exp10(0), '9588638393973');
assertBigIntegerEquals(BigInteger('9588638393973').exp10(1), '95886383939730');
assertBigIntegerEquals(BigInteger('9588638393973').exp10(10), '95886383939730000000000');
assertBigIntegerEquals(BigInteger('9588638393973').exp10(2), '958863839397300');
assertBigIntegerEquals(BigInteger('9588638393973').exp10(3), '9588638393973000');
assertBigIntegerEquals(BigInteger('9588638393973').exp10(4), '95886383939730000');
assertBigIntegerEquals(BigInteger('9588638393973').exp10(5), '958863839397300000');
assertBigIntegerEquals(BigInteger('9588638393973').exp10(568), '95886383939730000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('9588638393973').exp10(6), '9588638393973000000');
assertBigIntegerEquals(BigInteger('9588638393973').exp10(7), '95886383939730000000');
assertBigIntegerEquals(BigInteger('9588638393973').exp10(74), '958863839397300000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('9588638393973').exp10(8), '958863839397300000000');
assertBigIntegerEquals(BigInteger('9588638393973').exp10(9), '9588638393973000000000');
assertBigIntegerEquals(BigInteger('988439325760').exp10(-1), '98843932576');
assertBigIntegerEquals(BigInteger('988439325760').exp10(-10), '98');
assertBigIntegerEquals(BigInteger('988439325760').exp10(-11), '9');
assertBigIntegerEquals(BigInteger('988439325760').exp10(-12), '0');
assertBigIntegerEquals(BigInteger('988439325760').exp10(-2), '9884393257');
assertBigIntegerEquals(BigInteger('988439325760').exp10(-3), '988439325');
assertBigIntegerEquals(BigInteger('988439325760').exp10(-4), '98843932');
assertBigIntegerEquals(BigInteger('988439325760').exp10(-5), '9884393');
assertBigIntegerEquals(BigInteger('988439325760').exp10(-6), '988439');
assertBigIntegerEquals(BigInteger('988439325760').exp10(-7), '98843');
assertBigIntegerEquals(BigInteger('988439325760').exp10(-8), '9884');
assertBigIntegerEquals(BigInteger('988439325760').exp10(-9), '988');
assertBigIntegerEquals(BigInteger('988439325760').exp10(0), '988439325760');
assertBigIntegerEquals(BigInteger('988439325760').exp10(1), '9884393257600');
assertBigIntegerEquals(BigInteger('988439325760').exp10(10), '9884393257600000000000');
assertBigIntegerEquals(BigInteger('988439325760').exp10(2), '98843932576000');
assertBigIntegerEquals(BigInteger('988439325760').exp10(3), '988439325760000');
assertBigIntegerEquals(BigInteger('988439325760').exp10(4), '9884393257600000');
assertBigIntegerEquals(BigInteger('988439325760').exp10(5), '98843932576000000');
assertBigIntegerEquals(BigInteger('988439325760').exp10(568), '9884393257600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('988439325760').exp10(6), '988439325760000000');
assertBigIntegerEquals(BigInteger('988439325760').exp10(7), '9884393257600000000');
assertBigIntegerEquals(BigInteger('988439325760').exp10(74), '98843932576000000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('988439325760').exp10(8), '98843932576000000000');
assertBigIntegerEquals(BigInteger('988439325760').exp10(9), '988439325760000000000');
assertBigIntegerEquals(BigInteger('999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999').exp10(-1), '99999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999');
assertBigIntegerEquals(BigInteger('999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999').exp10(-10), '99999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999');
assertBigIntegerEquals(BigInteger('999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999').exp10(-11), '9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999');
assertBigIntegerEquals(BigInteger('999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999').exp10(-12), '999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999');
assertBigIntegerEquals(BigInteger('999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999').exp10(-2), '9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999');
assertBigIntegerEquals(BigInteger('999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999').exp10(-3), '999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999');
assertBigIntegerEquals(BigInteger('999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999').exp10(-4), '99999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999');
assertBigIntegerEquals(BigInteger('999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999').exp10(-5), '9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999');
assertBigIntegerEquals(BigInteger('999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999').exp10(-6), '999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999');
assertBigIntegerEquals(BigInteger('999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999').exp10(-7), '99999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999');
assertBigIntegerEquals(BigInteger('999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999').exp10(-8), '9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999');
assertBigIntegerEquals(BigInteger('999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999').exp10(-9), '999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999');
assertBigIntegerEquals(BigInteger('999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999').exp10(0), '999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999');
assertBigIntegerEquals(BigInteger('999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999').exp10(1), '9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999990');
assertBigIntegerEquals(BigInteger('999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999').exp10(10), '9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999990000000000');
assertBigIntegerEquals(BigInteger('999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999').exp10(2), '99999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999900');
assertBigIntegerEquals(BigInteger('999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999').exp10(3), '999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999000');
assertBigIntegerEquals(BigInteger('999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999').exp10(4), '9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999990000');
assertBigIntegerEquals(BigInteger('999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999').exp10(5), '99999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999900000');
assertBigIntegerEquals(BigInteger('999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999').exp
assertBigIntegerEquals(BigInteger('999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999').exp10(6), '999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999000000');
assertBigIntegerEquals(BigInteger('999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999').exp10(7), '9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999990000000');
assertBigIntegerEquals(BigInteger('999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999').exp10(74), '99999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999900000000000000000000000000000000000000000000000000000000000000000000000000');
assertBigIntegerEquals(BigInteger('999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999').exp10(8), '99999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999900000000');
assertBigIntegerEquals(BigInteger('999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999').exp10(9), '999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999000000000');
